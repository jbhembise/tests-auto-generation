package jbhembise.testauto.example3;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Class<?> wildcardClass7 = stack5.getClass();
        java.lang.Class<?> wildcardClass8 = stack5.getClass();
        boolean boolean9 = stack5.isFull();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass19 = stack10.getClass();
        stack5.push((java.lang.Object) stack10);
        java.lang.Class<?> wildcardClass21 = stack5.getClass();
        stack0.push((java.lang.Object) wildcardClass21);
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Class<?> wildcardClass25 = stack23.getClass();
        java.lang.Class<?> wildcardClass26 = stack23.getClass();
        boolean boolean27 = stack23.isFull();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        stack28.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass37 = stack28.getClass();
        stack23.push((java.lang.Object) stack28);
        boolean boolean39 = stack23.isFull();
        int int40 = stack23.size();
        stack0.push((java.lang.Object) stack23);
        stack23.pop();
        stack23.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isFull();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) true);
        boolean boolean14 = stack9.isEmpty();
        boolean boolean15 = stack9.isFull();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) int16);
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        java.lang.Class<?> wildcardClass21 = stack19.getClass();
        java.lang.Class<?> wildcardClass22 = stack19.getClass();
        boolean boolean23 = stack19.isFull();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Object obj26 = null;
        stack24.push(obj26);
        stack24.pop();
        int int29 = stack24.size();
        stack24.clear();
        stack24.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass33 = stack24.getClass();
        stack19.push((java.lang.Object) stack24);
        jbhembise.testauto.example3.Stack stack35 = new jbhembise.testauto.example3.Stack();
        int int36 = stack35.size();
        java.lang.Object obj37 = null;
        stack35.push(obj37);
        java.lang.Class<?> wildcardClass39 = stack35.getClass();
        stack24.push((java.lang.Object) wildcardClass39);
        stack0.push((java.lang.Object) wildcardClass39);
        int int42 = stack0.size();
        java.lang.Class<?> wildcardClass43 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        java.lang.Class<?> wildcardClass17 = stack5.getClass();
        stack5.pop();
        java.lang.Class<?> wildcardClass19 = stack5.getClass();
        boolean boolean20 = stack5.isFull();
        int int21 = stack5.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.push((java.lang.Object) (byte) 100);
        boolean boolean14 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        int int16 = stack15.size();
        java.lang.Object obj17 = null;
        stack15.push(obj17);
        stack15.pop();
        int int20 = stack15.size();
        stack15.clear();
        stack15.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass24 = stack15.getClass();
        boolean boolean25 = stack15.isEmpty();
        boolean boolean26 = stack15.isFull();
        boolean boolean27 = stack15.isEmpty();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        stack28.clear();
        boolean boolean31 = stack28.isFull();
        stack28.clear();
        stack28.clear();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        int int35 = stack34.size();
        stack34.clear();
        stack34.push((java.lang.Object) true);
        boolean boolean39 = stack34.isEmpty();
        int int40 = stack34.size();
        int int41 = stack34.size();
        stack28.push((java.lang.Object) stack34);
        stack15.push((java.lang.Object) stack34);
        boolean boolean44 = stack15.isEmpty();
        jbhembise.testauto.example3.Stack stack45 = new jbhembise.testauto.example3.Stack();
        int int46 = stack45.size();
        java.lang.Object obj47 = null;
        stack45.push(obj47);
        stack45.pop();
        int int50 = stack45.size();
        stack45.clear();
        stack45.push((java.lang.Object) 10);
        java.lang.Object obj54 = stack45.last();
        boolean boolean55 = stack45.isFull();
        stack45.pop();
        boolean boolean57 = stack45.isFull();
        boolean boolean58 = stack45.isEmpty();
        boolean boolean59 = stack45.isEmpty();
        stack15.push((java.lang.Object) stack45);
        stack0.push((java.lang.Object) stack15);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + obj54 + "' != '" + 10 + "'", obj54.equals(10));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        java.lang.Object obj6 = stack0.last();
        int int7 = stack0.size();
        boolean boolean8 = stack0.isFull();
        java.lang.Object obj9 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + true + "'", obj6.equals(true));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + true + "'", obj9.equals(true));
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        java.lang.Object obj16 = stack0.last();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        java.lang.Object obj21 = null;
        stack19.push(obj21);
        stack19.pop();
        int int24 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass28 = stack19.getClass();
        boolean boolean29 = stack19.isEmpty();
        stack19.clear();
        stack19.clear();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        boolean boolean33 = stack32.isEmpty();
        stack32.clear();
        jbhembise.testauto.example3.Stack stack35 = new jbhembise.testauto.example3.Stack();
        int int36 = stack35.size();
        java.lang.Object obj37 = null;
        stack35.push(obj37);
        stack35.pop();
        int int40 = stack35.size();
        stack35.clear();
        stack35.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass44 = stack35.getClass();
        stack32.push((java.lang.Object) stack35);
        stack19.push((java.lang.Object) stack32);
        int int47 = stack32.size();
        stack32.clear();
        stack0.push((java.lang.Object) stack32);
        java.lang.Object obj50 = null;
        stack32.push(obj50);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        int int18 = stack9.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        int int6 = stack0.size();
        int int7 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        java.lang.Object obj28 = stack0.last();
        int int29 = stack0.size();
        int int30 = stack0.size();
        int int31 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        java.lang.Object obj19 = null;
        stack5.push(obj19);
        stack5.pop();
        java.lang.Class<?> wildcardClass22 = stack5.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        java.lang.Class<?> wildcardClass9 = stack3.getClass();
        java.lang.Object obj10 = stack3.last();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass12 = stack11.getClass();
        boolean boolean13 = stack11.isEmpty();
        stack11.clear();
        stack11.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        boolean boolean17 = stack16.isEmpty();
        boolean boolean18 = stack16.isEmpty();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        boolean boolean20 = stack19.isEmpty();
        stack19.push((java.lang.Object) (short) 10);
        stack16.push((java.lang.Object) stack19);
        boolean boolean24 = stack16.isEmpty();
        java.lang.Object obj25 = stack16.last();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        stack11.push((java.lang.Object) wildcardClass26);
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Class<?> wildcardClass30 = stack28.getClass();
        java.lang.Class<?> wildcardClass31 = stack28.getClass();
        java.lang.Class<?> wildcardClass32 = stack28.getClass();
        stack28.clear();
        stack28.clear();
        jbhembise.testauto.example3.Stack stack35 = new jbhembise.testauto.example3.Stack();
        int int36 = stack35.size();
        java.lang.Object obj37 = null;
        stack35.push(obj37);
        stack35.pop();
        int int40 = stack35.size();
        stack35.clear();
        stack35.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass44 = stack35.getClass();
        stack28.push((java.lang.Object) wildcardClass44);
        stack11.push((java.lang.Object) stack28);
        stack3.push((java.lang.Object) stack11);
        stack3.pop();
        stack3.pop();
        jbhembise.testauto.example3.Stack stack50 = new jbhembise.testauto.example3.Stack();
        int int51 = stack50.size();
        java.lang.Object obj52 = null;
        stack50.push(obj52);
        stack50.pop();
        int int55 = stack50.size();
        stack50.clear();
        stack50.push((java.lang.Object) 10);
        int int59 = stack50.size();
        boolean boolean60 = stack50.isEmpty();
        jbhembise.testauto.example3.Stack stack61 = new jbhembise.testauto.example3.Stack();
        int int62 = stack61.size();
        java.lang.Class<?> wildcardClass63 = stack61.getClass();
        java.lang.Class<?> wildcardClass64 = stack61.getClass();
        boolean boolean65 = stack61.isFull();
        jbhembise.testauto.example3.Stack stack66 = new jbhembise.testauto.example3.Stack();
        int int67 = stack66.size();
        java.lang.Object obj68 = null;
        stack66.push(obj68);
        stack66.pop();
        int int71 = stack66.size();
        stack66.clear();
        stack66.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass75 = stack66.getClass();
        stack61.push((java.lang.Object) stack66);
        java.lang.Class<?> wildcardClass77 = stack61.getClass();
        boolean boolean78 = stack61.isFull();
        stack50.push((java.lang.Object) boolean78);
        int int80 = stack50.size();
        int int81 = stack50.size();
        stack50.clear();
        jbhembise.testauto.example3.Stack stack83 = new jbhembise.testauto.example3.Stack();
        boolean boolean84 = stack83.isEmpty();
        boolean boolean85 = stack83.isEmpty();
        jbhembise.testauto.example3.Stack stack86 = new jbhembise.testauto.example3.Stack();
        boolean boolean87 = stack86.isEmpty();
        stack86.push((java.lang.Object) (short) 10);
        stack83.push((java.lang.Object) stack86);
        int int91 = stack83.size();
        java.lang.Class<?> wildcardClass92 = stack83.getClass();
        stack50.push((java.lang.Object) wildcardClass92);
        stack3.push((java.lang.Object) stack50);
        stack50.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 10 + "'", obj10.equals((short) 10));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        stack0.clear();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        stack14.push((java.lang.Object) (short) 10);
        stack11.push((java.lang.Object) stack14);
        boolean boolean19 = stack11.isEmpty();
        java.lang.Object obj20 = stack11.last();
        int int21 = stack11.size();
        stack0.push((java.lang.Object) stack11);
        java.lang.Class<?> wildcardClass23 = stack11.getClass();
        boolean boolean24 = stack11.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        boolean boolean11 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack12.clear();
        stack12.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        java.lang.Object obj21 = null;
        stack19.push(obj21);
        stack19.pop();
        int int24 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass28 = stack19.getClass();
        stack12.push((java.lang.Object) wildcardClass28);
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) true);
        boolean boolean35 = stack30.isEmpty();
        stack30.pop();
        stack12.push((java.lang.Object) stack30);
        stack0.push((java.lang.Object) stack12);
        boolean boolean39 = stack12.isEmpty();
        boolean boolean40 = stack12.isFull();
        int int41 = stack12.size();
        int int42 = stack12.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        boolean boolean6 = stack0.isFull();
        stack0.pop();
        boolean boolean8 = stack0.isFull();
        boolean boolean9 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isFull();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) true);
        boolean boolean14 = stack9.isEmpty();
        boolean boolean15 = stack9.isFull();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) int16);
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) true);
        boolean boolean24 = stack19.isEmpty();
        stack19.clear();
        boolean boolean26 = stack19.isEmpty();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Class<?> wildcardClass29 = stack27.getClass();
        java.lang.Class<?> wildcardClass30 = stack27.getClass();
        stack27.push((java.lang.Object) 10L);
        boolean boolean33 = stack27.isFull();
        stack19.push((java.lang.Object) stack27);
        java.lang.Object obj35 = stack19.last();
        stack19.clear();
        boolean boolean37 = stack19.isFull();
        stack0.push((java.lang.Object) boolean37);
        java.lang.Class<?> wildcardClass39 = stack0.getClass();
        boolean boolean40 = stack0.isFull();
        java.lang.Object obj41 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + obj41 + "' != '" + false + "'", obj41.equals(false));
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        boolean boolean9 = stack0.isFull();
        int int10 = stack0.size();
        stack0.clear();
        stack0.clear();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isEmpty();
        stack0.clear();
        boolean boolean10 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        boolean boolean4 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        int int6 = stack0.size();
        boolean boolean7 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass19 = stack18.getClass();
        int int20 = stack18.size();
        stack18.push((java.lang.Object) (byte) 10);
        java.lang.Object obj23 = stack18.last();
        boolean boolean24 = stack18.isFull();
        stack0.push((java.lang.Object) stack18);
        java.lang.Object obj26 = stack18.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (byte) 10 + "'", obj23.equals((byte) 10));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + (byte) 10 + "'", obj26.equals((byte) 10));
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        java.lang.Object obj5 = stack0.last();
        stack0.pop();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Object obj10 = null;
        stack8.push(obj10);
        stack8.pop();
        int int13 = stack8.size();
        stack8.clear();
        stack8.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass17 = stack8.getClass();
        boolean boolean18 = stack8.isEmpty();
        int int19 = stack8.size();
        boolean boolean20 = stack8.isFull();
        int int21 = stack8.size();
        java.lang.Class<?> wildcardClass22 = stack8.getClass();
        java.lang.Class<?> wildcardClass23 = stack8.getClass();
        stack0.push((java.lang.Object) stack8);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte) 10 + "'", obj5.equals((byte) 10));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        int int9 = stack3.size();
        int int10 = stack3.size();
        boolean boolean11 = stack3.isEmpty();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        boolean boolean14 = stack12.isEmpty();
        boolean boolean15 = stack12.isEmpty();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        java.lang.Class<?> wildcardClass17 = stack12.getClass();
        stack3.push((java.lang.Object) stack12);
        boolean boolean19 = stack3.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Object obj9 = stack0.last();
        int int10 = stack0.size();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        boolean boolean15 = stack11.isFull();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack11.push((java.lang.Object) stack16);
        boolean boolean27 = stack11.isFull();
        int int28 = stack11.size();
        stack0.push((java.lang.Object) stack11);
        java.lang.Object obj30 = stack11.last();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        java.lang.Class<?> wildcardClass9 = stack3.getClass();
        java.lang.Object obj10 = stack3.last();
        java.lang.Object obj11 = stack3.last();
        boolean boolean12 = stack3.isFull();
        boolean boolean13 = stack3.isEmpty();
        boolean boolean14 = stack3.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 10 + "'", obj10.equals((short) 10));
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 10 + "'", obj11.equals((short) 10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        stack0.clear();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass6 = stack5.getClass();
        int int7 = stack5.size();
        stack5.push((java.lang.Object) (byte) 10);
        int int10 = stack5.size();
        stack5.clear();
        stack0.push((java.lang.Object) stack5);
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        java.lang.Object obj15 = null;
        stack13.push(obj15);
        stack13.pop();
        int int18 = stack13.size();
        stack13.clear();
        stack13.push((java.lang.Object) 10);
        java.lang.Object obj22 = stack13.last();
        boolean boolean23 = stack13.isEmpty();
        boolean boolean24 = stack13.isEmpty();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Class<?> wildcardClass27 = stack25.getClass();
        java.lang.Class<?> wildcardClass28 = stack25.getClass();
        stack25.push((java.lang.Object) 10L);
        boolean boolean31 = stack25.isFull();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass33 = stack32.getClass();
        int int34 = stack32.size();
        stack25.push((java.lang.Object) int34);
        boolean boolean36 = stack25.isFull();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Class<?> wildcardClass39 = stack37.getClass();
        java.lang.Class<?> wildcardClass40 = stack37.getClass();
        java.lang.Class<?> wildcardClass41 = stack37.getClass();
        stack37.clear();
        stack37.clear();
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        int int45 = stack44.size();
        java.lang.Object obj46 = null;
        stack44.push(obj46);
        stack44.pop();
        int int49 = stack44.size();
        stack44.clear();
        stack44.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass53 = stack44.getClass();
        stack37.push((java.lang.Object) wildcardClass53);
        jbhembise.testauto.example3.Stack stack55 = new jbhembise.testauto.example3.Stack();
        int int56 = stack55.size();
        stack55.clear();
        stack55.push((java.lang.Object) true);
        boolean boolean60 = stack55.isEmpty();
        stack55.pop();
        stack37.push((java.lang.Object) stack55);
        stack25.push((java.lang.Object) stack37);
        stack13.push((java.lang.Object) stack25);
        java.lang.Object obj65 = stack13.last();
        stack0.push((java.lang.Object) stack13);
        java.lang.Object obj67 = stack13.last();
        java.lang.Object obj68 = stack13.last();
        stack13.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + obj22 + "' != '" + 10 + "'", obj22.equals(10));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Class<?> wildcardClass16 = stack0.getClass();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack0.push((java.lang.Object) stack18);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        boolean boolean18 = stack9.isFull();
        stack9.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        boolean boolean12 = stack0.isEmpty();
        int int13 = stack0.size();
        boolean boolean14 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        int int16 = stack15.size();
        java.lang.Class<?> wildcardClass17 = stack15.getClass();
        java.lang.Class<?> wildcardClass18 = stack15.getClass();
        stack15.push((java.lang.Object) 10L);
        stack15.pop();
        stack15.clear();
        java.lang.Class<?> wildcardClass23 = stack15.getClass();
        java.lang.Class<?> wildcardClass24 = stack15.getClass();
        java.lang.Class<?> wildcardClass25 = stack15.getClass();
        stack0.push((java.lang.Object) wildcardClass25);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        int int11 = stack0.size();
        stack0.pop();
        boolean boolean13 = stack0.isFull();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        java.lang.Object obj5 = stack0.last();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        boolean boolean9 = stack6.isFull();
        stack6.clear();
        stack6.clear();
        stack0.push((java.lang.Object) stack6);
        stack0.pop();
        boolean boolean14 = stack0.isEmpty();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + true + "'", obj5.equals(true));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        boolean boolean14 = stack11.isEmpty();
        stack0.push((java.lang.Object) boolean14);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) true);
        boolean boolean21 = stack16.isEmpty();
        stack16.pop();
        int int23 = stack16.size();
        stack0.push((java.lang.Object) int23);
        java.lang.Object obj25 = stack0.last();
        java.lang.Object obj26 = stack0.last();
        stack0.pop();
        boolean boolean28 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + 0 + "'", obj25.equals(0));
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + 0 + "'", obj26.equals(0));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        boolean boolean14 = stack11.isEmpty();
        stack0.push((java.lang.Object) boolean14);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) true);
        boolean boolean21 = stack16.isEmpty();
        stack16.pop();
        int int23 = stack16.size();
        stack0.push((java.lang.Object) int23);
        java.lang.Object obj25 = stack0.last();
        stack0.pop();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        boolean boolean28 = stack27.isEmpty();
        boolean boolean29 = stack27.isEmpty();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        boolean boolean31 = stack30.isEmpty();
        stack30.push((java.lang.Object) (short) 10);
        stack27.push((java.lang.Object) stack30);
        int int35 = stack30.size();
        java.lang.Class<?> wildcardClass36 = stack30.getClass();
        java.lang.Object obj37 = stack30.last();
        boolean boolean38 = stack30.isFull();
        stack30.clear();
        stack0.push((java.lang.Object) stack30);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + 0 + "'", obj25.equals(0));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + (short) 10 + "'", obj37.equals((short) 10));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        stack0.pop();
        boolean boolean17 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        boolean boolean19 = stack0.isFull();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isFull();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) true);
        boolean boolean14 = stack9.isEmpty();
        boolean boolean15 = stack9.isFull();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) int16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass27 = stack18.getClass();
        boolean boolean28 = stack18.isEmpty();
        stack18.clear();
        stack18.clear();
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        boolean boolean32 = stack31.isEmpty();
        stack31.clear();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        int int35 = stack34.size();
        java.lang.Object obj36 = null;
        stack34.push(obj36);
        stack34.pop();
        int int39 = stack34.size();
        stack34.clear();
        stack34.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass43 = stack34.getClass();
        stack31.push((java.lang.Object) stack34);
        stack18.push((java.lang.Object) stack31);
        int int46 = stack31.size();
        boolean boolean47 = stack31.isFull();
        java.lang.Class<?> wildcardClass48 = stack31.getClass();
        stack0.push((java.lang.Object) stack31);
        java.lang.Object obj50 = stack31.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        java.lang.Class<?> wildcardClass17 = stack5.getClass();
        java.lang.Object obj18 = stack5.last();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        boolean boolean20 = stack19.isEmpty();
        boolean boolean21 = stack19.isEmpty();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        boolean boolean23 = stack22.isEmpty();
        stack22.push((java.lang.Object) (short) 10);
        stack19.push((java.lang.Object) stack22);
        int int27 = stack22.size();
        java.lang.Class<?> wildcardClass28 = stack22.getClass();
        java.lang.Object obj29 = stack22.last();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass31 = stack30.getClass();
        boolean boolean32 = stack30.isEmpty();
        stack30.clear();
        stack30.clear();
        jbhembise.testauto.example3.Stack stack35 = new jbhembise.testauto.example3.Stack();
        boolean boolean36 = stack35.isEmpty();
        boolean boolean37 = stack35.isEmpty();
        jbhembise.testauto.example3.Stack stack38 = new jbhembise.testauto.example3.Stack();
        boolean boolean39 = stack38.isEmpty();
        stack38.push((java.lang.Object) (short) 10);
        stack35.push((java.lang.Object) stack38);
        boolean boolean43 = stack35.isEmpty();
        java.lang.Object obj44 = stack35.last();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        stack30.push((java.lang.Object) wildcardClass45);
        jbhembise.testauto.example3.Stack stack47 = new jbhembise.testauto.example3.Stack();
        int int48 = stack47.size();
        java.lang.Class<?> wildcardClass49 = stack47.getClass();
        java.lang.Class<?> wildcardClass50 = stack47.getClass();
        java.lang.Class<?> wildcardClass51 = stack47.getClass();
        stack47.clear();
        stack47.clear();
        jbhembise.testauto.example3.Stack stack54 = new jbhembise.testauto.example3.Stack();
        int int55 = stack54.size();
        java.lang.Object obj56 = null;
        stack54.push(obj56);
        stack54.pop();
        int int59 = stack54.size();
        stack54.clear();
        stack54.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass63 = stack54.getClass();
        stack47.push((java.lang.Object) wildcardClass63);
        stack30.push((java.lang.Object) stack47);
        stack22.push((java.lang.Object) stack30);
        boolean boolean67 = stack22.isEmpty();
        stack22.clear();
        stack5.push((java.lang.Object) stack22);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + 10 + "'", obj18.equals(10));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + (short) 10 + "'", obj29.equals((short) 10));
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        boolean boolean5 = stack0.isFull();
        boolean boolean6 = stack0.isFull();
        int int7 = stack0.size();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Object obj10 = null;
        stack8.push(obj10);
        stack8.pop();
        int int13 = stack8.size();
        stack8.clear();
        boolean boolean15 = stack8.isEmpty();
        boolean boolean16 = stack8.isEmpty();
        java.lang.Class<?> wildcardClass17 = stack8.getClass();
        int int18 = stack8.size();
        stack0.push((java.lang.Object) stack8);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        boolean boolean9 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass19 = stack10.getClass();
        boolean boolean20 = stack10.isFull();
        stack10.clear();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass23 = stack22.getClass();
        int int24 = stack22.size();
        stack22.push((java.lang.Object) (byte) 10);
        stack10.push((java.lang.Object) stack22);
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        boolean boolean35 = stack28.isFull();
        java.lang.Class<?> wildcardClass36 = stack28.getClass();
        stack22.push((java.lang.Object) stack28);
        boolean boolean38 = stack22.isFull();
        java.lang.Object obj39 = stack22.last();
        stack22.pop();
        stack0.push((java.lang.Object) stack22);
        boolean boolean42 = stack0.isFull();
        boolean boolean43 = stack0.isEmpty();
        java.lang.Object obj44 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(obj44);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        int int11 = stack0.size();
        stack0.pop();
        boolean boolean13 = stack0.isFull();
        java.lang.Class<?> wildcardClass14 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        java.lang.Object obj18 = stack0.last();
        java.lang.Object obj19 = stack0.last();
        java.lang.Class<?> wildcardClass20 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Class<?> wildcardClass23 = stack21.getClass();
        java.lang.Class<?> wildcardClass24 = stack21.getClass();
        boolean boolean25 = stack21.isFull();
        jbhembise.testauto.example3.Stack stack26 = new jbhembise.testauto.example3.Stack();
        int int27 = stack26.size();
        java.lang.Object obj28 = null;
        stack26.push(obj28);
        stack26.pop();
        int int31 = stack26.size();
        stack26.clear();
        stack26.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass35 = stack26.getClass();
        stack21.push((java.lang.Object) stack26);
        boolean boolean37 = stack26.isEmpty();
        int int38 = stack26.size();
        boolean boolean39 = stack26.isEmpty();
        java.lang.Object obj40 = null;
        stack26.push(obj40);
        java.lang.Class<?> wildcardClass42 = stack26.getClass();
        stack26.clear();
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        boolean boolean45 = stack44.isEmpty();
        stack44.push((java.lang.Object) "hi!");
        int int48 = stack44.size();
        stack26.push((java.lang.Object) stack44);
        java.lang.Class<?> wildcardClass50 = stack26.getClass();
        stack0.push((java.lang.Object) wildcardClass50);
        jbhembise.testauto.example3.Stack stack52 = new jbhembise.testauto.example3.Stack();
        boolean boolean53 = stack52.isEmpty();
        stack52.push((java.lang.Object) "hi!");
        int int56 = stack52.size();
        jbhembise.testauto.example3.Stack stack57 = new jbhembise.testauto.example3.Stack();
        int int58 = stack57.size();
        java.lang.Class<?> wildcardClass59 = stack57.getClass();
        java.lang.Class<?> wildcardClass60 = stack57.getClass();
        stack57.push((java.lang.Object) 10L);
        stack57.pop();
        boolean boolean64 = stack57.isFull();
        stack52.push((java.lang.Object) stack57);
        jbhembise.testauto.example3.Stack stack66 = new jbhembise.testauto.example3.Stack();
        int int67 = stack66.size();
        java.lang.Object obj68 = null;
        stack66.push(obj68);
        stack66.pop();
        int int71 = stack66.size();
        stack66.clear();
        stack66.push((java.lang.Object) 10);
        java.lang.Object obj75 = stack66.last();
        stack66.clear();
        jbhembise.testauto.example3.Stack stack77 = new jbhembise.testauto.example3.Stack();
        int int78 = stack77.size();
        java.lang.Class<?> wildcardClass79 = stack77.getClass();
        java.lang.Class<?> wildcardClass80 = stack77.getClass();
        java.lang.Class<?> wildcardClass81 = stack77.getClass();
        stack77.clear();
        java.lang.Class<?> wildcardClass83 = stack77.getClass();
        stack66.push((java.lang.Object) stack77);
        jbhembise.testauto.example3.Stack stack85 = new jbhembise.testauto.example3.Stack();
        int int86 = stack85.size();
        stack85.clear();
        boolean boolean88 = stack85.isFull();
        stack85.clear();
        boolean boolean90 = stack85.isFull();
        jbhembise.testauto.example3.Stack stack91 = new jbhembise.testauto.example3.Stack();
        int int92 = stack91.size();
        java.lang.Class<?> wildcardClass93 = stack91.getClass();
        java.lang.Class<?> wildcardClass94 = stack91.getClass();
        stack85.push((java.lang.Object) wildcardClass94);
        stack66.push((java.lang.Object) wildcardClass94);
        stack57.push((java.lang.Object) wildcardClass94);
        stack0.push((java.lang.Object) stack57);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + obj75 + "' != '" + 10 + "'", obj75.equals(10));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        boolean boolean13 = stack12.isEmpty();
        boolean boolean14 = stack12.isEmpty();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        boolean boolean16 = stack15.isEmpty();
        stack15.push((java.lang.Object) (short) 10);
        stack12.push((java.lang.Object) stack15);
        boolean boolean20 = stack12.isEmpty();
        java.lang.Class<?> wildcardClass21 = stack12.getClass();
        int int22 = stack12.size();
        java.lang.Object obj23 = stack12.last();
        stack0.push((java.lang.Object) stack12);
        java.lang.Object obj25 = stack0.last();
        stack0.pop();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Object obj29 = null;
        stack27.push(obj29);
        stack27.pop();
        int int32 = stack27.size();
        stack27.clear();
        stack27.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass36 = stack27.getClass();
        boolean boolean37 = stack27.isEmpty();
        stack27.clear();
        stack27.clear();
        jbhembise.testauto.example3.Stack stack40 = new jbhembise.testauto.example3.Stack();
        boolean boolean41 = stack40.isEmpty();
        stack40.clear();
        jbhembise.testauto.example3.Stack stack43 = new jbhembise.testauto.example3.Stack();
        int int44 = stack43.size();
        java.lang.Object obj45 = null;
        stack43.push(obj45);
        stack43.pop();
        int int48 = stack43.size();
        stack43.clear();
        stack43.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass52 = stack43.getClass();
        stack40.push((java.lang.Object) stack43);
        stack27.push((java.lang.Object) stack40);
        java.lang.Class<?> wildcardClass55 = stack27.getClass();
        stack0.push((java.lang.Object) stack27);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        int int7 = stack0.size();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Object obj11 = null;
        stack9.push(obj11);
        stack9.pop();
        int int14 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        boolean boolean19 = stack9.isEmpty();
        stack9.clear();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Class<?> wildcardClass23 = stack21.getClass();
        java.lang.Class<?> wildcardClass24 = stack21.getClass();
        java.lang.Class<?> wildcardClass25 = stack21.getClass();
        stack9.push((java.lang.Object) wildcardClass25);
        stack0.push((java.lang.Object) stack9);
        int int28 = stack9.size();
        java.lang.Object obj29 = stack9.last();
        java.lang.Object obj30 = stack9.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        int int5 = stack0.size();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        stack0.pop();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        boolean boolean12 = stack8.isFull();
        boolean boolean13 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        int int16 = stack15.size();
        java.lang.Class<?> wildcardClass17 = stack15.getClass();
        java.lang.Class<?> wildcardClass18 = stack15.getClass();
        stack15.push((java.lang.Object) 10L);
        stack15.pop();
        int int22 = stack15.size();
        java.lang.Class<?> wildcardClass23 = stack15.getClass();
        stack0.push((java.lang.Object) wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        int int11 = stack0.size();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        stack0.pop();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        java.lang.Class<?> wildcardClass15 = stack11.getClass();
        stack11.clear();
        stack11.clear();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass27 = stack18.getClass();
        stack11.push((java.lang.Object) wildcardClass27);
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.pop();
        stack11.push((java.lang.Object) stack29);
        stack0.push((java.lang.Object) stack29);
        jbhembise.testauto.example3.Stack stack38 = new jbhembise.testauto.example3.Stack();
        int int39 = stack38.size();
        java.lang.Class<?> wildcardClass40 = stack38.getClass();
        java.lang.Class<?> wildcardClass41 = stack38.getClass();
        boolean boolean42 = stack38.isFull();
        jbhembise.testauto.example3.Stack stack43 = new jbhembise.testauto.example3.Stack();
        int int44 = stack43.size();
        java.lang.Object obj45 = null;
        stack43.push(obj45);
        stack43.pop();
        int int48 = stack43.size();
        stack43.clear();
        stack43.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass52 = stack43.getClass();
        stack38.push((java.lang.Object) stack43);
        boolean boolean54 = stack43.isEmpty();
        int int55 = stack43.size();
        stack0.push((java.lang.Object) int55);
        int int57 = stack0.size();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        boolean boolean26 = stack18.isFull();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        boolean boolean28 = stack27.isEmpty();
        boolean boolean29 = stack27.isEmpty();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        int int36 = stack30.size();
        stack27.push((java.lang.Object) int36);
        stack18.push((java.lang.Object) stack27);
        boolean boolean39 = stack27.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        int int3 = stack0.size();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        boolean boolean5 = stack0.isFull();
        boolean boolean6 = stack0.isFull();
        stack0.clear();
        boolean boolean8 = stack0.isEmpty();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        boolean boolean25 = stack18.isFull();
        java.lang.Class<?> wildcardClass26 = stack18.getClass();
        stack12.push((java.lang.Object) stack18);
        boolean boolean28 = stack18.isFull();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass30 = stack29.getClass();
        int int31 = stack29.size();
        stack29.push((java.lang.Object) (byte) 10);
        int int34 = stack29.size();
        java.lang.Class<?> wildcardClass35 = stack29.getClass();
        stack29.pop();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Class<?> wildcardClass39 = stack37.getClass();
        java.lang.Class<?> wildcardClass40 = stack37.getClass();
        boolean boolean41 = stack37.isFull();
        boolean boolean42 = stack37.isFull();
        stack29.push((java.lang.Object) stack37);
        stack37.clear();
        jbhembise.testauto.example3.Stack stack45 = new jbhembise.testauto.example3.Stack();
        int int46 = stack45.size();
        java.lang.Class<?> wildcardClass47 = stack45.getClass();
        jbhembise.testauto.example3.Stack stack48 = new jbhembise.testauto.example3.Stack();
        int int49 = stack48.size();
        java.lang.Class<?> wildcardClass50 = stack48.getClass();
        java.lang.Class<?> wildcardClass51 = stack48.getClass();
        boolean boolean52 = stack48.isFull();
        jbhembise.testauto.example3.Stack stack53 = new jbhembise.testauto.example3.Stack();
        int int54 = stack53.size();
        java.lang.Object obj55 = null;
        stack53.push(obj55);
        stack53.pop();
        int int58 = stack53.size();
        stack53.clear();
        stack53.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass62 = stack53.getClass();
        stack48.push((java.lang.Object) stack53);
        boolean boolean64 = stack53.isEmpty();
        int int65 = stack53.size();
        jbhembise.testauto.example3.Stack stack66 = new jbhembise.testauto.example3.Stack();
        int int67 = stack66.size();
        java.lang.Object obj68 = null;
        stack66.push(obj68);
        stack66.pop();
        int int71 = stack66.size();
        stack66.clear();
        stack66.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass75 = stack66.getClass();
        boolean boolean76 = stack66.isFull();
        stack66.clear();
        jbhembise.testauto.example3.Stack stack78 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass79 = stack78.getClass();
        int int80 = stack78.size();
        stack78.push((java.lang.Object) (byte) 10);
        stack66.push((java.lang.Object) stack78);
        stack66.clear();
        stack53.push((java.lang.Object) stack66);
        stack45.push((java.lang.Object) stack66);
        boolean boolean87 = stack45.isFull();
        stack37.push((java.lang.Object) boolean87);
        stack18.push((java.lang.Object) boolean87);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        boolean boolean5 = stack0.isFull();
        boolean boolean6 = stack0.isFull();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Object obj10 = null;
        stack8.push(obj10);
        stack8.pop();
        int int13 = stack8.size();
        stack8.clear();
        stack8.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass17 = stack8.getClass();
        boolean boolean18 = stack8.isEmpty();
        stack8.clear();
        stack8.clear();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        boolean boolean22 = stack21.isEmpty();
        stack21.clear();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Object obj26 = null;
        stack24.push(obj26);
        stack24.pop();
        int int29 = stack24.size();
        stack24.clear();
        stack24.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass33 = stack24.getClass();
        stack21.push((java.lang.Object) stack24);
        stack8.push((java.lang.Object) stack21);
        int int36 = stack21.size();
        stack0.push((java.lang.Object) int36);
        boolean boolean38 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        boolean boolean2 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        int int5 = stack0.size();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        boolean boolean14 = stack11.isEmpty();
        stack0.push((java.lang.Object) boolean14);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) true);
        boolean boolean21 = stack16.isEmpty();
        stack16.pop();
        int int23 = stack16.size();
        stack0.push((java.lang.Object) int23);
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Class<?> wildcardClass27 = stack25.getClass();
        java.lang.Class<?> wildcardClass28 = stack25.getClass();
        java.lang.Class<?> wildcardClass29 = stack25.getClass();
        stack25.clear();
        stack25.clear();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        int int33 = stack32.size();
        java.lang.Object obj34 = null;
        stack32.push(obj34);
        stack32.pop();
        int int37 = stack32.size();
        stack32.clear();
        stack32.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass41 = stack32.getClass();
        stack25.push((java.lang.Object) wildcardClass41);
        jbhembise.testauto.example3.Stack stack43 = new jbhembise.testauto.example3.Stack();
        int int44 = stack43.size();
        stack43.clear();
        stack43.push((java.lang.Object) true);
        boolean boolean48 = stack43.isEmpty();
        stack43.pop();
        stack25.push((java.lang.Object) stack43);
        stack0.push((java.lang.Object) stack43);
        boolean boolean52 = stack43.isFull();
        boolean boolean53 = stack43.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.pop();
        stack0.clear();
        stack0.clear();
        boolean boolean15 = stack0.isFull();
        stack0.clear();
        java.lang.Class<?> wildcardClass17 = stack0.getClass();
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }
}

