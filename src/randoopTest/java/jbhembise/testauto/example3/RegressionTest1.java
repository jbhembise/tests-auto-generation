package jbhembise.testauto.example3;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        java.lang.Class<?> wildcardClass17 = stack5.getClass();
        int int18 = stack5.size();
        stack5.clear();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Object obj22 = null;
        stack20.push(obj22);
        stack20.pop();
        int int25 = stack20.size();
        stack20.clear();
        stack5.push((java.lang.Object) stack20);
        boolean boolean28 = stack20.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        int int11 = stack0.size();
        stack0.pop();
        java.lang.Class<?> wildcardClass13 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        int int6 = stack0.size();
        stack0.push((java.lang.Object) 1.0f);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        boolean boolean13 = stack0.isFull();
        boolean boolean14 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        int int16 = stack15.size();
        stack15.clear();
        stack15.push((java.lang.Object) true);
        boolean boolean20 = stack15.isEmpty();
        int int21 = stack15.size();
        int int22 = stack15.size();
        java.lang.Class<?> wildcardClass23 = stack15.getClass();
        stack0.push((java.lang.Object) stack15);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        boolean boolean7 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        java.lang.Class<?> wildcardClass19 = stack9.getClass();
        java.lang.Object obj20 = null;
        stack9.push(obj20);
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass23 = stack22.getClass();
        int int24 = stack22.size();
        stack22.push((java.lang.Object) (byte) 10);
        boolean boolean27 = stack22.isEmpty();
        stack9.push((java.lang.Object) boolean27);
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        java.lang.Class<?> wildcardClass31 = stack29.getClass();
        java.lang.Class<?> wildcardClass32 = stack29.getClass();
        boolean boolean33 = stack29.isFull();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        int int35 = stack34.size();
        java.lang.Object obj36 = null;
        stack34.push(obj36);
        stack34.pop();
        int int39 = stack34.size();
        stack34.clear();
        stack34.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass43 = stack34.getClass();
        stack29.push((java.lang.Object) stack34);
        java.lang.Object obj45 = stack34.last();
        java.lang.Class<?> wildcardClass46 = stack34.getClass();
        stack9.push((java.lang.Object) stack34);
        stack34.pop();
        int int49 = stack34.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + obj45 + "' != '" + 10 + "'", obj45.equals(10));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        int int7 = stack0.size();
        boolean boolean8 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        java.lang.Object obj16 = stack0.last();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        int int18 = stack17.size();
        java.lang.Object obj19 = null;
        stack17.push(obj19);
        stack17.pop();
        int int22 = stack17.size();
        stack17.clear();
        boolean boolean24 = stack17.isEmpty();
        boolean boolean25 = stack17.isEmpty();
        stack17.clear();
        boolean boolean27 = stack17.isEmpty();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        boolean boolean29 = stack28.isEmpty();
        boolean boolean30 = stack28.isEmpty();
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        boolean boolean32 = stack31.isEmpty();
        stack31.push((java.lang.Object) (short) 10);
        stack28.push((java.lang.Object) stack31);
        int int36 = stack31.size();
        int int37 = stack31.size();
        stack17.push((java.lang.Object) stack31);
        java.lang.Class<?> wildcardClass39 = stack17.getClass();
        stack0.push((java.lang.Object) wildcardClass39);
        boolean boolean41 = stack0.isEmpty();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        stack0.pop();
        boolean boolean7 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        java.lang.Class<?> wildcardClass10 = stack0.getClass();
        boolean boolean11 = stack0.isEmpty();
        boolean boolean12 = stack0.isFull();
        boolean boolean13 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass15 = stack14.getClass();
        int int16 = stack14.size();
        stack14.push((java.lang.Object) (byte) 10);
        java.lang.Object obj19 = stack14.last();
        stack14.pop();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        stack21.clear();
        boolean boolean24 = stack21.isEmpty();
        java.lang.Class<?> wildcardClass25 = stack21.getClass();
        stack14.push((java.lang.Object) wildcardClass25);
        stack0.push((java.lang.Object) wildcardClass25);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + (byte) 10 + "'", obj19.equals((byte) 10));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        stack5.clear();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        int int18 = stack17.size();
        stack17.clear();
        stack17.push((java.lang.Object) true);
        boolean boolean22 = stack17.isEmpty();
        boolean boolean23 = stack17.isFull();
        int int24 = stack17.size();
        stack5.push((java.lang.Object) int24);
        int int26 = stack5.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        java.lang.Object obj17 = stack5.last();
        int int18 = stack5.size();
        int int19 = stack5.size();
        int int20 = stack5.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + obj17 + "' != '" + 10 + "'", obj17.equals(10));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        java.lang.Class<?> wildcardClass15 = stack11.getClass();
        stack11.clear();
        java.lang.Class<?> wildcardClass17 = stack11.getClass();
        stack0.push((java.lang.Object) stack11);
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        stack19.clear();
        boolean boolean22 = stack19.isFull();
        stack19.clear();
        boolean boolean24 = stack19.isFull();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Class<?> wildcardClass27 = stack25.getClass();
        java.lang.Class<?> wildcardClass28 = stack25.getClass();
        stack19.push((java.lang.Object) wildcardClass28);
        stack0.push((java.lang.Object) wildcardClass28);
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        boolean boolean11 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack12.clear();
        stack12.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        java.lang.Object obj21 = null;
        stack19.push(obj21);
        stack19.pop();
        int int24 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass28 = stack19.getClass();
        stack12.push((java.lang.Object) wildcardClass28);
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) true);
        boolean boolean35 = stack30.isEmpty();
        stack30.pop();
        stack12.push((java.lang.Object) stack30);
        stack0.push((java.lang.Object) stack12);
        stack0.pop();
        jbhembise.testauto.example3.Stack stack40 = new jbhembise.testauto.example3.Stack();
        boolean boolean41 = stack40.isEmpty();
        stack40.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass45 = stack44.getClass();
        int int46 = stack44.size();
        stack40.push((java.lang.Object) int46);
        int int48 = stack40.size();
        boolean boolean49 = stack40.isFull();
        boolean boolean50 = stack40.isFull();
        boolean boolean51 = stack40.isFull();
        stack0.push((java.lang.Object) boolean51);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        int int6 = stack0.size();
        stack0.push((java.lang.Object) 1.0f);
        boolean boolean9 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        boolean boolean11 = stack10.isEmpty();
        boolean boolean12 = stack10.isEmpty();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.push((java.lang.Object) (short) 10);
        stack10.push((java.lang.Object) stack13);
        boolean boolean18 = stack10.isEmpty();
        java.lang.Object obj19 = stack10.last();
        boolean boolean20 = stack10.isFull();
        boolean boolean21 = stack10.isEmpty();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        int int23 = stack22.size();
        java.lang.Object obj24 = null;
        stack22.push(obj24);
        stack22.pop();
        int int27 = stack22.size();
        stack22.clear();
        stack22.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass31 = stack22.getClass();
        boolean boolean32 = stack22.isFull();
        stack22.clear();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass35 = stack34.getClass();
        int int36 = stack34.size();
        stack34.push((java.lang.Object) (byte) 10);
        stack22.push((java.lang.Object) stack34);
        stack22.clear();
        stack10.push((java.lang.Object) stack22);
        java.lang.Class<?> wildcardClass42 = stack10.getClass();
        stack0.push((java.lang.Object) stack10);
        java.lang.Object obj44 = stack10.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj44);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Object obj13 = null;
        stack11.push(obj13);
        stack11.pop();
        int int16 = stack11.size();
        stack11.clear();
        stack11.push((java.lang.Object) 10);
        int int20 = stack11.size();
        boolean boolean21 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        int int23 = stack22.size();
        java.lang.Class<?> wildcardClass24 = stack22.getClass();
        java.lang.Class<?> wildcardClass25 = stack22.getClass();
        boolean boolean26 = stack22.isFull();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Object obj29 = null;
        stack27.push(obj29);
        stack27.pop();
        int int32 = stack27.size();
        stack27.clear();
        stack27.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass36 = stack27.getClass();
        stack22.push((java.lang.Object) stack27);
        java.lang.Class<?> wildcardClass38 = stack22.getClass();
        boolean boolean39 = stack22.isFull();
        stack11.push((java.lang.Object) boolean39);
        int int41 = stack11.size();
        int int42 = stack11.size();
        java.lang.Class<?> wildcardClass43 = stack11.getClass();
        int int44 = stack11.size();
        stack0.push((java.lang.Object) int44);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        boolean boolean5 = stack0.isFull();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        java.lang.Class<?> wildcardClass12 = stack8.getClass();
        boolean boolean13 = stack8.isEmpty();
        java.lang.Class<?> wildcardClass14 = stack8.getClass();
        stack0.push((java.lang.Object) stack8);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack8.push((java.lang.Object) stack16);
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        stack20.clear();
        stack20.push((java.lang.Object) true);
        boolean boolean25 = stack20.isEmpty();
        int int26 = stack20.size();
        java.lang.Class<?> wildcardClass27 = stack20.getClass();
        boolean boolean28 = stack20.isEmpty();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        java.lang.Class<?> wildcardClass31 = stack29.getClass();
        java.lang.Class<?> wildcardClass32 = stack29.getClass();
        stack29.push((java.lang.Object) 10L);
        stack29.pop();
        int int36 = stack29.size();
        stack20.push((java.lang.Object) stack29);
        jbhembise.testauto.example3.Stack stack38 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass39 = stack38.getClass();
        int int40 = stack38.size();
        stack38.push((java.lang.Object) (byte) 10);
        java.lang.Object obj43 = stack38.last();
        boolean boolean44 = stack38.isFull();
        stack20.push((java.lang.Object) stack38);
        stack16.push((java.lang.Object) stack20);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + obj43 + "' != '" + (byte) 10 + "'", obj43.equals((byte) 10));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        java.lang.Object obj18 = stack0.last();
        java.lang.Object obj19 = stack0.last();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        stack20.clear();
        stack20.push((java.lang.Object) true);
        java.lang.Class<?> wildcardClass25 = stack20.getClass();
        stack0.push((java.lang.Object) wildcardClass25);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass27 = stack18.getClass();
        boolean boolean28 = stack18.isFull();
        stack18.clear();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass31 = stack30.getClass();
        int int32 = stack30.size();
        stack30.push((java.lang.Object) (byte) 10);
        stack18.push((java.lang.Object) stack30);
        stack18.clear();
        stack5.push((java.lang.Object) stack18);
        boolean boolean38 = stack5.isFull();
        java.lang.Object obj39 = stack5.last();
        stack5.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        java.lang.Object obj18 = null;
        stack5.push(obj18);
        stack5.clear();
        boolean boolean21 = stack5.isEmpty();
        stack5.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        stack13.pop();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.clear();
        boolean boolean36 = stack29.isEmpty();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Class<?> wildcardClass39 = stack37.getClass();
        java.lang.Class<?> wildcardClass40 = stack37.getClass();
        stack37.push((java.lang.Object) 10L);
        boolean boolean43 = stack37.isFull();
        stack29.push((java.lang.Object) stack37);
        stack29.push((java.lang.Object) false);
        stack29.clear();
        int int48 = stack29.size();
        stack13.push((java.lang.Object) stack29);
        java.lang.Class<?> wildcardClass50 = stack13.getClass();
        stack13.clear();
        stack13.push((java.lang.Object) (byte) 1);
        int int54 = stack13.size();
        java.lang.Object obj55 = stack13.last();
        boolean boolean56 = stack13.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + (byte) 1 + "'", obj55.equals((byte) 1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        java.lang.Object obj5 = stack0.last();
        java.lang.Object obj6 = stack0.last();
        boolean boolean7 = stack0.isEmpty();
        int int8 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + true + "'", obj5.equals(true));
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + true + "'", obj6.equals(true));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isEmpty();
        stack0.clear();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        stack14.push((java.lang.Object) (short) 10);
        stack11.push((java.lang.Object) stack14);
        int int19 = stack14.size();
        int int20 = stack14.size();
        stack0.push((java.lang.Object) stack14);
        int int22 = stack14.size();
        boolean boolean23 = stack14.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        java.lang.Object obj17 = stack5.last();
        java.lang.Class<?> wildcardClass18 = stack5.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + obj17 + "' != '" + 10 + "'", obj17.equals(10));
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.clear();
        stack0.clear();
        int int5 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        stack5.pop();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isFull();
        boolean boolean19 = stack5.isEmpty();
        boolean boolean20 = stack5.isEmpty();
        stack5.push((java.lang.Object) ' ');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        stack13.clear();
        stack13.push((java.lang.Object) true);
        boolean boolean18 = stack13.isEmpty();
        stack13.clear();
        boolean boolean20 = stack13.isEmpty();
        java.lang.Class<?> wildcardClass21 = stack13.getClass();
        boolean boolean22 = stack13.isFull();
        stack0.push((java.lang.Object) boolean22);
        java.lang.Class<?> wildcardClass24 = stack0.getClass();
        boolean boolean25 = stack0.isFull();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        java.lang.Object obj7 = stack0.last();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        boolean boolean10 = stack9.isEmpty();
        stack9.push((java.lang.Object) (short) 10);
        boolean boolean13 = stack9.isEmpty();
        stack9.clear();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        boolean boolean16 = stack15.isEmpty();
        stack15.clear();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass27 = stack18.getClass();
        stack15.push((java.lang.Object) stack18);
        stack18.clear();
        boolean boolean30 = stack18.isEmpty();
        int int31 = stack18.size();
        int int32 = stack18.size();
        stack9.push((java.lang.Object) int32);
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        boolean boolean35 = stack34.isEmpty();
        stack34.clear();
        boolean boolean37 = stack34.isFull();
        boolean boolean38 = stack34.isEmpty();
        java.lang.Class<?> wildcardClass39 = stack34.getClass();
        stack9.push((java.lang.Object) stack34);
        stack0.push((java.lang.Object) stack9);
        stack9.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + 10L + "'", obj7.equals(10L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        boolean boolean13 = stack0.isFull();
        java.lang.Class<?> wildcardClass14 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        boolean boolean25 = stack18.isFull();
        java.lang.Class<?> wildcardClass26 = stack18.getClass();
        stack12.push((java.lang.Object) stack18);
        boolean boolean28 = stack12.isFull();
        java.lang.Object obj29 = stack12.last();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) true);
        boolean boolean35 = stack30.isEmpty();
        int int36 = stack30.size();
        int int37 = stack30.size();
        java.lang.Class<?> wildcardClass38 = stack30.getClass();
        stack12.push((java.lang.Object) wildcardClass38);
        stack12.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        java.lang.Object obj18 = null;
        stack5.push(obj18);
        stack5.clear();
        boolean boolean21 = stack5.isEmpty();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        int int23 = stack22.size();
        stack22.clear();
        stack22.push((java.lang.Object) true);
        boolean boolean27 = stack22.isEmpty();
        stack22.clear();
        boolean boolean29 = stack22.isEmpty();
        java.lang.Class<?> wildcardClass30 = stack22.getClass();
        boolean boolean31 = stack22.isFull();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        int int33 = stack32.size();
        java.lang.Object obj34 = null;
        stack32.push(obj34);
        stack32.pop();
        int int37 = stack32.size();
        stack32.clear();
        stack32.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass41 = stack32.getClass();
        boolean boolean42 = stack32.isFull();
        stack32.clear();
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass45 = stack44.getClass();
        int int46 = stack44.size();
        stack44.push((java.lang.Object) (byte) 10);
        stack32.push((java.lang.Object) stack44);
        jbhembise.testauto.example3.Stack stack50 = new jbhembise.testauto.example3.Stack();
        int int51 = stack50.size();
        java.lang.Object obj52 = null;
        stack50.push(obj52);
        stack50.pop();
        int int55 = stack50.size();
        stack50.clear();
        boolean boolean57 = stack50.isFull();
        java.lang.Class<?> wildcardClass58 = stack50.getClass();
        stack44.push((java.lang.Object) stack50);
        boolean boolean60 = stack44.isFull();
        java.lang.Object obj61 = stack44.last();
        stack44.pop();
        stack22.push((java.lang.Object) stack44);
        int int64 = stack22.size();
        stack5.push((java.lang.Object) int64);
        stack5.pop();
        java.lang.Class<?> wildcardClass67 = stack5.getClass();
        java.lang.Class<?> wildcardClass68 = stack5.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        int int11 = stack0.size();
        stack0.clear();
        int int13 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        boolean boolean5 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        java.lang.Class<?> wildcardClass8 = stack6.getClass();
        java.lang.Class<?> wildcardClass9 = stack6.getClass();
        stack0.push((java.lang.Object) wildcardClass9);
        boolean boolean11 = stack0.isEmpty();
        boolean boolean12 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        stack13.clear();
        stack13.push((java.lang.Object) true);
        boolean boolean18 = stack13.isEmpty();
        boolean boolean19 = stack13.isFull();
        int int20 = stack13.size();
        stack0.push((java.lang.Object) int20);
        int int22 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack0.size();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Class<?> wildcardClass12 = stack10.getClass();
        java.lang.Class<?> wildcardClass13 = stack10.getClass();
        boolean boolean14 = stack10.isFull();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        int int16 = stack15.size();
        java.lang.Object obj17 = null;
        stack15.push(obj17);
        stack15.pop();
        int int20 = stack15.size();
        stack15.clear();
        stack15.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass24 = stack15.getClass();
        stack10.push((java.lang.Object) stack15);
        boolean boolean26 = stack15.isEmpty();
        int int27 = stack15.size();
        boolean boolean28 = stack15.isEmpty();
        java.lang.Object obj29 = null;
        stack15.push(obj29);
        java.lang.Class<?> wildcardClass31 = stack15.getClass();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        boolean boolean33 = stack32.isEmpty();
        boolean boolean34 = stack32.isEmpty();
        stack32.clear();
        int int36 = stack32.size();
        boolean boolean37 = stack32.isEmpty();
        stack32.clear();
        stack15.push((java.lang.Object) stack32);
        stack0.push((java.lang.Object) stack15);
        java.lang.Class<?> wildcardClass41 = stack15.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        stack0.clear();
        boolean boolean18 = stack0.isEmpty();
        boolean boolean19 = stack0.isFull();
        boolean boolean20 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        stack21.clear();
        stack21.push((java.lang.Object) true);
        boolean boolean26 = stack21.isEmpty();
        boolean boolean27 = stack21.isFull();
        stack21.pop();
        java.lang.Class<?> wildcardClass29 = stack21.getClass();
        stack21.clear();
        stack0.push((java.lang.Object) stack21);
        int int32 = stack0.size();
        boolean boolean33 = stack0.isFull();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        boolean boolean11 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack12.clear();
        stack12.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        java.lang.Object obj21 = null;
        stack19.push(obj21);
        stack19.pop();
        int int24 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass28 = stack19.getClass();
        stack12.push((java.lang.Object) wildcardClass28);
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) true);
        boolean boolean35 = stack30.isEmpty();
        stack30.pop();
        stack12.push((java.lang.Object) stack30);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        stack39.clear();
        boolean boolean42 = stack39.isFull();
        stack39.clear();
        stack39.clear();
        jbhembise.testauto.example3.Stack stack45 = new jbhembise.testauto.example3.Stack();
        int int46 = stack45.size();
        stack45.clear();
        stack45.push((java.lang.Object) true);
        boolean boolean50 = stack45.isEmpty();
        int int51 = stack45.size();
        int int52 = stack45.size();
        stack39.push((java.lang.Object) stack45);
        int int54 = stack39.size();
        jbhembise.testauto.example3.Stack stack55 = new jbhembise.testauto.example3.Stack();
        int int56 = stack55.size();
        stack55.clear();
        stack55.push((java.lang.Object) true);
        boolean boolean60 = stack55.isEmpty();
        stack55.clear();
        boolean boolean62 = stack55.isEmpty();
        jbhembise.testauto.example3.Stack stack63 = new jbhembise.testauto.example3.Stack();
        int int64 = stack63.size();
        java.lang.Class<?> wildcardClass65 = stack63.getClass();
        java.lang.Class<?> wildcardClass66 = stack63.getClass();
        stack63.push((java.lang.Object) 10L);
        boolean boolean69 = stack63.isFull();
        stack55.push((java.lang.Object) stack63);
        java.lang.Object obj71 = stack55.last();
        stack39.push((java.lang.Object) stack55);
        stack12.push((java.lang.Object) stack39);
        int int74 = stack39.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isFull();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) true);
        boolean boolean14 = stack9.isEmpty();
        boolean boolean15 = stack9.isFull();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) int16);
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        java.lang.Class<?> wildcardClass21 = stack19.getClass();
        java.lang.Class<?> wildcardClass22 = stack19.getClass();
        boolean boolean23 = stack19.isFull();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Object obj26 = null;
        stack24.push(obj26);
        stack24.pop();
        int int29 = stack24.size();
        stack24.clear();
        stack24.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass33 = stack24.getClass();
        stack19.push((java.lang.Object) stack24);
        jbhembise.testauto.example3.Stack stack35 = new jbhembise.testauto.example3.Stack();
        int int36 = stack35.size();
        java.lang.Object obj37 = null;
        stack35.push(obj37);
        java.lang.Class<?> wildcardClass39 = stack35.getClass();
        stack24.push((java.lang.Object) wildcardClass39);
        stack0.push((java.lang.Object) wildcardClass39);
        int int42 = stack0.size();
        boolean boolean43 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Object obj9 = stack0.last();
        int int10 = stack0.size();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        boolean boolean15 = stack11.isFull();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack11.push((java.lang.Object) stack16);
        boolean boolean27 = stack11.isFull();
        int int28 = stack11.size();
        stack0.push((java.lang.Object) stack11);
        boolean boolean30 = stack0.isEmpty();
        java.lang.Object obj31 = stack0.last();
        int int32 = stack0.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        stack0.clear();
        stack0.clear();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        stack6.push((java.lang.Object) true);
        boolean boolean11 = stack6.isEmpty();
        int int12 = stack6.size();
        int int13 = stack6.size();
        stack0.push((java.lang.Object) stack6);
        boolean boolean15 = stack6.isEmpty();
        boolean boolean16 = stack6.isEmpty();
        boolean boolean17 = stack6.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Object obj5 = null;
        stack3.push(obj5);
        stack3.pop();
        int int8 = stack3.size();
        stack3.clear();
        stack3.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass12 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        stack3.clear();
        boolean boolean15 = stack3.isEmpty();
        boolean boolean16 = stack3.isEmpty();
        java.lang.Class<?> wildcardClass17 = stack3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        stack13.pop();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.clear();
        boolean boolean36 = stack29.isEmpty();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Class<?> wildcardClass39 = stack37.getClass();
        java.lang.Class<?> wildcardClass40 = stack37.getClass();
        stack37.push((java.lang.Object) 10L);
        boolean boolean43 = stack37.isFull();
        stack29.push((java.lang.Object) stack37);
        stack29.push((java.lang.Object) false);
        stack29.clear();
        int int48 = stack29.size();
        stack13.push((java.lang.Object) stack29);
        java.lang.Class<?> wildcardClass50 = stack13.getClass();
        boolean boolean51 = stack13.isEmpty();
        java.lang.Object obj52 = stack13.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        stack18.clear();
        boolean boolean27 = stack18.isFull();
        java.lang.Class<?> wildcardClass28 = stack18.getClass();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        boolean boolean30 = stack29.isEmpty();
        stack29.push((java.lang.Object) (short) 10);
        boolean boolean33 = stack29.isEmpty();
        stack29.clear();
        java.lang.Class<?> wildcardClass35 = stack29.getClass();
        boolean boolean36 = stack29.isFull();
        int int37 = stack29.size();
        stack18.push((java.lang.Object) stack29);
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        stack39.clear();
        stack39.push((java.lang.Object) true);
        boolean boolean44 = stack39.isEmpty();
        stack29.push((java.lang.Object) stack39);
        stack29.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        int int8 = stack0.size();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        boolean boolean12 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass4 = stack3.getClass();
        int int5 = stack3.size();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        boolean boolean12 = stack8.isFull();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        java.lang.Object obj15 = null;
        stack13.push(obj15);
        stack13.pop();
        int int18 = stack13.size();
        stack13.clear();
        stack13.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass22 = stack13.getClass();
        stack8.push((java.lang.Object) stack13);
        boolean boolean24 = stack13.isEmpty();
        java.lang.Class<?> wildcardClass25 = stack13.getClass();
        java.lang.Class<?> wildcardClass26 = stack13.getClass();
        stack0.push((java.lang.Object) stack13);
        int int28 = stack0.size();
        stack0.pop();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        stack5.pop();
        int int18 = stack5.size();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        boolean boolean20 = stack19.isEmpty();
        boolean boolean21 = stack19.isEmpty();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        boolean boolean23 = stack22.isEmpty();
        stack22.push((java.lang.Object) (short) 10);
        stack19.push((java.lang.Object) stack22);
        boolean boolean27 = stack19.isEmpty();
        java.lang.Class<?> wildcardClass28 = stack19.getClass();
        stack19.clear();
        stack5.push((java.lang.Object) stack19);
        stack5.pop();
        boolean boolean32 = stack5.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isFull();
        java.lang.Class<?> wildcardClass10 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Object obj13 = null;
        stack11.push(obj13);
        stack11.pop();
        int int16 = stack11.size();
        stack11.clear();
        stack11.push((java.lang.Object) 10);
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Class<?> wildcardClass22 = stack20.getClass();
        java.lang.Class<?> wildcardClass23 = stack20.getClass();
        boolean boolean24 = stack20.isFull();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Object obj27 = null;
        stack25.push(obj27);
        stack25.pop();
        int int30 = stack25.size();
        stack25.clear();
        stack25.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass34 = stack25.getClass();
        stack20.push((java.lang.Object) stack25);
        java.lang.Object obj36 = stack25.last();
        java.lang.Object obj37 = stack25.last();
        int int38 = stack25.size();
        stack11.push((java.lang.Object) int38);
        stack0.push((java.lang.Object) stack11);
        boolean boolean41 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + 10 + "'", obj36.equals(10));
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + 10 + "'", obj37.equals(10));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        int int18 = stack5.size();
        stack5.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        java.lang.Class<?> wildcardClass15 = stack11.getClass();
        stack11.clear();
        java.lang.Class<?> wildcardClass17 = stack11.getClass();
        stack0.push((java.lang.Object) stack11);
        java.lang.Object obj19 = stack0.last();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Object obj22 = null;
        stack20.push(obj22);
        stack20.pop();
        int int25 = stack20.size();
        stack20.clear();
        stack20.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass29 = stack20.getClass();
        boolean boolean30 = stack20.isFull();
        stack20.clear();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass33 = stack32.getClass();
        int int34 = stack32.size();
        stack32.push((java.lang.Object) (byte) 10);
        stack20.push((java.lang.Object) stack32);
        java.lang.Object obj38 = stack20.last();
        java.lang.Object obj39 = stack20.last();
        jbhembise.testauto.example3.Stack stack40 = new jbhembise.testauto.example3.Stack();
        int int41 = stack40.size();
        java.lang.Object obj42 = null;
        stack40.push(obj42);
        stack40.pop();
        int int45 = stack40.size();
        int int46 = stack40.size();
        stack40.clear();
        boolean boolean48 = stack40.isEmpty();
        stack40.clear();
        java.lang.Class<?> wildcardClass50 = stack40.getClass();
        stack20.push((java.lang.Object) stack40);
        stack0.push((java.lang.Object) stack40);
        int int53 = stack40.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        int int5 = stack0.size();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        java.lang.Class<?> wildcardClass8 = stack6.getClass();
        java.lang.Class<?> wildcardClass9 = stack6.getClass();
        boolean boolean10 = stack6.isFull();
        boolean boolean11 = stack6.isFull();
        stack0.push((java.lang.Object) boolean11);
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        java.lang.Class<?> wildcardClass15 = stack13.getClass();
        java.lang.Class<?> wildcardClass16 = stack13.getClass();
        boolean boolean17 = stack13.isFull();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass27 = stack18.getClass();
        stack13.push((java.lang.Object) stack18);
        java.lang.Object obj29 = stack18.last();
        java.lang.Class<?> wildcardClass30 = stack18.getClass();
        stack0.push((java.lang.Object) wildcardClass30);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + obj29 + "' != '" + 10 + "'", obj29.equals(10));
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        java.lang.Class<?> wildcardClass17 = stack5.getClass();
        stack5.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        boolean boolean11 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        boolean boolean13 = stack12.isEmpty();
        stack12.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass17 = stack16.getClass();
        int int18 = stack16.size();
        stack12.push((java.lang.Object) int18);
        int int20 = stack12.size();
        boolean boolean21 = stack12.isFull();
        boolean boolean22 = stack12.isFull();
        boolean boolean23 = stack12.isFull();
        stack0.push((java.lang.Object) boolean23);
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        stack18.clear();
        boolean boolean27 = stack18.isFull();
        java.lang.Class<?> wildcardClass28 = stack18.getClass();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        boolean boolean30 = stack29.isEmpty();
        stack29.push((java.lang.Object) (short) 10);
        boolean boolean33 = stack29.isEmpty();
        stack29.clear();
        java.lang.Class<?> wildcardClass35 = stack29.getClass();
        boolean boolean36 = stack29.isFull();
        int int37 = stack29.size();
        stack18.push((java.lang.Object) stack29);
        stack18.pop();
        stack18.clear();
        int int41 = stack18.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Class<?> wildcardClass5 = stack3.getClass();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        java.lang.Class<?> wildcardClass7 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        boolean boolean9 = stack3.isFull();
        boolean boolean10 = stack3.isFull();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        boolean boolean12 = stack0.isFull();
        java.lang.Class<?> wildcardClass13 = stack0.getClass();
        java.lang.Object obj14 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + 10 + "'", obj14.equals(10));
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass19 = stack18.getClass();
        int int20 = stack18.size();
        stack18.push((java.lang.Object) (byte) 10);
        java.lang.Object obj23 = stack18.last();
        boolean boolean24 = stack18.isFull();
        stack0.push((java.lang.Object) stack18);
        boolean boolean26 = stack18.isEmpty();
        int int27 = stack18.size();
        java.lang.Object obj28 = stack18.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (byte) 10 + "'", obj23.equals((byte) 10));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + (byte) 10 + "'", obj28.equals((byte) 10));
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        int int5 = stack0.size();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        boolean boolean7 = stack0.isEmpty();
        int int8 = stack0.size();
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        boolean boolean3 = stack0.isEmpty();
        boolean boolean4 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isFull();
        boolean boolean11 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass13 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        boolean boolean19 = stack18.isEmpty();
        stack18.clear();
        boolean boolean21 = stack18.isFull();
        boolean boolean22 = stack18.isEmpty();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Class<?> wildcardClass25 = stack23.getClass();
        java.lang.Class<?> wildcardClass26 = stack23.getClass();
        boolean boolean27 = stack23.isFull();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        stack28.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass37 = stack28.getClass();
        stack23.push((java.lang.Object) stack28);
        stack28.pop();
        int int40 = stack28.size();
        boolean boolean41 = stack28.isEmpty();
        stack18.push((java.lang.Object) boolean41);
        stack18.pop();
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        int int45 = stack44.size();
        java.lang.Object obj46 = null;
        stack44.push(obj46);
        stack44.pop();
        int int49 = stack44.size();
        stack44.clear();
        java.lang.Class<?> wildcardClass51 = stack44.getClass();
        stack18.push((java.lang.Object) stack44);
        stack0.push((java.lang.Object) stack18);
        int int54 = stack18.size();
        boolean boolean55 = stack18.isFull();
        int int56 = stack18.size();
        java.lang.Class<?> wildcardClass57 = stack18.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.clear();
        stack0.clear();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        stack0.clear();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        java.lang.Class<?> wildcardClass19 = stack9.getClass();
        java.lang.Object obj20 = null;
        stack9.push(obj20);
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass23 = stack22.getClass();
        int int24 = stack22.size();
        stack22.push((java.lang.Object) (byte) 10);
        boolean boolean27 = stack22.isEmpty();
        stack9.push((java.lang.Object) boolean27);
        boolean boolean29 = stack9.isEmpty();
        boolean boolean30 = stack9.isFull();
        boolean boolean31 = stack9.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        boolean boolean9 = stack8.isEmpty();
        boolean boolean10 = stack8.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        stack11.push((java.lang.Object) (short) 10);
        stack8.push((java.lang.Object) stack11);
        java.lang.Object obj16 = stack8.last();
        java.lang.Class<?> wildcardClass17 = stack8.getClass();
        stack0.push((java.lang.Object) wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        stack13.clear();
        stack13.push((java.lang.Object) true);
        boolean boolean18 = stack13.isEmpty();
        stack13.clear();
        boolean boolean20 = stack13.isEmpty();
        java.lang.Class<?> wildcardClass21 = stack13.getClass();
        boolean boolean22 = stack13.isFull();
        stack0.push((java.lang.Object) boolean22);
        java.lang.Class<?> wildcardClass24 = stack0.getClass();
        boolean boolean25 = stack0.isFull();
        java.lang.Object obj26 = stack0.last();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + false + "'", obj26.equals(false));
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        stack5.pop();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        boolean boolean19 = stack18.isEmpty();
        stack18.clear();
        boolean boolean21 = stack18.isFull();
        stack5.push((java.lang.Object) boolean21);
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        stack23.clear();
        boolean boolean26 = stack23.isFull();
        stack23.clear();
        boolean boolean28 = stack23.isEmpty();
        stack5.push((java.lang.Object) stack23);
        stack23.clear();
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        int int32 = stack31.size();
        java.lang.Class<?> wildcardClass33 = stack31.getClass();
        java.lang.Class<?> wildcardClass34 = stack31.getClass();
        boolean boolean35 = stack31.isFull();
        jbhembise.testauto.example3.Stack stack36 = new jbhembise.testauto.example3.Stack();
        int int37 = stack36.size();
        java.lang.Object obj38 = null;
        stack36.push(obj38);
        stack36.pop();
        int int41 = stack36.size();
        stack36.clear();
        stack36.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass45 = stack36.getClass();
        stack31.push((java.lang.Object) stack36);
        java.lang.Object obj47 = stack36.last();
        java.lang.Class<?> wildcardClass48 = stack36.getClass();
        jbhembise.testauto.example3.Stack stack49 = new jbhembise.testauto.example3.Stack();
        int int50 = stack49.size();
        stack49.clear();
        stack49.push((java.lang.Object) true);
        boolean boolean54 = stack49.isEmpty();
        int int55 = stack49.size();
        int int56 = stack49.size();
        stack49.clear();
        jbhembise.testauto.example3.Stack stack58 = new jbhembise.testauto.example3.Stack();
        int int59 = stack58.size();
        java.lang.Object obj60 = null;
        stack58.push(obj60);
        stack58.pop();
        int int63 = stack58.size();
        stack58.clear();
        stack58.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass67 = stack58.getClass();
        boolean boolean68 = stack58.isEmpty();
        stack58.clear();
        jbhembise.testauto.example3.Stack stack70 = new jbhembise.testauto.example3.Stack();
        int int71 = stack70.size();
        java.lang.Class<?> wildcardClass72 = stack70.getClass();
        java.lang.Class<?> wildcardClass73 = stack70.getClass();
        java.lang.Class<?> wildcardClass74 = stack70.getClass();
        stack58.push((java.lang.Object) wildcardClass74);
        stack49.push((java.lang.Object) stack58);
        stack36.push((java.lang.Object) stack58);
        stack23.push((java.lang.Object) stack36);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + obj47 + "' != '" + 10 + "'", obj47.equals(10));
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        boolean boolean5 = stack0.isFull();
        boolean boolean6 = stack0.isFull();
        boolean boolean7 = stack0.isEmpty();
        int int8 = stack0.size();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        boolean boolean10 = stack9.isEmpty();
        boolean boolean11 = stack9.isEmpty();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        boolean boolean13 = stack12.isEmpty();
        stack12.push((java.lang.Object) (short) 10);
        stack9.push((java.lang.Object) stack12);
        boolean boolean17 = stack9.isEmpty();
        stack0.push((java.lang.Object) stack9);
        boolean boolean19 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        stack0.pop();
        boolean boolean17 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        boolean boolean19 = stack0.isFull();
        int int20 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        int int9 = stack0.size();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        stack12.push((java.lang.Object) 10L);
        boolean boolean18 = stack12.isFull();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass20 = stack19.getClass();
        int int21 = stack19.size();
        stack12.push((java.lang.Object) int21);
        int int23 = stack12.size();
        java.lang.Class<?> wildcardClass24 = stack12.getClass();
        stack12.pop();
        stack0.push((java.lang.Object) stack12);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        boolean boolean25 = stack18.isFull();
        java.lang.Class<?> wildcardClass26 = stack18.getClass();
        stack12.push((java.lang.Object) stack18);
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        stack28.clear();
        stack28.push((java.lang.Object) true);
        boolean boolean33 = stack28.isEmpty();
        stack28.clear();
        boolean boolean35 = stack28.isEmpty();
        jbhembise.testauto.example3.Stack stack36 = new jbhembise.testauto.example3.Stack();
        int int37 = stack36.size();
        java.lang.Class<?> wildcardClass38 = stack36.getClass();
        java.lang.Class<?> wildcardClass39 = stack36.getClass();
        stack36.push((java.lang.Object) 10L);
        boolean boolean42 = stack36.isFull();
        stack28.push((java.lang.Object) stack36);
        java.lang.Object obj44 = stack28.last();
        stack28.clear();
        stack12.push((java.lang.Object) stack28);
        java.lang.Object obj47 = stack12.last();
        java.lang.Class<?> wildcardClass48 = stack12.getClass();
        java.lang.Class<?> wildcardClass49 = stack12.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        java.lang.Class<?> wildcardClass15 = stack11.getClass();
        stack11.clear();
        java.lang.Class<?> wildcardClass17 = stack11.getClass();
        stack0.push((java.lang.Object) stack11);
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        stack19.clear();
        boolean boolean22 = stack19.isFull();
        stack19.clear();
        boolean boolean24 = stack19.isFull();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Class<?> wildcardClass27 = stack25.getClass();
        java.lang.Class<?> wildcardClass28 = stack25.getClass();
        stack19.push((java.lang.Object) wildcardClass28);
        stack0.push((java.lang.Object) wildcardClass28);
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        int int32 = stack31.size();
        java.lang.Class<?> wildcardClass33 = stack31.getClass();
        java.lang.Class<?> wildcardClass34 = stack31.getClass();
        boolean boolean35 = stack31.isFull();
        jbhembise.testauto.example3.Stack stack36 = new jbhembise.testauto.example3.Stack();
        int int37 = stack36.size();
        java.lang.Object obj38 = null;
        stack36.push(obj38);
        stack36.pop();
        int int41 = stack36.size();
        stack36.clear();
        stack36.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass45 = stack36.getClass();
        stack31.push((java.lang.Object) stack36);
        boolean boolean47 = stack36.isEmpty();
        java.lang.Class<?> wildcardClass48 = stack36.getClass();
        int int49 = stack36.size();
        stack0.push((java.lang.Object) int49);
        jbhembise.testauto.example3.Stack stack51 = new jbhembise.testauto.example3.Stack();
        int int52 = stack51.size();
        java.lang.Object obj53 = null;
        stack51.push(obj53);
        stack51.pop();
        int int56 = stack51.size();
        stack51.clear();
        stack51.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass60 = stack51.getClass();
        boolean boolean61 = stack51.isEmpty();
        stack51.clear();
        stack51.clear();
        jbhembise.testauto.example3.Stack stack64 = new jbhembise.testauto.example3.Stack();
        boolean boolean65 = stack64.isEmpty();
        stack64.clear();
        jbhembise.testauto.example3.Stack stack67 = new jbhembise.testauto.example3.Stack();
        int int68 = stack67.size();
        java.lang.Object obj69 = null;
        stack67.push(obj69);
        stack67.pop();
        int int72 = stack67.size();
        stack67.clear();
        stack67.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass76 = stack67.getClass();
        stack64.push((java.lang.Object) stack67);
        stack51.push((java.lang.Object) stack64);
        stack0.push((java.lang.Object) stack51);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        stack13.pop();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.clear();
        boolean boolean36 = stack29.isEmpty();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Class<?> wildcardClass39 = stack37.getClass();
        java.lang.Class<?> wildcardClass40 = stack37.getClass();
        stack37.push((java.lang.Object) 10L);
        boolean boolean43 = stack37.isFull();
        stack29.push((java.lang.Object) stack37);
        stack29.push((java.lang.Object) false);
        stack29.clear();
        int int48 = stack29.size();
        stack13.push((java.lang.Object) stack29);
        java.lang.Class<?> wildcardClass50 = stack13.getClass();
        java.lang.Object obj51 = stack13.last();
        java.lang.Class<?> wildcardClass52 = stack13.getClass();
        jbhembise.testauto.example3.Stack stack53 = new jbhembise.testauto.example3.Stack();
        int int54 = stack53.size();
        java.lang.Object obj55 = null;
        stack53.push(obj55);
        stack53.pop();
        int int58 = stack53.size();
        stack53.clear();
        stack53.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass62 = stack53.getClass();
        boolean boolean63 = stack53.isEmpty();
        jbhembise.testauto.example3.Stack stack64 = new jbhembise.testauto.example3.Stack();
        boolean boolean65 = stack64.isEmpty();
        boolean boolean66 = stack64.isEmpty();
        boolean boolean67 = stack64.isEmpty();
        stack53.push((java.lang.Object) boolean67);
        java.lang.Object obj69 = stack53.last();
        stack13.push(obj69);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + obj69 + "' != '" + true + "'", obj69.equals(true));
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        boolean boolean7 = stack0.isFull();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        int int6 = stack0.size();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        boolean boolean8 = stack7.isEmpty();
        boolean boolean9 = stack7.isEmpty();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        boolean boolean11 = stack10.isEmpty();
        stack10.push((java.lang.Object) (short) 10);
        stack7.push((java.lang.Object) stack10);
        boolean boolean15 = stack7.isEmpty();
        java.lang.Object obj16 = stack7.last();
        boolean boolean17 = stack7.isFull();
        java.lang.Class<?> wildcardClass18 = stack7.getClass();
        stack0.push((java.lang.Object) stack7);
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        boolean boolean21 = stack20.isEmpty();
        stack20.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass25 = stack24.getClass();
        int int26 = stack24.size();
        stack20.push((java.lang.Object) int26);
        stack20.clear();
        java.lang.Class<?> wildcardClass29 = stack20.getClass();
        java.lang.Class<?> wildcardClass30 = stack20.getClass();
        stack7.push((java.lang.Object) wildcardClass30);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        stack0.clear();
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        boolean boolean21 = stack19.isEmpty();
        int int22 = stack19.size();
        stack0.push((java.lang.Object) int22);
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Class<?> wildcardClass26 = stack24.getClass();
        java.lang.Class<?> wildcardClass27 = stack24.getClass();
        boolean boolean28 = stack24.isFull();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        java.lang.Object obj31 = null;
        stack29.push(obj31);
        stack29.pop();
        int int34 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass38 = stack29.getClass();
        stack24.push((java.lang.Object) stack29);
        stack24.pop();
        boolean boolean41 = stack24.isEmpty();
        java.lang.Class<?> wildcardClass42 = stack24.getClass();
        stack0.push((java.lang.Object) stack24);
        boolean boolean44 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        int int9 = stack3.size();
        int int10 = stack3.size();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        stack14.push((java.lang.Object) (short) 10);
        stack11.push((java.lang.Object) stack14);
        boolean boolean19 = stack11.isEmpty();
        java.lang.Object obj20 = stack11.last();
        boolean boolean21 = stack11.isFull();
        boolean boolean22 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Class<?> wildcardClass25 = stack23.getClass();
        java.lang.Class<?> wildcardClass26 = stack23.getClass();
        boolean boolean27 = stack23.isFull();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        stack28.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass37 = stack28.getClass();
        stack23.push((java.lang.Object) stack28);
        stack28.pop();
        int int40 = stack28.size();
        boolean boolean41 = stack28.isEmpty();
        stack28.clear();
        stack11.push((java.lang.Object) stack28);
        stack3.push((java.lang.Object) stack11);
        stack11.clear();
        int int46 = stack11.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        stack0.pop();
        java.lang.Class<?> wildcardClass10 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        java.lang.Object obj19 = null;
        stack5.push(obj19);
        java.lang.Class<?> wildcardClass21 = stack5.getClass();
        stack5.clear();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        boolean boolean24 = stack23.isEmpty();
        stack23.push((java.lang.Object) "hi!");
        int int27 = stack23.size();
        stack5.push((java.lang.Object) stack23);
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        boolean boolean32 = stack29.isFull();
        stack29.clear();
        java.lang.Class<?> wildcardClass34 = stack29.getClass();
        stack5.push((java.lang.Object) wildcardClass34);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        int int17 = stack0.size();
        boolean boolean18 = stack0.isEmpty();
        boolean boolean19 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Object obj22 = null;
        stack20.push(obj22);
        stack20.pop();
        int int25 = stack20.size();
        stack20.clear();
        stack20.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass29 = stack20.getClass();
        boolean boolean30 = stack20.isEmpty();
        stack20.clear();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        int int33 = stack32.size();
        java.lang.Class<?> wildcardClass34 = stack32.getClass();
        java.lang.Class<?> wildcardClass35 = stack32.getClass();
        java.lang.Class<?> wildcardClass36 = stack32.getClass();
        stack20.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stack20.last();
        int int39 = stack20.size();
        stack20.pop();
        boolean boolean41 = stack20.isFull();
        stack0.push((java.lang.Object) boolean41);
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        java.lang.Class<?> wildcardClass17 = stack5.getClass();
        int int18 = stack5.size();
        stack5.clear();
        stack5.clear();
        boolean boolean21 = stack5.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        java.lang.Object obj6 = stack0.last();
        java.lang.Object obj7 = stack0.last();
        java.lang.Object obj8 = stack0.last();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) true);
        boolean boolean14 = stack9.isEmpty();
        stack9.clear();
        boolean boolean16 = stack9.isEmpty();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        int int18 = stack17.size();
        java.lang.Class<?> wildcardClass19 = stack17.getClass();
        java.lang.Class<?> wildcardClass20 = stack17.getClass();
        stack17.push((java.lang.Object) 10L);
        boolean boolean23 = stack17.isFull();
        stack9.push((java.lang.Object) stack17);
        stack0.push((java.lang.Object) stack17);
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + true + "'", obj6.equals(true));
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + true + "'", obj7.equals(true));
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + true + "'", obj8.equals(true));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        int int9 = stack3.size();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Class<?> wildcardClass12 = stack10.getClass();
        java.lang.Class<?> wildcardClass13 = stack10.getClass();
        boolean boolean14 = stack10.isFull();
        boolean boolean15 = stack10.isFull();
        boolean boolean16 = stack10.isFull();
        stack3.push((java.lang.Object) stack10);
        stack3.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        boolean boolean5 = stack0.isFull();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        java.lang.Class<?> wildcardClass12 = stack8.getClass();
        boolean boolean13 = stack8.isEmpty();
        java.lang.Class<?> wildcardClass14 = stack8.getClass();
        stack0.push((java.lang.Object) stack8);
        stack0.clear();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Object obj5 = null;
        stack3.push(obj5);
        stack3.pop();
        int int8 = stack3.size();
        stack3.clear();
        stack3.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass12 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        stack3.clear();
        boolean boolean15 = stack3.isEmpty();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        int int25 = stack16.size();
        boolean boolean26 = stack16.isEmpty();
        stack16.clear();
        stack3.push((java.lang.Object) stack16);
        boolean boolean29 = stack3.isEmpty();
        int int30 = stack3.size();
        boolean boolean31 = stack3.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass6 = stack5.getClass();
        int int7 = stack5.size();
        stack0.push((java.lang.Object) int7);
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass10 = stack9.getClass();
        stack0.push((java.lang.Object) wildcardClass10);
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        int int17 = stack12.size();
        java.lang.Class<?> wildcardClass18 = stack12.getClass();
        stack12.pop();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Class<?> wildcardClass22 = stack20.getClass();
        java.lang.Class<?> wildcardClass23 = stack20.getClass();
        boolean boolean24 = stack20.isFull();
        boolean boolean25 = stack20.isFull();
        stack12.push((java.lang.Object) stack20);
        stack20.clear();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Class<?> wildcardClass30 = stack28.getClass();
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        int int32 = stack31.size();
        java.lang.Class<?> wildcardClass33 = stack31.getClass();
        java.lang.Class<?> wildcardClass34 = stack31.getClass();
        boolean boolean35 = stack31.isFull();
        jbhembise.testauto.example3.Stack stack36 = new jbhembise.testauto.example3.Stack();
        int int37 = stack36.size();
        java.lang.Object obj38 = null;
        stack36.push(obj38);
        stack36.pop();
        int int41 = stack36.size();
        stack36.clear();
        stack36.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass45 = stack36.getClass();
        stack31.push((java.lang.Object) stack36);
        boolean boolean47 = stack36.isEmpty();
        int int48 = stack36.size();
        jbhembise.testauto.example3.Stack stack49 = new jbhembise.testauto.example3.Stack();
        int int50 = stack49.size();
        java.lang.Object obj51 = null;
        stack49.push(obj51);
        stack49.pop();
        int int54 = stack49.size();
        stack49.clear();
        stack49.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass58 = stack49.getClass();
        boolean boolean59 = stack49.isFull();
        stack49.clear();
        jbhembise.testauto.example3.Stack stack61 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass62 = stack61.getClass();
        int int63 = stack61.size();
        stack61.push((java.lang.Object) (byte) 10);
        stack49.push((java.lang.Object) stack61);
        stack49.clear();
        stack36.push((java.lang.Object) stack49);
        stack28.push((java.lang.Object) stack49);
        boolean boolean70 = stack28.isFull();
        stack20.push((java.lang.Object) boolean70);
        stack0.push((java.lang.Object) boolean70);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Class<?> wildcardClass5 = stack3.getClass();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        java.lang.Class<?> wildcardClass7 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Object obj11 = null;
        stack9.push(obj11);
        stack9.pop();
        int int14 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) 10);
        int int18 = stack9.size();
        java.lang.Class<?> wildcardClass19 = stack9.getClass();
        stack0.push((java.lang.Object) stack9);
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        stack21.clear();
        boolean boolean24 = stack21.isFull();
        stack21.clear();
        boolean boolean26 = stack21.isFull();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Class<?> wildcardClass29 = stack27.getClass();
        java.lang.Class<?> wildcardClass30 = stack27.getClass();
        stack21.push((java.lang.Object) wildcardClass30);
        stack0.push((java.lang.Object) stack21);
        boolean boolean33 = stack21.isFull();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        boolean boolean6 = stack0.isFull();
        stack0.pop();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        boolean boolean9 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        java.lang.Object obj4 = stack0.last();
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        int int18 = stack5.size();
        int int19 = stack5.size();
        java.lang.Object obj20 = stack5.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + 10 + "'", obj20.equals(10));
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        int int3 = stack0.size();
        int int4 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        java.lang.Object obj8 = stack0.last();
        java.lang.Object obj9 = stack0.last();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        boolean boolean19 = stack10.isEmpty();
        boolean boolean20 = stack10.isEmpty();
        java.lang.Object obj21 = stack10.last();
        java.lang.Class<?> wildcardClass22 = stack10.getClass();
        stack0.push((java.lang.Object) stack10);
        stack10.pop();
        boolean boolean25 = stack10.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + 10 + "'", obj21.equals(10));
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Object obj11 = null;
        stack9.push(obj11);
        stack9.pop();
        int int14 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        boolean boolean19 = stack9.isFull();
        stack9.clear();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass22 = stack21.getClass();
        int int23 = stack21.size();
        stack21.push((java.lang.Object) (byte) 10);
        stack9.push((java.lang.Object) stack21);
        java.lang.Object obj27 = stack9.last();
        java.lang.Object obj28 = stack9.last();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        java.lang.Class<?> wildcardClass34 = stack29.getClass();
        stack9.push((java.lang.Object) wildcardClass34);
        stack9.pop();
        stack9.pop();
        stack0.push((java.lang.Object) stack9);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        int int5 = stack4.size();
        java.lang.Class<?> wildcardClass6 = stack4.getClass();
        java.lang.Class<?> wildcardClass7 = stack4.getClass();
        boolean boolean8 = stack4.isFull();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Object obj11 = null;
        stack9.push(obj11);
        stack9.pop();
        int int14 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        stack4.push((java.lang.Object) stack9);
        boolean boolean20 = stack4.isFull();
        stack4.clear();
        boolean boolean22 = stack4.isFull();
        stack0.push((java.lang.Object) stack4);
        boolean boolean24 = stack4.isFull();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Class<?> wildcardClass27 = stack25.getClass();
        java.lang.Class<?> wildcardClass28 = stack25.getClass();
        java.lang.Class<?> wildcardClass29 = stack25.getClass();
        stack25.clear();
        stack25.clear();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        int int33 = stack32.size();
        java.lang.Object obj34 = null;
        stack32.push(obj34);
        stack32.pop();
        int int37 = stack32.size();
        stack32.clear();
        stack32.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass41 = stack32.getClass();
        stack25.push((java.lang.Object) wildcardClass41);
        jbhembise.testauto.example3.Stack stack43 = new jbhembise.testauto.example3.Stack();
        int int44 = stack43.size();
        stack43.clear();
        stack43.push((java.lang.Object) true);
        boolean boolean48 = stack43.isEmpty();
        stack43.pop();
        stack25.push((java.lang.Object) stack43);
        boolean boolean51 = stack25.isFull();
        java.lang.Object obj52 = stack25.last();
        stack4.push((java.lang.Object) stack25);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        java.lang.Object obj6 = stack0.last();
        int int7 = stack0.size();
        boolean boolean8 = stack0.isFull();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + true + "'", obj6.equals(true));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        boolean boolean6 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        boolean boolean2 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        boolean boolean6 = stack5.isEmpty();
        boolean boolean7 = stack5.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        boolean boolean9 = stack8.isEmpty();
        stack8.push((java.lang.Object) (short) 10);
        stack5.push((java.lang.Object) stack8);
        boolean boolean13 = stack5.isEmpty();
        java.lang.Object obj14 = stack5.last();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        stack0.push((java.lang.Object) wildcardClass15);
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        int int18 = stack17.size();
        java.lang.Class<?> wildcardClass19 = stack17.getClass();
        java.lang.Class<?> wildcardClass20 = stack17.getClass();
        java.lang.Class<?> wildcardClass21 = stack17.getClass();
        stack17.clear();
        stack17.clear();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Object obj26 = null;
        stack24.push(obj26);
        stack24.pop();
        int int29 = stack24.size();
        stack24.clear();
        stack24.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass33 = stack24.getClass();
        stack17.push((java.lang.Object) wildcardClass33);
        stack0.push((java.lang.Object) stack17);
        boolean boolean36 = stack17.isFull();
        stack17.pop();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        stack6.push((java.lang.Object) true);
        boolean boolean11 = stack6.isEmpty();
        int int12 = stack6.size();
        int int13 = stack6.size();
        stack0.push((java.lang.Object) stack6);
        java.lang.Class<?> wildcardClass15 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) true);
        boolean boolean21 = stack16.isEmpty();
        boolean boolean22 = stack16.isFull();
        stack0.push((java.lang.Object) stack16);
        boolean boolean24 = stack16.isFull();
        stack16.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        java.lang.Class<?> wildcardClass17 = stack5.getClass();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.clear();
        boolean boolean25 = stack18.isEmpty();
        jbhembise.testauto.example3.Stack stack26 = new jbhembise.testauto.example3.Stack();
        int int27 = stack26.size();
        java.lang.Class<?> wildcardClass28 = stack26.getClass();
        java.lang.Class<?> wildcardClass29 = stack26.getClass();
        stack26.push((java.lang.Object) 10L);
        boolean boolean32 = stack26.isFull();
        stack18.push((java.lang.Object) stack26);
        java.lang.Object obj34 = stack18.last();
        stack18.clear();
        stack18.clear();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Object obj39 = null;
        stack37.push(obj39);
        stack37.pop();
        int int42 = stack37.size();
        stack37.clear();
        stack37.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass46 = stack37.getClass();
        boolean boolean47 = stack37.isEmpty();
        stack37.clear();
        stack37.clear();
        jbhembise.testauto.example3.Stack stack50 = new jbhembise.testauto.example3.Stack();
        boolean boolean51 = stack50.isEmpty();
        stack50.clear();
        jbhembise.testauto.example3.Stack stack53 = new jbhembise.testauto.example3.Stack();
        int int54 = stack53.size();
        java.lang.Object obj55 = null;
        stack53.push(obj55);
        stack53.pop();
        int int58 = stack53.size();
        stack53.clear();
        stack53.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass62 = stack53.getClass();
        stack50.push((java.lang.Object) stack53);
        stack37.push((java.lang.Object) stack50);
        int int65 = stack50.size();
        stack50.clear();
        stack18.push((java.lang.Object) stack50);
        boolean boolean68 = stack50.isFull();
        stack5.push((java.lang.Object) boolean68);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        int int11 = stack0.size();
        java.lang.Class<?> wildcardClass12 = stack0.getClass();
        boolean boolean13 = stack0.isFull();
        java.lang.Object obj14 = stack0.last();
        boolean boolean15 = stack0.isEmpty();
        boolean boolean16 = stack0.isEmpty();
        boolean boolean17 = stack0.isFull();
        int int18 = stack0.size();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        java.lang.Object obj21 = null;
        stack19.push(obj21);
        stack19.pop();
        int int24 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass28 = stack19.getClass();
        boolean boolean29 = stack19.isEmpty();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        boolean boolean31 = stack30.isEmpty();
        boolean boolean32 = stack30.isEmpty();
        boolean boolean33 = stack30.isEmpty();
        stack19.push((java.lang.Object) boolean33);
        jbhembise.testauto.example3.Stack stack35 = new jbhembise.testauto.example3.Stack();
        int int36 = stack35.size();
        stack35.clear();
        stack35.push((java.lang.Object) true);
        boolean boolean40 = stack35.isEmpty();
        stack35.pop();
        int int42 = stack35.size();
        stack19.push((java.lang.Object) int42);
        java.lang.Object obj44 = stack19.last();
        stack19.clear();
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        int int47 = stack46.size();
        java.lang.Class<?> wildcardClass48 = stack46.getClass();
        java.lang.Class<?> wildcardClass49 = stack46.getClass();
        java.lang.Class<?> wildcardClass50 = stack46.getClass();
        stack46.clear();
        stack46.clear();
        jbhembise.testauto.example3.Stack stack53 = new jbhembise.testauto.example3.Stack();
        int int54 = stack53.size();
        java.lang.Object obj55 = null;
        stack53.push(obj55);
        stack53.pop();
        int int58 = stack53.size();
        stack53.clear();
        stack53.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass62 = stack53.getClass();
        stack46.push((java.lang.Object) wildcardClass62);
        boolean boolean64 = stack46.isFull();
        boolean boolean65 = stack46.isFull();
        jbhembise.testauto.example3.Stack stack66 = new jbhembise.testauto.example3.Stack();
        int int67 = stack66.size();
        java.lang.Object obj68 = null;
        stack66.push(obj68);
        stack66.pop();
        int int71 = stack66.size();
        stack66.clear();
        stack66.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass75 = stack66.getClass();
        boolean boolean76 = stack66.isEmpty();
        stack66.clear();
        boolean boolean78 = stack66.isFull();
        java.lang.Class<?> wildcardClass79 = stack66.getClass();
        stack46.push((java.lang.Object) stack66);
        stack19.push((java.lang.Object) stack46);
        stack0.push((java.lang.Object) stack46);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + 0 + "'", obj14.equals(0));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + obj44 + "' != '" + 0 + "'", obj44.equals(0));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        boolean boolean18 = stack0.isFull();
        boolean boolean19 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Object obj22 = null;
        stack20.push(obj22);
        stack20.pop();
        int int25 = stack20.size();
        stack20.clear();
        stack20.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass29 = stack20.getClass();
        boolean boolean30 = stack20.isEmpty();
        stack20.clear();
        boolean boolean32 = stack20.isFull();
        java.lang.Class<?> wildcardClass33 = stack20.getClass();
        stack0.push((java.lang.Object) stack20);
        java.lang.Class<?> wildcardClass35 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        boolean boolean6 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        java.lang.Class<?> wildcardClass9 = stack3.getClass();
        java.lang.Object obj10 = stack3.last();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass12 = stack11.getClass();
        boolean boolean13 = stack11.isEmpty();
        stack11.clear();
        stack11.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        boolean boolean17 = stack16.isEmpty();
        boolean boolean18 = stack16.isEmpty();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        boolean boolean20 = stack19.isEmpty();
        stack19.push((java.lang.Object) (short) 10);
        stack16.push((java.lang.Object) stack19);
        boolean boolean24 = stack16.isEmpty();
        java.lang.Object obj25 = stack16.last();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        stack11.push((java.lang.Object) wildcardClass26);
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Class<?> wildcardClass30 = stack28.getClass();
        java.lang.Class<?> wildcardClass31 = stack28.getClass();
        java.lang.Class<?> wildcardClass32 = stack28.getClass();
        stack28.clear();
        stack28.clear();
        jbhembise.testauto.example3.Stack stack35 = new jbhembise.testauto.example3.Stack();
        int int36 = stack35.size();
        java.lang.Object obj37 = null;
        stack35.push(obj37);
        stack35.pop();
        int int40 = stack35.size();
        stack35.clear();
        stack35.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass44 = stack35.getClass();
        stack28.push((java.lang.Object) wildcardClass44);
        stack11.push((java.lang.Object) stack28);
        stack3.push((java.lang.Object) stack11);
        boolean boolean48 = stack3.isEmpty();
        jbhembise.testauto.example3.Stack stack49 = new jbhembise.testauto.example3.Stack();
        int int50 = stack49.size();
        stack49.clear();
        boolean boolean52 = stack49.isFull();
        stack49.clear();
        boolean boolean54 = stack49.isFull();
        stack49.clear();
        stack3.push((java.lang.Object) stack49);
        boolean boolean57 = stack49.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 10 + "'", obj10.equals((short) 10));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        stack13.pop();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.clear();
        boolean boolean36 = stack29.isEmpty();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Class<?> wildcardClass39 = stack37.getClass();
        java.lang.Class<?> wildcardClass40 = stack37.getClass();
        stack37.push((java.lang.Object) 10L);
        boolean boolean43 = stack37.isFull();
        stack29.push((java.lang.Object) stack37);
        stack29.push((java.lang.Object) false);
        stack29.clear();
        int int48 = stack29.size();
        stack13.push((java.lang.Object) stack29);
        java.lang.Class<?> wildcardClass50 = stack13.getClass();
        java.lang.Object obj51 = stack13.last();
        java.lang.Class<?> wildcardClass52 = stack13.getClass();
        boolean boolean53 = stack13.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        java.lang.Object obj7 = stack0.last();
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass10 = stack0.getClass();
        boolean boolean11 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + 10L + "'", obj7.equals(10L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Class<?> wildcardClass7 = stack5.getClass();
        java.lang.Class<?> wildcardClass8 = stack5.getClass();
        boolean boolean9 = stack5.isFull();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass19 = stack10.getClass();
        stack5.push((java.lang.Object) stack10);
        boolean boolean21 = stack10.isEmpty();
        int int22 = stack10.size();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Object obj25 = null;
        stack23.push(obj25);
        stack23.pop();
        int int28 = stack23.size();
        stack23.clear();
        stack23.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass32 = stack23.getClass();
        boolean boolean33 = stack23.isFull();
        stack23.clear();
        jbhembise.testauto.example3.Stack stack35 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass36 = stack35.getClass();
        int int37 = stack35.size();
        stack35.push((java.lang.Object) (byte) 10);
        stack23.push((java.lang.Object) stack35);
        stack23.clear();
        stack10.push((java.lang.Object) stack23);
        boolean boolean43 = stack10.isEmpty();
        stack0.push((java.lang.Object) stack10);
        java.lang.Class<?> wildcardClass45 = stack10.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        boolean boolean13 = stack12.isEmpty();
        boolean boolean14 = stack12.isEmpty();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        boolean boolean16 = stack15.isEmpty();
        stack15.push((java.lang.Object) (short) 10);
        stack12.push((java.lang.Object) stack15);
        boolean boolean20 = stack12.isEmpty();
        java.lang.Class<?> wildcardClass21 = stack12.getClass();
        int int22 = stack12.size();
        java.lang.Object obj23 = stack12.last();
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        stack25.clear();
        boolean boolean28 = stack25.isFull();
        stack25.clear();
        boolean boolean30 = stack25.isFull();
        stack25.clear();
        boolean boolean32 = stack25.isEmpty();
        jbhembise.testauto.example3.Stack stack33 = new jbhembise.testauto.example3.Stack();
        int int34 = stack33.size();
        java.lang.Class<?> wildcardClass35 = stack33.getClass();
        java.lang.Class<?> wildcardClass36 = stack33.getClass();
        java.lang.Class<?> wildcardClass37 = stack33.getClass();
        boolean boolean38 = stack33.isEmpty();
        java.lang.Class<?> wildcardClass39 = stack33.getClass();
        stack25.push((java.lang.Object) stack33);
        stack25.clear();
        boolean boolean42 = stack25.isEmpty();
        boolean boolean43 = stack25.isFull();
        stack12.push((java.lang.Object) stack25);
        stack25.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        java.lang.Object obj18 = stack0.last();
        int int19 = stack0.size();
        java.lang.Object obj20 = stack0.last();
        int int21 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        java.lang.Object obj18 = stack0.last();
        stack0.clear();
        int int20 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        stack0.pop();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isFull();
        boolean boolean9 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        int int17 = stack0.size();
        boolean boolean18 = stack0.isEmpty();
        boolean boolean19 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        stack20.clear();
        stack20.push((java.lang.Object) true);
        boolean boolean25 = stack20.isEmpty();
        int int26 = stack20.size();
        java.lang.Class<?> wildcardClass27 = stack20.getClass();
        boolean boolean28 = stack20.isEmpty();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        java.lang.Class<?> wildcardClass31 = stack29.getClass();
        java.lang.Class<?> wildcardClass32 = stack29.getClass();
        stack29.push((java.lang.Object) 10L);
        stack29.pop();
        int int36 = stack29.size();
        stack20.push((java.lang.Object) stack29);
        jbhembise.testauto.example3.Stack stack38 = new jbhembise.testauto.example3.Stack();
        int int39 = stack38.size();
        stack38.clear();
        stack38.push((java.lang.Object) true);
        boolean boolean43 = stack38.isFull();
        stack20.push((java.lang.Object) stack38);
        stack0.push((java.lang.Object) stack38);
        java.lang.Object obj46 = stack0.last();
        boolean boolean47 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        boolean boolean15 = stack11.isFull();
        boolean boolean16 = stack11.isFull();
        boolean boolean17 = stack11.isFull();
        boolean boolean18 = stack11.isEmpty();
        java.lang.Class<?> wildcardClass19 = stack11.getClass();
        stack0.push((java.lang.Object) wildcardClass19);
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        stack21.clear();
        boolean boolean24 = stack21.isFull();
        stack21.clear();
        boolean boolean26 = stack21.isFull();
        stack21.clear();
        boolean boolean28 = stack21.isEmpty();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        java.lang.Class<?> wildcardClass31 = stack29.getClass();
        java.lang.Class<?> wildcardClass32 = stack29.getClass();
        java.lang.Class<?> wildcardClass33 = stack29.getClass();
        boolean boolean34 = stack29.isEmpty();
        java.lang.Class<?> wildcardClass35 = stack29.getClass();
        stack21.push((java.lang.Object) stack29);
        stack21.clear();
        boolean boolean38 = stack21.isEmpty();
        boolean boolean39 = stack21.isFull();
        java.lang.Class<?> wildcardClass40 = stack21.getClass();
        java.lang.Class<?> wildcardClass41 = stack21.getClass();
        stack0.push((java.lang.Object) stack21);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        int int5 = stack0.size();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        boolean boolean7 = stack0.isEmpty();
        stack0.pop();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        stack0.clear();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        java.lang.Object obj18 = null;
        stack5.push(obj18);
        stack5.clear();
        boolean boolean21 = stack5.isFull();
        java.lang.Class<?> wildcardClass22 = stack5.getClass();
        boolean boolean23 = stack5.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        int int5 = stack0.size();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        stack0.pop();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        boolean boolean12 = stack8.isFull();
        boolean boolean13 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        boolean boolean15 = stack8.isEmpty();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Class<?> wildcardClass18 = stack16.getClass();
        java.lang.Class<?> wildcardClass19 = stack16.getClass();
        boolean boolean20 = stack16.isFull();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Object obj23 = null;
        stack21.push(obj23);
        stack21.pop();
        int int26 = stack21.size();
        stack21.clear();
        stack21.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass30 = stack21.getClass();
        stack16.push((java.lang.Object) stack21);
        boolean boolean32 = stack16.isFull();
        stack16.clear();
        java.lang.Class<?> wildcardClass34 = stack16.getClass();
        jbhembise.testauto.example3.Stack stack35 = new jbhembise.testauto.example3.Stack();
        int int36 = stack35.size();
        boolean boolean37 = stack35.isEmpty();
        int int38 = stack35.size();
        stack16.push((java.lang.Object) int38);
        stack8.push((java.lang.Object) int38);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        java.lang.Object obj8 = null;
        stack6.push(obj8);
        stack6.pop();
        int int11 = stack6.size();
        stack6.clear();
        stack6.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass15 = stack6.getClass();
        boolean boolean16 = stack6.isEmpty();
        stack6.clear();
        stack6.clear();
        boolean boolean19 = stack6.isFull();
        stack6.clear();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        boolean boolean22 = stack21.isEmpty();
        boolean boolean23 = stack21.isEmpty();
        boolean boolean24 = stack21.isEmpty();
        stack21.clear();
        java.lang.Class<?> wildcardClass26 = stack21.getClass();
        stack6.push((java.lang.Object) stack21);
        int int28 = stack21.size();
        stack0.push((java.lang.Object) stack21);
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Class<?> wildcardClass32 = stack30.getClass();
        java.lang.Class<?> wildcardClass33 = stack30.getClass();
        java.lang.Class<?> wildcardClass34 = stack30.getClass();
        stack30.clear();
        stack30.clear();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Object obj39 = null;
        stack37.push(obj39);
        stack37.pop();
        int int42 = stack37.size();
        stack37.clear();
        stack37.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass46 = stack37.getClass();
        stack30.push((java.lang.Object) wildcardClass46);
        jbhembise.testauto.example3.Stack stack48 = new jbhembise.testauto.example3.Stack();
        int int49 = stack48.size();
        stack48.clear();
        stack48.push((java.lang.Object) true);
        boolean boolean53 = stack48.isEmpty();
        stack48.pop();
        stack30.push((java.lang.Object) stack48);
        boolean boolean56 = stack48.isFull();
        jbhembise.testauto.example3.Stack stack57 = new jbhembise.testauto.example3.Stack();
        boolean boolean58 = stack57.isEmpty();
        boolean boolean59 = stack57.isEmpty();
        jbhembise.testauto.example3.Stack stack60 = new jbhembise.testauto.example3.Stack();
        int int61 = stack60.size();
        java.lang.Object obj62 = null;
        stack60.push(obj62);
        stack60.pop();
        int int65 = stack60.size();
        int int66 = stack60.size();
        stack57.push((java.lang.Object) int66);
        stack48.push((java.lang.Object) stack57);
        int int69 = stack57.size();
        stack21.push((java.lang.Object) int69);
        stack21.pop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        stack0.clear();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass6 = stack5.getClass();
        int int7 = stack5.size();
        stack5.push((java.lang.Object) (byte) 10);
        int int10 = stack5.size();
        stack5.clear();
        stack0.push((java.lang.Object) stack5);
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        java.lang.Class<?> wildcardClass15 = stack13.getClass();
        java.lang.Class<?> wildcardClass16 = stack13.getClass();
        java.lang.Class<?> wildcardClass17 = stack13.getClass();
        stack13.clear();
        java.lang.Class<?> wildcardClass19 = stack13.getClass();
        stack0.push((java.lang.Object) wildcardClass19);
        boolean boolean21 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        int int5 = stack0.size();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        stack0.push((java.lang.Object) stack7);
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Class<?> wildcardClass12 = stack10.getClass();
        java.lang.Class<?> wildcardClass13 = stack10.getClass();
        boolean boolean14 = stack10.isFull();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        int int16 = stack15.size();
        java.lang.Object obj17 = null;
        stack15.push(obj17);
        stack15.pop();
        int int20 = stack15.size();
        stack15.clear();
        stack15.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass24 = stack15.getClass();
        stack10.push((java.lang.Object) stack15);
        boolean boolean26 = stack10.isEmpty();
        boolean boolean27 = stack10.isEmpty();
        java.lang.Class<?> wildcardClass28 = stack10.getClass();
        stack7.push((java.lang.Object) wildcardClass28);
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Class<?> wildcardClass32 = stack30.getClass();
        java.lang.Class<?> wildcardClass33 = stack30.getClass();
        stack30.push((java.lang.Object) 10L);
        stack30.pop();
        int int37 = stack30.size();
        boolean boolean38 = stack30.isEmpty();
        java.lang.Class<?> wildcardClass39 = stack30.getClass();
        stack7.push((java.lang.Object) wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        int int17 = stack0.size();
        boolean boolean18 = stack0.isEmpty();
        boolean boolean19 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        stack20.clear();
        stack20.push((java.lang.Object) true);
        boolean boolean25 = stack20.isEmpty();
        int int26 = stack20.size();
        java.lang.Class<?> wildcardClass27 = stack20.getClass();
        boolean boolean28 = stack20.isEmpty();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        java.lang.Class<?> wildcardClass31 = stack29.getClass();
        java.lang.Class<?> wildcardClass32 = stack29.getClass();
        stack29.push((java.lang.Object) 10L);
        stack29.pop();
        int int36 = stack29.size();
        stack20.push((java.lang.Object) stack29);
        jbhembise.testauto.example3.Stack stack38 = new jbhembise.testauto.example3.Stack();
        int int39 = stack38.size();
        stack38.clear();
        stack38.push((java.lang.Object) true);
        boolean boolean43 = stack38.isFull();
        stack20.push((java.lang.Object) stack38);
        stack0.push((java.lang.Object) stack38);
        boolean boolean46 = stack38.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        int int8 = stack0.size();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        java.lang.Class<?> wildcardClass11 = stack0.getClass();
        java.lang.Class<?> wildcardClass12 = stack0.getClass();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        stack11.clear();
        int int14 = stack11.size();
        java.lang.Class<?> wildcardClass15 = stack11.getClass();
        java.lang.Class<?> wildcardClass16 = stack11.getClass();
        stack0.push((java.lang.Object) stack11);
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) true);
        boolean boolean24 = stack19.isEmpty();
        int int25 = stack19.size();
        java.lang.Class<?> wildcardClass26 = stack19.getClass();
        boolean boolean27 = stack19.isEmpty();
        boolean boolean28 = stack19.isFull();
        boolean boolean29 = stack19.isFull();
        stack19.clear();
        boolean boolean31 = stack19.isEmpty();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        int int33 = stack32.size();
        java.lang.Class<?> wildcardClass34 = stack32.getClass();
        java.lang.Class<?> wildcardClass35 = stack32.getClass();
        stack32.push((java.lang.Object) 10L);
        boolean boolean38 = stack32.isFull();
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass40 = stack39.getClass();
        int int41 = stack39.size();
        stack32.push((java.lang.Object) int41);
        int int43 = stack32.size();
        java.lang.Class<?> wildcardClass44 = stack32.getClass();
        boolean boolean45 = stack32.isFull();
        stack19.push((java.lang.Object) stack32);
        stack0.push((java.lang.Object) stack32);
        jbhembise.testauto.example3.Stack stack48 = new jbhembise.testauto.example3.Stack();
        int int49 = stack48.size();
        java.lang.Object obj50 = null;
        stack48.push(obj50);
        stack48.pop();
        int int53 = stack48.size();
        stack48.clear();
        stack48.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass57 = stack48.getClass();
        boolean boolean58 = stack48.isEmpty();
        stack48.clear();
        stack48.clear();
        jbhembise.testauto.example3.Stack stack61 = new jbhembise.testauto.example3.Stack();
        boolean boolean62 = stack61.isEmpty();
        stack61.clear();
        jbhembise.testauto.example3.Stack stack64 = new jbhembise.testauto.example3.Stack();
        int int65 = stack64.size();
        java.lang.Object obj66 = null;
        stack64.push(obj66);
        stack64.pop();
        int int69 = stack64.size();
        stack64.clear();
        stack64.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass73 = stack64.getClass();
        stack61.push((java.lang.Object) stack64);
        stack48.push((java.lang.Object) stack61);
        boolean boolean76 = stack48.isFull();
        boolean boolean77 = stack48.isFull();
        stack0.push((java.lang.Object) boolean77);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Object obj5 = null;
        stack3.push(obj5);
        stack3.pop();
        int int8 = stack3.size();
        stack3.clear();
        stack3.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass12 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        stack3.clear();
        boolean boolean15 = stack3.isEmpty();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        int int25 = stack16.size();
        boolean boolean26 = stack16.isEmpty();
        stack16.clear();
        stack3.push((java.lang.Object) stack16);
        boolean boolean29 = stack3.isEmpty();
        int int30 = stack3.size();
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        boolean boolean32 = stack31.isEmpty();
        stack31.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack35 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass36 = stack35.getClass();
        int int37 = stack35.size();
        stack31.push((java.lang.Object) int37);
        stack31.clear();
        java.lang.Class<?> wildcardClass40 = stack31.getClass();
        stack31.clear();
        jbhembise.testauto.example3.Stack stack42 = new jbhembise.testauto.example3.Stack();
        boolean boolean43 = stack42.isEmpty();
        boolean boolean44 = stack42.isEmpty();
        jbhembise.testauto.example3.Stack stack45 = new jbhembise.testauto.example3.Stack();
        boolean boolean46 = stack45.isEmpty();
        stack45.push((java.lang.Object) (short) 10);
        stack42.push((java.lang.Object) stack45);
        boolean boolean50 = stack42.isEmpty();
        java.lang.Object obj51 = stack42.last();
        int int52 = stack42.size();
        stack31.push((java.lang.Object) stack42);
        stack3.push((java.lang.Object) stack42);
        java.lang.Object obj55 = stack3.last();
        jbhembise.testauto.example3.Stack stack56 = new jbhembise.testauto.example3.Stack();
        boolean boolean57 = stack56.isEmpty();
        stack56.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack60 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass61 = stack60.getClass();
        int int62 = stack60.size();
        stack56.push((java.lang.Object) int62);
        int int64 = stack56.size();
        boolean boolean65 = stack56.isFull();
        boolean boolean66 = stack56.isFull();
        java.lang.Class<?> wildcardClass67 = stack56.getClass();
        stack3.push((java.lang.Object) wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        boolean boolean13 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        boolean boolean16 = stack15.isEmpty();
        boolean boolean17 = stack15.isEmpty();
        boolean boolean18 = stack15.isEmpty();
        stack15.clear();
        java.lang.Class<?> wildcardClass20 = stack15.getClass();
        stack0.push((java.lang.Object) stack15);
        int int22 = stack15.size();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        stack23.clear();
        stack23.push((java.lang.Object) true);
        boolean boolean28 = stack23.isEmpty();
        stack23.clear();
        boolean boolean30 = stack23.isEmpty();
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        int int32 = stack31.size();
        java.lang.Class<?> wildcardClass33 = stack31.getClass();
        java.lang.Class<?> wildcardClass34 = stack31.getClass();
        stack31.push((java.lang.Object) 10L);
        boolean boolean37 = stack31.isFull();
        stack23.push((java.lang.Object) stack31);
        boolean boolean39 = stack23.isFull();
        java.lang.Class<?> wildcardClass40 = stack23.getClass();
        jbhembise.testauto.example3.Stack stack41 = new jbhembise.testauto.example3.Stack();
        int int42 = stack41.size();
        stack41.clear();
        boolean boolean44 = stack41.isFull();
        stack41.clear();
        stack41.clear();
        jbhembise.testauto.example3.Stack stack47 = new jbhembise.testauto.example3.Stack();
        int int48 = stack47.size();
        stack47.clear();
        stack47.push((java.lang.Object) true);
        boolean boolean52 = stack47.isEmpty();
        int int53 = stack47.size();
        int int54 = stack47.size();
        stack41.push((java.lang.Object) stack47);
        int int56 = stack41.size();
        jbhembise.testauto.example3.Stack stack57 = new jbhembise.testauto.example3.Stack();
        int int58 = stack57.size();
        stack57.clear();
        stack57.push((java.lang.Object) true);
        boolean boolean62 = stack57.isEmpty();
        stack57.clear();
        boolean boolean64 = stack57.isEmpty();
        jbhembise.testauto.example3.Stack stack65 = new jbhembise.testauto.example3.Stack();
        int int66 = stack65.size();
        java.lang.Class<?> wildcardClass67 = stack65.getClass();
        java.lang.Class<?> wildcardClass68 = stack65.getClass();
        stack65.push((java.lang.Object) 10L);
        boolean boolean71 = stack65.isFull();
        stack57.push((java.lang.Object) stack65);
        java.lang.Object obj73 = stack57.last();
        stack41.push((java.lang.Object) stack57);
        boolean boolean75 = stack57.isEmpty();
        stack23.push((java.lang.Object) boolean75);
        stack15.push((java.lang.Object) boolean75);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        java.lang.Object obj5 = stack0.last();
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Class<?> wildcardClass9 = stack7.getClass();
        stack0.push((java.lang.Object) stack7);
        java.lang.Class<?> wildcardClass11 = stack0.getClass();
        stack0.pop();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte) 10 + "'", obj5.equals((byte) 10));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        boolean boolean5 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        boolean boolean16 = stack8.isEmpty();
        boolean boolean17 = stack8.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        stack5.pop();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        boolean boolean19 = stack5.isEmpty();
        java.lang.Class<?> wildcardClass20 = stack5.getClass();
        boolean boolean21 = stack5.isFull();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        int int23 = stack22.size();
        java.lang.Class<?> wildcardClass24 = stack22.getClass();
        java.lang.Class<?> wildcardClass25 = stack22.getClass();
        boolean boolean26 = stack22.isFull();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Object obj29 = null;
        stack27.push(obj29);
        stack27.pop();
        int int32 = stack27.size();
        stack27.clear();
        stack27.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass36 = stack27.getClass();
        stack22.push((java.lang.Object) stack27);
        boolean boolean38 = stack22.isFull();
        stack5.push((java.lang.Object) boolean38);
        boolean boolean40 = stack5.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        int int5 = stack0.size();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        stack0.pop();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        boolean boolean12 = stack8.isFull();
        boolean boolean13 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        stack8.clear();
        boolean boolean16 = stack8.isFull();
        stack8.clear();
        boolean boolean18 = stack8.isFull();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        java.lang.Object obj5 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNull(obj5);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        stack0.clear();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        boolean boolean15 = stack9.isFull();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass17 = stack16.getClass();
        int int18 = stack16.size();
        stack9.push((java.lang.Object) int18);
        int int20 = stack9.size();
        int int21 = stack9.size();
        boolean boolean22 = stack9.isFull();
        stack0.push((java.lang.Object) stack9);
        boolean boolean24 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        int int8 = stack0.size();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        int int12 = stack0.size();
        int int13 = stack0.size();
        boolean boolean14 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        stack6.push((java.lang.Object) true);
        boolean boolean11 = stack6.isEmpty();
        int int12 = stack6.size();
        int int13 = stack6.size();
        stack0.push((java.lang.Object) stack6);
        int int15 = stack6.size();
        stack6.pop();
        int int17 = stack6.size();
        int int18 = stack6.size();
        stack6.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        boolean boolean18 = stack0.isFull();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        int int11 = stack0.size();
        int int12 = stack0.size();
        boolean boolean13 = stack0.isFull();
        boolean boolean14 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        java.lang.Object obj18 = stack0.last();
        int int19 = stack0.size();
        int int20 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        int int12 = stack0.size();
        int int13 = stack0.size();
        int int14 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        stack0.push((java.lang.Object) false);
        stack0.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        stack19.clear();
        boolean boolean22 = stack19.isFull();
        boolean boolean23 = stack19.isFull();
        stack0.push((java.lang.Object) boolean23);
        java.lang.Class<?> wildcardClass25 = stack0.getClass();
        boolean boolean26 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        int int9 = stack0.size();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        boolean boolean15 = stack11.isFull();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack11.push((java.lang.Object) stack16);
        boolean boolean27 = stack11.isFull();
        boolean boolean28 = stack11.isEmpty();
        stack11.clear();
        stack0.push((java.lang.Object) stack11);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isFull();
        java.lang.Object obj12 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + 10 + "'", obj12.equals(10));
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        boolean boolean25 = stack16.isEmpty();
        stack16.pop();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Class<?> wildcardClass29 = stack27.getClass();
        java.lang.Class<?> wildcardClass30 = stack27.getClass();
        java.lang.Class<?> wildcardClass31 = stack27.getClass();
        stack27.clear();
        stack27.clear();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        int int35 = stack34.size();
        java.lang.Object obj36 = null;
        stack34.push(obj36);
        stack34.pop();
        int int39 = stack34.size();
        stack34.clear();
        stack34.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass43 = stack34.getClass();
        stack27.push((java.lang.Object) wildcardClass43);
        jbhembise.testauto.example3.Stack stack45 = new jbhembise.testauto.example3.Stack();
        int int46 = stack45.size();
        stack45.clear();
        stack45.push((java.lang.Object) true);
        boolean boolean50 = stack45.isEmpty();
        stack45.pop();
        stack27.push((java.lang.Object) stack45);
        stack16.push((java.lang.Object) stack45);
        stack0.push((java.lang.Object) stack45);
        int int55 = stack0.size();
        int int56 = stack0.size();
        java.lang.Class<?> wildcardClass57 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        int int5 = stack0.size();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        boolean boolean25 = stack18.isFull();
        java.lang.Class<?> wildcardClass26 = stack18.getClass();
        stack12.push((java.lang.Object) stack18);
        boolean boolean28 = stack12.isFull();
        java.lang.Object obj29 = stack12.last();
        int int30 = stack12.size();
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        int int32 = stack31.size();
        stack31.clear();
        stack31.push((java.lang.Object) true);
        boolean boolean36 = stack31.isEmpty();
        boolean boolean37 = stack31.isFull();
        stack31.pop();
        java.lang.Class<?> wildcardClass39 = stack31.getClass();
        stack31.clear();
        java.lang.Class<?> wildcardClass41 = stack31.getClass();
        stack12.push((java.lang.Object) stack31);
        java.lang.Object obj43 = null;
        stack12.push(obj43);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        boolean boolean16 = stack12.isFull();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        int int18 = stack17.size();
        java.lang.Object obj19 = null;
        stack17.push(obj19);
        stack17.pop();
        int int22 = stack17.size();
        stack17.clear();
        stack17.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass26 = stack17.getClass();
        stack12.push((java.lang.Object) stack17);
        stack17.pop();
        int int29 = stack17.size();
        boolean boolean30 = stack17.isEmpty();
        boolean boolean31 = stack17.isEmpty();
        java.lang.Class<?> wildcardClass32 = stack17.getClass();
        stack0.push((java.lang.Object) wildcardClass32);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        stack0.clear();
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        int int19 = stack0.size();
        boolean boolean20 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Object obj23 = null;
        stack21.push(obj23);
        stack21.pop();
        int int26 = stack21.size();
        stack21.clear();
        stack21.push((java.lang.Object) 10);
        java.lang.Object obj30 = stack21.last();
        boolean boolean31 = stack21.isEmpty();
        java.lang.Object obj32 = stack21.last();
        stack21.clear();
        stack0.push((java.lang.Object) stack21);
        boolean boolean35 = stack21.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + 10 + "'", obj30.equals(10));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + 10 + "'", obj32.equals(10));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        java.lang.Object obj5 = stack0.last();
        java.lang.Object obj6 = stack0.last();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + true + "'", obj5.equals(true));
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + true + "'", obj6.equals(true));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        stack0.clear();
        int int6 = stack0.size();
        boolean boolean7 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        stack0.clear();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        boolean boolean13 = stack9.isFull();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        int int15 = stack14.size();
        java.lang.Object obj16 = null;
        stack14.push(obj16);
        stack14.pop();
        int int19 = stack14.size();
        stack14.clear();
        stack14.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass23 = stack14.getClass();
        stack9.push((java.lang.Object) stack14);
        java.lang.Object obj25 = stack14.last();
        stack14.pop();
        stack14.push((java.lang.Object) false);
        boolean boolean29 = stack14.isEmpty();
        int int30 = stack14.size();
        java.lang.Object obj31 = stack14.last();
        stack0.push(obj31);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + 10 + "'", obj25.equals(10));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + obj31 + "' != '" + false + "'", obj31.equals(false));
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        boolean boolean18 = stack12.isFull();
        stack12.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass4 = stack3.getClass();
        int int5 = stack3.size();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        boolean boolean12 = stack8.isFull();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        java.lang.Object obj15 = null;
        stack13.push(obj15);
        stack13.pop();
        int int18 = stack13.size();
        stack13.clear();
        stack13.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass22 = stack13.getClass();
        stack8.push((java.lang.Object) stack13);
        boolean boolean24 = stack13.isEmpty();
        java.lang.Class<?> wildcardClass25 = stack13.getClass();
        java.lang.Class<?> wildcardClass26 = stack13.getClass();
        stack0.push((java.lang.Object) stack13);
        int int28 = stack0.size();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.pop();
        int int36 = stack29.size();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        boolean boolean38 = stack37.isEmpty();
        stack37.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack41 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass42 = stack41.getClass();
        int int43 = stack41.size();
        stack37.push((java.lang.Object) int43);
        stack37.clear();
        java.lang.Class<?> wildcardClass46 = stack37.getClass();
        java.lang.Class<?> wildcardClass47 = stack37.getClass();
        stack29.push((java.lang.Object) stack37);
        stack0.push((java.lang.Object) stack37);
        java.lang.Object obj50 = stack0.last();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        boolean boolean25 = stack18.isFull();
        java.lang.Class<?> wildcardClass26 = stack18.getClass();
        stack12.push((java.lang.Object) stack18);
        boolean boolean28 = stack12.isFull();
        java.lang.Object obj29 = stack12.last();
        stack12.pop();
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        int int32 = stack31.size();
        java.lang.Class<?> wildcardClass33 = stack31.getClass();
        java.lang.Class<?> wildcardClass34 = stack31.getClass();
        boolean boolean35 = stack31.isFull();
        jbhembise.testauto.example3.Stack stack36 = new jbhembise.testauto.example3.Stack();
        int int37 = stack36.size();
        java.lang.Object obj38 = null;
        stack36.push(obj38);
        stack36.pop();
        int int41 = stack36.size();
        stack36.clear();
        stack36.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass45 = stack36.getClass();
        stack31.push((java.lang.Object) stack36);
        boolean boolean47 = stack31.isFull();
        boolean boolean48 = stack31.isEmpty();
        java.lang.Object obj49 = stack31.last();
        stack31.clear();
        boolean boolean51 = stack31.isFull();
        java.lang.Class<?> wildcardClass52 = stack31.getClass();
        stack12.push((java.lang.Object) wildcardClass52);
        boolean boolean54 = stack12.isEmpty();
        boolean boolean55 = stack12.isEmpty();
        boolean boolean56 = stack12.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        java.lang.Class<?> wildcardClass10 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.push((java.lang.Object) (byte) 100);
        boolean boolean14 = stack0.isEmpty();
        int int15 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        java.lang.Object obj19 = stack0.last();
        java.lang.Object obj20 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isFull();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) true);
        boolean boolean14 = stack9.isEmpty();
        boolean boolean15 = stack9.isFull();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) int16);
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        boolean boolean19 = stack0.isEmpty();
        stack0.pop();
        boolean boolean21 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        int int23 = stack22.size();
        java.lang.Class<?> wildcardClass24 = stack22.getClass();
        java.lang.Class<?> wildcardClass25 = stack22.getClass();
        stack22.push((java.lang.Object) 10L);
        boolean boolean28 = stack22.isFull();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass30 = stack29.getClass();
        int int31 = stack29.size();
        stack22.push((java.lang.Object) int31);
        boolean boolean33 = stack22.isFull();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        int int35 = stack34.size();
        java.lang.Class<?> wildcardClass36 = stack34.getClass();
        java.lang.Class<?> wildcardClass37 = stack34.getClass();
        java.lang.Class<?> wildcardClass38 = stack34.getClass();
        stack34.clear();
        stack34.clear();
        jbhembise.testauto.example3.Stack stack41 = new jbhembise.testauto.example3.Stack();
        int int42 = stack41.size();
        java.lang.Object obj43 = null;
        stack41.push(obj43);
        stack41.pop();
        int int46 = stack41.size();
        stack41.clear();
        stack41.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass50 = stack41.getClass();
        stack34.push((java.lang.Object) wildcardClass50);
        jbhembise.testauto.example3.Stack stack52 = new jbhembise.testauto.example3.Stack();
        int int53 = stack52.size();
        stack52.clear();
        stack52.push((java.lang.Object) true);
        boolean boolean57 = stack52.isEmpty();
        stack52.pop();
        stack34.push((java.lang.Object) stack52);
        stack22.push((java.lang.Object) stack34);
        jbhembise.testauto.example3.Stack stack61 = new jbhembise.testauto.example3.Stack();
        int int62 = stack61.size();
        java.lang.Class<?> wildcardClass63 = stack61.getClass();
        java.lang.Class<?> wildcardClass64 = stack61.getClass();
        stack61.push((java.lang.Object) 10L);
        boolean boolean67 = stack61.isFull();
        jbhembise.testauto.example3.Stack stack68 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass69 = stack68.getClass();
        int int70 = stack68.size();
        stack61.push((java.lang.Object) int70);
        int int72 = stack61.size();
        java.lang.Class<?> wildcardClass73 = stack61.getClass();
        stack22.push((java.lang.Object) stack61);
        java.lang.Object obj75 = stack61.last();
        stack0.push((java.lang.Object) stack61);
        boolean boolean77 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + obj75 + "' != '" + 0 + "'", obj75.equals(0));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        boolean boolean11 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack12.clear();
        stack12.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        java.lang.Object obj21 = null;
        stack19.push(obj21);
        stack19.pop();
        int int24 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass28 = stack19.getClass();
        stack12.push((java.lang.Object) wildcardClass28);
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) true);
        boolean boolean35 = stack30.isEmpty();
        stack30.pop();
        stack12.push((java.lang.Object) stack30);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        java.lang.Class<?> wildcardClass41 = stack39.getClass();
        java.lang.Class<?> wildcardClass42 = stack39.getClass();
        stack39.push((java.lang.Object) 10L);
        boolean boolean45 = stack39.isFull();
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass47 = stack46.getClass();
        int int48 = stack46.size();
        stack39.push((java.lang.Object) int48);
        int int50 = stack39.size();
        java.lang.Class<?> wildcardClass51 = stack39.getClass();
        stack0.push((java.lang.Object) stack39);
        stack0.pop();
        java.lang.Object obj54 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        int int10 = stack0.size();
        java.lang.Object obj11 = stack0.last();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        java.lang.Class<?> wildcardClass15 = stack13.getClass();
        java.lang.Class<?> wildcardClass16 = stack13.getClass();
        boolean boolean17 = stack13.isFull();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass27 = stack18.getClass();
        stack13.push((java.lang.Object) stack18);
        boolean boolean29 = stack18.isEmpty();
        int int30 = stack18.size();
        boolean boolean31 = stack18.isEmpty();
        java.lang.Object obj32 = null;
        stack18.push(obj32);
        java.lang.Class<?> wildcardClass34 = stack18.getClass();
        stack0.push((java.lang.Object) wildcardClass34);
        int int36 = stack0.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.pop();
        boolean boolean13 = stack0.isFull();
        java.lang.Class<?> wildcardClass14 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        boolean boolean16 = stack15.isEmpty();
        boolean boolean17 = stack15.isEmpty();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        boolean boolean19 = stack18.isEmpty();
        stack18.push((java.lang.Object) (short) 10);
        stack15.push((java.lang.Object) stack18);
        boolean boolean23 = stack15.isEmpty();
        java.lang.Object obj24 = stack15.last();
        boolean boolean25 = stack15.isFull();
        boolean boolean26 = stack15.isEmpty();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Class<?> wildcardClass29 = stack27.getClass();
        java.lang.Class<?> wildcardClass30 = stack27.getClass();
        boolean boolean31 = stack27.isFull();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        int int33 = stack32.size();
        java.lang.Object obj34 = null;
        stack32.push(obj34);
        stack32.pop();
        int int37 = stack32.size();
        stack32.clear();
        stack32.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass41 = stack32.getClass();
        stack27.push((java.lang.Object) stack32);
        stack32.pop();
        int int44 = stack32.size();
        boolean boolean45 = stack32.isEmpty();
        stack32.clear();
        stack15.push((java.lang.Object) stack32);
        stack0.push((java.lang.Object) stack15);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        stack0.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass20 = stack19.getClass();
        int int21 = stack19.size();
        stack19.push((java.lang.Object) (byte) 10);
        int int24 = stack19.size();
        java.lang.Class<?> wildcardClass25 = stack19.getClass();
        boolean boolean26 = stack19.isEmpty();
        stack19.pop();
        boolean boolean28 = stack19.isEmpty();
        stack0.push((java.lang.Object) boolean28);
        int int30 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Class<?> wildcardClass5 = stack3.getClass();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        java.lang.Class<?> wildcardClass7 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        boolean boolean13 = stack9.isFull();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        int int15 = stack14.size();
        java.lang.Object obj16 = null;
        stack14.push(obj16);
        stack14.pop();
        int int19 = stack14.size();
        stack14.clear();
        stack14.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass23 = stack14.getClass();
        stack9.push((java.lang.Object) stack14);
        java.lang.Class<?> wildcardClass25 = stack9.getClass();
        stack3.push((java.lang.Object) stack9);
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        boolean boolean28 = stack27.isEmpty();
        boolean boolean29 = stack27.isEmpty();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        boolean boolean31 = stack30.isEmpty();
        stack30.push((java.lang.Object) (short) 10);
        stack27.push((java.lang.Object) stack30);
        int int35 = stack27.size();
        int int36 = stack27.size();
        stack3.push((java.lang.Object) int36);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        stack5.pop();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        boolean boolean19 = stack5.isFull();
        java.lang.Class<?> wildcardClass20 = stack5.getClass();
        boolean boolean21 = stack5.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        boolean boolean19 = stack5.isEmpty();
        stack5.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        stack0.pop();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        boolean boolean13 = stack9.isFull();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        int int15 = stack14.size();
        java.lang.Object obj16 = null;
        stack14.push(obj16);
        stack14.pop();
        int int19 = stack14.size();
        stack14.clear();
        stack14.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass23 = stack14.getClass();
        stack9.push((java.lang.Object) stack14);
        java.lang.Object obj25 = stack14.last();
        stack14.pop();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        boolean boolean28 = stack27.isEmpty();
        stack27.clear();
        boolean boolean30 = stack27.isFull();
        stack14.push((java.lang.Object) boolean30);
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        int int33 = stack32.size();
        stack32.clear();
        boolean boolean35 = stack32.isFull();
        stack32.clear();
        boolean boolean37 = stack32.isEmpty();
        stack14.push((java.lang.Object) stack32);
        stack32.clear();
        stack0.push((java.lang.Object) stack32);
        java.lang.Object obj41 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + 10 + "'", obj25.equals(10));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        stack0.push((java.lang.Object) false);
        java.lang.Object obj18 = null;
        stack0.push(obj18);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isFull();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) true);
        boolean boolean14 = stack9.isEmpty();
        boolean boolean15 = stack9.isFull();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) int16);
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        boolean boolean19 = stack0.isEmpty();
        stack0.pop();
        boolean boolean21 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        int int23 = stack22.size();
        java.lang.Class<?> wildcardClass24 = stack22.getClass();
        java.lang.Class<?> wildcardClass25 = stack22.getClass();
        stack22.push((java.lang.Object) 10L);
        boolean boolean28 = stack22.isFull();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass30 = stack29.getClass();
        int int31 = stack29.size();
        stack22.push((java.lang.Object) int31);
        boolean boolean33 = stack22.isFull();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        int int35 = stack34.size();
        java.lang.Class<?> wildcardClass36 = stack34.getClass();
        java.lang.Class<?> wildcardClass37 = stack34.getClass();
        java.lang.Class<?> wildcardClass38 = stack34.getClass();
        stack34.clear();
        stack34.clear();
        jbhembise.testauto.example3.Stack stack41 = new jbhembise.testauto.example3.Stack();
        int int42 = stack41.size();
        java.lang.Object obj43 = null;
        stack41.push(obj43);
        stack41.pop();
        int int46 = stack41.size();
        stack41.clear();
        stack41.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass50 = stack41.getClass();
        stack34.push((java.lang.Object) wildcardClass50);
        jbhembise.testauto.example3.Stack stack52 = new jbhembise.testauto.example3.Stack();
        int int53 = stack52.size();
        stack52.clear();
        stack52.push((java.lang.Object) true);
        boolean boolean57 = stack52.isEmpty();
        stack52.pop();
        stack34.push((java.lang.Object) stack52);
        stack22.push((java.lang.Object) stack34);
        jbhembise.testauto.example3.Stack stack61 = new jbhembise.testauto.example3.Stack();
        int int62 = stack61.size();
        java.lang.Class<?> wildcardClass63 = stack61.getClass();
        java.lang.Class<?> wildcardClass64 = stack61.getClass();
        stack61.push((java.lang.Object) 10L);
        boolean boolean67 = stack61.isFull();
        jbhembise.testauto.example3.Stack stack68 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass69 = stack68.getClass();
        int int70 = stack68.size();
        stack61.push((java.lang.Object) int70);
        int int72 = stack61.size();
        java.lang.Class<?> wildcardClass73 = stack61.getClass();
        stack22.push((java.lang.Object) stack61);
        java.lang.Object obj75 = stack61.last();
        stack0.push((java.lang.Object) stack61);
        java.lang.Class<?> wildcardClass77 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + obj75 + "' != '" + 0 + "'", obj75.equals(0));
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        int int16 = stack8.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        stack18.clear();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Class<?> wildcardClass29 = stack27.getClass();
        java.lang.Class<?> wildcardClass30 = stack27.getClass();
        java.lang.Class<?> wildcardClass31 = stack27.getClass();
        stack27.clear();
        stack27.clear();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        int int35 = stack34.size();
        java.lang.Object obj36 = null;
        stack34.push(obj36);
        stack34.pop();
        int int39 = stack34.size();
        stack34.clear();
        stack34.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass43 = stack34.getClass();
        stack27.push((java.lang.Object) wildcardClass43);
        stack18.push((java.lang.Object) wildcardClass43);
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        boolean boolean47 = stack46.isEmpty();
        stack46.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack50 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass51 = stack50.getClass();
        int int52 = stack50.size();
        stack46.push((java.lang.Object) int52);
        int int54 = stack46.size();
        java.lang.Object obj55 = stack46.last();
        stack18.push(obj55);
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + 0 + "'", obj55.equals(0));
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        int int8 = stack0.size();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        int int12 = stack0.size();
        int int13 = stack0.size();
        boolean boolean14 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        int int11 = stack0.size();
        stack0.pop();
        boolean boolean13 = stack0.isFull();
        boolean boolean14 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isEmpty();
        stack0.clear();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        stack14.push((java.lang.Object) (short) 10);
        stack11.push((java.lang.Object) stack14);
        int int19 = stack14.size();
        int int20 = stack14.size();
        stack0.push((java.lang.Object) stack14);
        int int22 = stack14.size();
        java.lang.Class<?> wildcardClass23 = stack14.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass4 = stack3.getClass();
        int int5 = stack3.size();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        int int8 = stack0.size();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass10 = stack9.getClass();
        int int11 = stack9.size();
        stack9.push((java.lang.Object) (byte) 10);
        int int14 = stack9.size();
        stack9.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass17 = stack16.getClass();
        stack9.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack16);
        boolean boolean20 = stack0.isFull();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = null;
        stack0.push(obj16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Class<?> wildcardClass20 = stack18.getClass();
        java.lang.Class<?> wildcardClass21 = stack18.getClass();
        boolean boolean22 = stack18.isFull();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Object obj25 = null;
        stack23.push(obj25);
        stack23.pop();
        int int28 = stack23.size();
        stack23.clear();
        stack23.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass32 = stack23.getClass();
        stack18.push((java.lang.Object) stack23);
        java.lang.Class<?> wildcardClass34 = stack18.getClass();
        stack0.push((java.lang.Object) wildcardClass34);
        int int36 = stack0.size();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Class<?> wildcardClass39 = stack37.getClass();
        java.lang.Class<?> wildcardClass40 = stack37.getClass();
        boolean boolean41 = stack37.isFull();
        jbhembise.testauto.example3.Stack stack42 = new jbhembise.testauto.example3.Stack();
        int int43 = stack42.size();
        java.lang.Object obj44 = null;
        stack42.push(obj44);
        stack42.pop();
        int int47 = stack42.size();
        stack42.clear();
        stack42.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass51 = stack42.getClass();
        stack37.push((java.lang.Object) stack42);
        boolean boolean53 = stack37.isFull();
        boolean boolean54 = stack37.isEmpty();
        boolean boolean55 = stack37.isEmpty();
        stack0.push((java.lang.Object) boolean55);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 3 + "'", int36 == 3);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        int int9 = stack0.size();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        boolean boolean15 = stack11.isFull();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack11.push((java.lang.Object) stack16);
        java.lang.Class<?> wildcardClass27 = stack11.getClass();
        boolean boolean28 = stack11.isFull();
        stack0.push((java.lang.Object) boolean28);
        java.lang.Object obj30 = stack0.last();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + false + "'", obj30.equals(false));
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        boolean boolean12 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        java.lang.Class<?> wildcardClass15 = stack13.getClass();
        java.lang.Class<?> wildcardClass16 = stack13.getClass();
        stack13.push((java.lang.Object) 10L);
        boolean boolean19 = stack13.isFull();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass21 = stack20.getClass();
        int int22 = stack20.size();
        stack13.push((java.lang.Object) int22);
        int int24 = stack13.size();
        java.lang.Class<?> wildcardClass25 = stack13.getClass();
        boolean boolean26 = stack13.isFull();
        stack0.push((java.lang.Object) stack13);
        boolean boolean28 = stack13.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        boolean boolean14 = stack11.isEmpty();
        stack0.push((java.lang.Object) boolean14);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) true);
        boolean boolean21 = stack16.isEmpty();
        stack16.pop();
        int int23 = stack16.size();
        stack0.push((java.lang.Object) int23);
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Class<?> wildcardClass27 = stack25.getClass();
        java.lang.Class<?> wildcardClass28 = stack25.getClass();
        java.lang.Class<?> wildcardClass29 = stack25.getClass();
        stack25.clear();
        stack25.clear();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        int int33 = stack32.size();
        java.lang.Object obj34 = null;
        stack32.push(obj34);
        stack32.pop();
        int int37 = stack32.size();
        stack32.clear();
        stack32.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass41 = stack32.getClass();
        stack25.push((java.lang.Object) wildcardClass41);
        jbhembise.testauto.example3.Stack stack43 = new jbhembise.testauto.example3.Stack();
        int int44 = stack43.size();
        stack43.clear();
        stack43.push((java.lang.Object) true);
        boolean boolean48 = stack43.isEmpty();
        stack43.pop();
        stack25.push((java.lang.Object) stack43);
        stack0.push((java.lang.Object) stack43);
        boolean boolean52 = stack0.isEmpty();
        stack0.pop();
        java.lang.Class<?> wildcardClass54 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack55 = new jbhembise.testauto.example3.Stack();
        int int56 = stack55.size();
        java.lang.Class<?> wildcardClass57 = stack55.getClass();
        java.lang.Class<?> wildcardClass58 = stack55.getClass();
        boolean boolean59 = stack55.isFull();
        int int60 = stack55.size();
        jbhembise.testauto.example3.Stack stack61 = new jbhembise.testauto.example3.Stack();
        int int62 = stack61.size();
        java.lang.Class<?> wildcardClass63 = stack61.getClass();
        java.lang.Class<?> wildcardClass64 = stack61.getClass();
        boolean boolean65 = stack61.isFull();
        boolean boolean66 = stack61.isFull();
        stack55.push((java.lang.Object) boolean66);
        java.lang.Object obj68 = stack55.last();
        java.lang.Object obj69 = stack55.last();
        stack0.push(obj69);
        boolean boolean71 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + obj68 + "' != '" + false + "'", obj68.equals(false));
        org.junit.Assert.assertTrue("'" + obj69 + "' != '" + false + "'", obj69.equals(false));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        boolean boolean13 = stack0.isFull();
        stack0.clear();
        stack0.clear();
        boolean boolean16 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        java.lang.Object obj18 = stack0.last();
        boolean boolean19 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        stack6.push((java.lang.Object) true);
        boolean boolean11 = stack6.isEmpty();
        int int12 = stack6.size();
        int int13 = stack6.size();
        stack0.push((java.lang.Object) stack6);
        java.lang.Class<?> wildcardClass15 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) true);
        boolean boolean21 = stack16.isEmpty();
        boolean boolean22 = stack16.isFull();
        stack0.push((java.lang.Object) stack16);
        boolean boolean24 = stack16.isFull();
        boolean boolean25 = stack16.isEmpty();
        stack16.pop();
        boolean boolean27 = stack16.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        stack0.pop();
        int int7 = stack0.size();
        boolean boolean8 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        int int10 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Class<?> wildcardClass7 = stack5.getClass();
        java.lang.Class<?> wildcardClass8 = stack5.getClass();
        boolean boolean9 = stack5.isFull();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass19 = stack10.getClass();
        stack5.push((java.lang.Object) stack10);
        java.lang.Class<?> wildcardClass21 = stack5.getClass();
        stack0.push((java.lang.Object) wildcardClass21);
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Class<?> wildcardClass25 = stack23.getClass();
        java.lang.Class<?> wildcardClass26 = stack23.getClass();
        boolean boolean27 = stack23.isFull();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        stack28.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass37 = stack28.getClass();
        stack23.push((java.lang.Object) stack28);
        boolean boolean39 = stack23.isFull();
        int int40 = stack23.size();
        stack0.push((java.lang.Object) stack23);
        java.lang.Object obj42 = stack23.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        stack5.pop();
        stack5.push((java.lang.Object) false);
        boolean boolean20 = stack5.isEmpty();
        int int21 = stack5.size();
        stack5.clear();
        boolean boolean23 = stack5.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        boolean boolean9 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass19 = stack10.getClass();
        boolean boolean20 = stack10.isFull();
        stack10.clear();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass23 = stack22.getClass();
        int int24 = stack22.size();
        stack22.push((java.lang.Object) (byte) 10);
        stack10.push((java.lang.Object) stack22);
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        boolean boolean35 = stack28.isFull();
        java.lang.Class<?> wildcardClass36 = stack28.getClass();
        stack22.push((java.lang.Object) stack28);
        boolean boolean38 = stack22.isFull();
        java.lang.Object obj39 = stack22.last();
        stack22.pop();
        stack0.push((java.lang.Object) stack22);
        jbhembise.testauto.example3.Stack stack42 = new jbhembise.testauto.example3.Stack();
        int int43 = stack42.size();
        stack42.clear();
        stack42.push((java.lang.Object) true);
        boolean boolean47 = stack42.isEmpty();
        int int48 = stack42.size();
        java.lang.Object obj49 = stack42.last();
        stack0.push((java.lang.Object) stack42);
        int int51 = stack42.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + true + "'", obj49.equals(true));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        boolean boolean26 = stack18.isFull();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        boolean boolean28 = stack27.isEmpty();
        boolean boolean29 = stack27.isEmpty();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        int int36 = stack30.size();
        stack27.push((java.lang.Object) int36);
        stack18.push((java.lang.Object) stack27);
        boolean boolean39 = stack18.isFull();
        jbhembise.testauto.example3.Stack stack40 = new jbhembise.testauto.example3.Stack();
        int int41 = stack40.size();
        stack40.clear();
        stack40.push((java.lang.Object) true);
        boolean boolean45 = stack40.isEmpty();
        int int46 = stack40.size();
        stack18.push((java.lang.Object) int46);
        jbhembise.testauto.example3.Stack stack48 = new jbhembise.testauto.example3.Stack();
        int int49 = stack48.size();
        java.lang.Object obj50 = null;
        stack48.push(obj50);
        stack48.pop();
        int int53 = stack48.size();
        stack48.clear();
        stack48.push((java.lang.Object) 10);
        boolean boolean57 = stack48.isEmpty();
        boolean boolean58 = stack48.isEmpty();
        stack48.clear();
        stack18.push((java.lang.Object) stack48);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        boolean boolean2 = stack0.isEmpty();
        int int3 = stack0.size();
        boolean boolean4 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        int int9 = stack0.size();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        boolean boolean15 = stack11.isFull();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack11.push((java.lang.Object) stack16);
        java.lang.Class<?> wildcardClass27 = stack11.getClass();
        boolean boolean28 = stack11.isFull();
        stack0.push((java.lang.Object) boolean28);
        java.lang.Object obj30 = stack0.last();
        java.lang.Class<?> wildcardClass31 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + false + "'", obj30.equals(false));
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = null;
        stack0.push(obj16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Class<?> wildcardClass20 = stack18.getClass();
        java.lang.Class<?> wildcardClass21 = stack18.getClass();
        boolean boolean22 = stack18.isFull();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Object obj25 = null;
        stack23.push(obj25);
        stack23.pop();
        int int28 = stack23.size();
        stack23.clear();
        stack23.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass32 = stack23.getClass();
        stack18.push((java.lang.Object) stack23);
        java.lang.Class<?> wildcardClass34 = stack18.getClass();
        stack0.push((java.lang.Object) wildcardClass34);
        int int36 = stack0.size();
        int int37 = stack0.size();
        boolean boolean38 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 3 + "'", int36 == 3);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        stack0.pop();
        stack0.clear();
        stack0.push((java.lang.Object) (-1));
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        java.lang.Class<?> wildcardClass17 = stack5.getClass();
        int int18 = stack5.size();
        stack5.clear();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Object obj22 = null;
        stack20.push(obj22);
        stack20.pop();
        int int25 = stack20.size();
        stack20.clear();
        stack5.push((java.lang.Object) stack20);
        java.lang.Class<?> wildcardClass28 = stack5.getClass();
        boolean boolean29 = stack5.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass19 = stack10.getClass();
        boolean boolean20 = stack10.isFull();
        stack10.clear();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass23 = stack22.getClass();
        int int24 = stack22.size();
        stack22.push((java.lang.Object) (byte) 10);
        stack10.push((java.lang.Object) stack22);
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        boolean boolean35 = stack28.isFull();
        java.lang.Class<?> wildcardClass36 = stack28.getClass();
        stack22.push((java.lang.Object) stack28);
        jbhembise.testauto.example3.Stack stack38 = new jbhembise.testauto.example3.Stack();
        int int39 = stack38.size();
        stack38.clear();
        stack38.push((java.lang.Object) true);
        boolean boolean43 = stack38.isEmpty();
        stack38.clear();
        boolean boolean45 = stack38.isEmpty();
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        int int47 = stack46.size();
        java.lang.Class<?> wildcardClass48 = stack46.getClass();
        java.lang.Class<?> wildcardClass49 = stack46.getClass();
        stack46.push((java.lang.Object) 10L);
        boolean boolean52 = stack46.isFull();
        stack38.push((java.lang.Object) stack46);
        java.lang.Object obj54 = stack38.last();
        stack38.clear();
        stack22.push((java.lang.Object) stack38);
        stack0.push((java.lang.Object) stack22);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        stack0.pop();
        stack0.clear();
        stack0.push((java.lang.Object) (-1));
        int int10 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        boolean boolean2 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        boolean boolean6 = stack5.isEmpty();
        boolean boolean7 = stack5.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        boolean boolean9 = stack8.isEmpty();
        stack8.push((java.lang.Object) (short) 10);
        stack5.push((java.lang.Object) stack8);
        boolean boolean13 = stack5.isEmpty();
        java.lang.Object obj14 = stack5.last();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        stack0.push((java.lang.Object) wildcardClass15);
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        int int18 = stack17.size();
        java.lang.Class<?> wildcardClass19 = stack17.getClass();
        java.lang.Class<?> wildcardClass20 = stack17.getClass();
        java.lang.Class<?> wildcardClass21 = stack17.getClass();
        stack17.clear();
        stack17.clear();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Object obj26 = null;
        stack24.push(obj26);
        stack24.pop();
        int int29 = stack24.size();
        stack24.clear();
        stack24.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass33 = stack24.getClass();
        stack17.push((java.lang.Object) wildcardClass33);
        stack0.push((java.lang.Object) stack17);
        stack17.pop();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.clear();
        boolean boolean13 = stack0.isFull();
        boolean boolean14 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Class<?> wildcardClass9 = stack7.getClass();
        java.lang.Class<?> wildcardClass10 = stack7.getClass();
        stack7.clear();
        boolean boolean12 = stack7.isEmpty();
        stack0.push((java.lang.Object) stack7);
        java.lang.Class<?> wildcardClass14 = stack7.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        boolean boolean14 = stack11.isEmpty();
        stack0.push((java.lang.Object) boolean14);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Class<?> wildcardClass18 = stack16.getClass();
        java.lang.Class<?> wildcardClass19 = stack16.getClass();
        boolean boolean20 = stack16.isFull();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Object obj23 = null;
        stack21.push(obj23);
        stack21.pop();
        int int26 = stack21.size();
        stack21.clear();
        stack21.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass30 = stack21.getClass();
        stack16.push((java.lang.Object) stack21);
        boolean boolean32 = stack21.isEmpty();
        java.lang.Class<?> wildcardClass33 = stack21.getClass();
        int int34 = stack21.size();
        stack21.clear();
        stack21.clear();
        stack0.push((java.lang.Object) stack21);
        boolean boolean38 = stack0.isEmpty();
        int int39 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3 + "'", int39 == 3);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isFull();
        stack0.pop();
        boolean boolean12 = stack0.isFull();
        java.lang.Class<?> wildcardClass13 = stack0.getClass();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        int int10 = stack0.size();
        java.lang.Class<?> wildcardClass11 = stack0.getClass();
        boolean boolean12 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass4 = stack3.getClass();
        int int5 = stack3.size();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        boolean boolean12 = stack8.isFull();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        java.lang.Object obj15 = null;
        stack13.push(obj15);
        stack13.pop();
        int int18 = stack13.size();
        stack13.clear();
        stack13.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass22 = stack13.getClass();
        stack8.push((java.lang.Object) stack13);
        boolean boolean24 = stack13.isEmpty();
        java.lang.Class<?> wildcardClass25 = stack13.getClass();
        java.lang.Class<?> wildcardClass26 = stack13.getClass();
        stack0.push((java.lang.Object) stack13);
        int int28 = stack0.size();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.pop();
        int int36 = stack29.size();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        boolean boolean38 = stack37.isEmpty();
        stack37.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack41 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass42 = stack41.getClass();
        int int43 = stack41.size();
        stack37.push((java.lang.Object) int43);
        stack37.clear();
        java.lang.Class<?> wildcardClass46 = stack37.getClass();
        java.lang.Class<?> wildcardClass47 = stack37.getClass();
        stack29.push((java.lang.Object) stack37);
        stack0.push((java.lang.Object) stack37);
        boolean boolean50 = stack37.isEmpty();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        stack5.pop();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        boolean boolean19 = stack18.isEmpty();
        stack18.clear();
        boolean boolean21 = stack18.isFull();
        stack5.push((java.lang.Object) boolean21);
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        stack23.clear();
        boolean boolean26 = stack23.isFull();
        stack23.clear();
        boolean boolean28 = stack23.isEmpty();
        stack5.push((java.lang.Object) stack23);
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        stack30.clear();
        boolean boolean33 = stack30.isFull();
        stack30.clear();
        stack30.clear();
        jbhembise.testauto.example3.Stack stack36 = new jbhembise.testauto.example3.Stack();
        int int37 = stack36.size();
        stack36.clear();
        stack36.push((java.lang.Object) true);
        boolean boolean41 = stack36.isEmpty();
        int int42 = stack36.size();
        int int43 = stack36.size();
        stack30.push((java.lang.Object) stack36);
        java.lang.Class<?> wildcardClass45 = stack30.getClass();
        java.lang.Object obj46 = stack30.last();
        stack23.push(obj46);
        boolean boolean48 = stack23.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        boolean boolean9 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass19 = stack10.getClass();
        boolean boolean20 = stack10.isFull();
        stack10.clear();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass23 = stack22.getClass();
        int int24 = stack22.size();
        stack22.push((java.lang.Object) (byte) 10);
        stack10.push((java.lang.Object) stack22);
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        boolean boolean35 = stack28.isFull();
        java.lang.Class<?> wildcardClass36 = stack28.getClass();
        stack22.push((java.lang.Object) stack28);
        boolean boolean38 = stack22.isFull();
        java.lang.Object obj39 = stack22.last();
        stack22.pop();
        stack0.push((java.lang.Object) stack22);
        jbhembise.testauto.example3.Stack stack42 = new jbhembise.testauto.example3.Stack();
        int int43 = stack42.size();
        stack42.clear();
        stack42.push((java.lang.Object) true);
        boolean boolean47 = stack42.isEmpty();
        int int48 = stack42.size();
        java.lang.Object obj49 = stack42.last();
        stack0.push((java.lang.Object) stack42);
        boolean boolean51 = stack0.isEmpty();
        boolean boolean52 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + true + "'", obj49.equals(true));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isFull();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        boolean boolean9 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass10 = stack0.getClass();
        java.lang.Class<?> wildcardClass11 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        stack9.clear();
        boolean boolean19 = stack9.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        int int9 = stack0.size();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.pop();
        int int13 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        java.lang.Object obj8 = null;
        stack6.push(obj8);
        stack6.pop();
        int int11 = stack6.size();
        stack6.clear();
        stack6.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass15 = stack6.getClass();
        boolean boolean16 = stack6.isEmpty();
        stack6.clear();
        stack6.clear();
        boolean boolean19 = stack6.isFull();
        stack6.clear();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        boolean boolean22 = stack21.isEmpty();
        boolean boolean23 = stack21.isEmpty();
        boolean boolean24 = stack21.isEmpty();
        stack21.clear();
        java.lang.Class<?> wildcardClass26 = stack21.getClass();
        stack6.push((java.lang.Object) stack21);
        int int28 = stack21.size();
        stack0.push((java.lang.Object) stack21);
        boolean boolean30 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) "hi!");
        int int4 = stack0.size();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Class<?> wildcardClass7 = stack5.getClass();
        java.lang.Class<?> wildcardClass8 = stack5.getClass();
        stack5.push((java.lang.Object) 10L);
        stack5.pop();
        boolean boolean12 = stack5.isFull();
        stack0.push((java.lang.Object) stack5);
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        int int15 = stack14.size();
        java.lang.Object obj16 = null;
        stack14.push(obj16);
        stack14.pop();
        int int19 = stack14.size();
        stack14.clear();
        stack14.push((java.lang.Object) 10);
        java.lang.Object obj23 = stack14.last();
        stack14.clear();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Class<?> wildcardClass27 = stack25.getClass();
        java.lang.Class<?> wildcardClass28 = stack25.getClass();
        java.lang.Class<?> wildcardClass29 = stack25.getClass();
        stack25.clear();
        java.lang.Class<?> wildcardClass31 = stack25.getClass();
        stack14.push((java.lang.Object) stack25);
        jbhembise.testauto.example3.Stack stack33 = new jbhembise.testauto.example3.Stack();
        int int34 = stack33.size();
        stack33.clear();
        boolean boolean36 = stack33.isFull();
        stack33.clear();
        boolean boolean38 = stack33.isFull();
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        java.lang.Class<?> wildcardClass41 = stack39.getClass();
        java.lang.Class<?> wildcardClass42 = stack39.getClass();
        stack33.push((java.lang.Object) wildcardClass42);
        stack14.push((java.lang.Object) wildcardClass42);
        stack5.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj46 = stack5.last();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + 10 + "'", obj23.equals(10));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        int int5 = stack0.size();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        int int7 = stack0.size();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        boolean boolean9 = stack8.isEmpty();
        boolean boolean10 = stack8.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        stack11.push((java.lang.Object) (short) 10);
        stack8.push((java.lang.Object) stack11);
        int int16 = stack11.size();
        stack0.push((java.lang.Object) int16);
        boolean boolean18 = stack0.isFull();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        boolean boolean11 = stack10.isEmpty();
        stack10.push((java.lang.Object) (short) 10);
        boolean boolean14 = stack10.isEmpty();
        stack10.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        boolean boolean17 = stack16.isEmpty();
        stack16.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        java.lang.Object obj21 = null;
        stack19.push(obj21);
        stack19.pop();
        int int24 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass28 = stack19.getClass();
        stack16.push((java.lang.Object) stack19);
        stack19.clear();
        boolean boolean31 = stack19.isEmpty();
        int int32 = stack19.size();
        int int33 = stack19.size();
        stack10.push((java.lang.Object) int33);
        stack10.clear();
        boolean boolean36 = stack10.isFull();
        stack0.push((java.lang.Object) stack10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        int int10 = stack0.size();
        java.lang.Object obj11 = stack0.last();
        boolean boolean12 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isFull();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) true);
        boolean boolean14 = stack9.isEmpty();
        boolean boolean15 = stack9.isFull();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) int16);
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        java.lang.Class<?> wildcardClass19 = stack0.getClass();
        java.lang.Object obj20 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + 1 + "'", obj20.equals(1));
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        stack0.pop();
        int int7 = stack0.size();
        int int8 = stack0.size();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        stack0.clear();
        java.lang.Class<?> wildcardClass11 = stack0.getClass();
        int int12 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass27 = stack18.getClass();
        boolean boolean28 = stack18.isEmpty();
        stack18.clear();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Class<?> wildcardClass32 = stack30.getClass();
        java.lang.Class<?> wildcardClass33 = stack30.getClass();
        java.lang.Class<?> wildcardClass34 = stack30.getClass();
        stack18.push((java.lang.Object) wildcardClass34);
        stack0.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj37 = stack0.last();
        java.lang.Object obj38 = stack0.last();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isFull();
        boolean boolean12 = stack0.isFull();
        int int13 = stack0.size();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack0.size();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        java.lang.Object obj5 = stack0.last();
        java.lang.Object obj6 = stack0.last();
        boolean boolean7 = stack0.isEmpty();
        java.lang.Object obj8 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + true + "'", obj5.equals(true));
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + true + "'", obj6.equals(true));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + true + "'", obj8.equals(true));
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Object obj5 = null;
        stack3.push(obj5);
        stack3.pop();
        int int8 = stack3.size();
        stack3.clear();
        stack3.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass12 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        stack3.clear();
        java.lang.Class<?> wildcardClass15 = stack3.getClass();
        boolean boolean16 = stack3.isEmpty();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        int int18 = stack17.size();
        stack17.clear();
        stack17.push((java.lang.Object) true);
        boolean boolean22 = stack17.isEmpty();
        int int23 = stack17.size();
        java.lang.Class<?> wildcardClass24 = stack17.getClass();
        stack3.push((java.lang.Object) stack17);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.pop();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        int int16 = stack15.size();
        stack15.clear();
        boolean boolean18 = stack15.isFull();
        java.lang.Class<?> wildcardClass19 = stack15.getClass();
        stack0.push((java.lang.Object) stack15);
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Object obj23 = null;
        stack21.push(obj23);
        stack21.pop();
        int int26 = stack21.size();
        stack21.clear();
        stack21.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass30 = stack21.getClass();
        boolean boolean31 = stack21.isEmpty();
        int int32 = stack21.size();
        boolean boolean33 = stack21.isFull();
        stack0.push((java.lang.Object) boolean33);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        int int6 = stack0.size();
        stack0.clear();
        boolean boolean8 = stack0.isEmpty();
        stack0.clear();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isFull();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) true);
        boolean boolean14 = stack9.isEmpty();
        boolean boolean15 = stack9.isFull();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) int16);
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        boolean boolean19 = stack0.isEmpty();
        stack0.pop();
        boolean boolean21 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        int int23 = stack22.size();
        java.lang.Class<?> wildcardClass24 = stack22.getClass();
        java.lang.Class<?> wildcardClass25 = stack22.getClass();
        stack22.push((java.lang.Object) 10L);
        boolean boolean28 = stack22.isFull();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass30 = stack29.getClass();
        int int31 = stack29.size();
        stack22.push((java.lang.Object) int31);
        boolean boolean33 = stack22.isFull();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        int int35 = stack34.size();
        java.lang.Class<?> wildcardClass36 = stack34.getClass();
        java.lang.Class<?> wildcardClass37 = stack34.getClass();
        java.lang.Class<?> wildcardClass38 = stack34.getClass();
        stack34.clear();
        stack34.clear();
        jbhembise.testauto.example3.Stack stack41 = new jbhembise.testauto.example3.Stack();
        int int42 = stack41.size();
        java.lang.Object obj43 = null;
        stack41.push(obj43);
        stack41.pop();
        int int46 = stack41.size();
        stack41.clear();
        stack41.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass50 = stack41.getClass();
        stack34.push((java.lang.Object) wildcardClass50);
        jbhembise.testauto.example3.Stack stack52 = new jbhembise.testauto.example3.Stack();
        int int53 = stack52.size();
        stack52.clear();
        stack52.push((java.lang.Object) true);
        boolean boolean57 = stack52.isEmpty();
        stack52.pop();
        stack34.push((java.lang.Object) stack52);
        stack22.push((java.lang.Object) stack34);
        jbhembise.testauto.example3.Stack stack61 = new jbhembise.testauto.example3.Stack();
        int int62 = stack61.size();
        java.lang.Class<?> wildcardClass63 = stack61.getClass();
        java.lang.Class<?> wildcardClass64 = stack61.getClass();
        stack61.push((java.lang.Object) 10L);
        boolean boolean67 = stack61.isFull();
        jbhembise.testauto.example3.Stack stack68 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass69 = stack68.getClass();
        int int70 = stack68.size();
        stack61.push((java.lang.Object) int70);
        int int72 = stack61.size();
        java.lang.Class<?> wildcardClass73 = stack61.getClass();
        stack22.push((java.lang.Object) stack61);
        java.lang.Object obj75 = stack61.last();
        stack0.push((java.lang.Object) stack61);
        jbhembise.testauto.example3.Stack stack77 = new jbhembise.testauto.example3.Stack();
        int int78 = stack77.size();
        stack77.clear();
        stack77.clear();
        int int81 = stack77.size();
        boolean boolean82 = stack77.isEmpty();
        java.lang.Class<?> wildcardClass83 = stack77.getClass();
        stack61.push((java.lang.Object) wildcardClass83);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + obj75 + "' != '" + 0 + "'", obj75.equals(0));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        stack13.pop();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.clear();
        boolean boolean36 = stack29.isEmpty();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Class<?> wildcardClass39 = stack37.getClass();
        java.lang.Class<?> wildcardClass40 = stack37.getClass();
        stack37.push((java.lang.Object) 10L);
        boolean boolean43 = stack37.isFull();
        stack29.push((java.lang.Object) stack37);
        stack29.push((java.lang.Object) false);
        stack29.clear();
        int int48 = stack29.size();
        stack13.push((java.lang.Object) stack29);
        java.lang.Class<?> wildcardClass50 = stack13.getClass();
        boolean boolean51 = stack13.isEmpty();
        boolean boolean52 = stack13.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        java.lang.Object obj16 = stack0.last();
        stack0.clear();
        stack0.clear();
        boolean boolean19 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Class<?> wildcardClass22 = stack20.getClass();
        java.lang.Class<?> wildcardClass23 = stack20.getClass();
        boolean boolean24 = stack20.isFull();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Object obj27 = null;
        stack25.push(obj27);
        stack25.pop();
        int int30 = stack25.size();
        stack25.clear();
        stack25.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass34 = stack25.getClass();
        stack20.push((java.lang.Object) stack25);
        java.lang.Object obj36 = stack25.last();
        stack25.pop();
        stack25.clear();
        stack0.push((java.lang.Object) stack25);
        boolean boolean40 = stack25.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + 10 + "'", obj36.equals(10));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        int int28 = stack13.size();
        boolean boolean29 = stack13.isFull();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass39 = stack30.getClass();
        boolean boolean40 = stack30.isFull();
        stack30.clear();
        jbhembise.testauto.example3.Stack stack42 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass43 = stack42.getClass();
        int int44 = stack42.size();
        stack42.push((java.lang.Object) (byte) 10);
        stack30.push((java.lang.Object) stack42);
        stack13.push((java.lang.Object) stack42);
        boolean boolean49 = stack42.isEmpty();
        java.lang.Class<?> wildcardClass50 = stack42.getClass();
        java.lang.Class<?> wildcardClass51 = stack42.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        java.lang.Object obj5 = stack0.last();
        boolean boolean6 = stack0.isFull();
        java.lang.Object obj7 = stack0.last();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        boolean boolean9 = stack8.isEmpty();
        stack8.push((java.lang.Object) (short) 10);
        boolean boolean12 = stack8.isEmpty();
        stack8.clear();
        java.lang.Class<?> wildcardClass14 = stack8.getClass();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        int int16 = stack15.size();
        java.lang.Class<?> wildcardClass17 = stack15.getClass();
        java.lang.Class<?> wildcardClass18 = stack15.getClass();
        stack15.clear();
        boolean boolean20 = stack15.isEmpty();
        stack8.push((java.lang.Object) stack15);
        int int22 = stack15.size();
        stack0.push((java.lang.Object) stack15);
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Object obj26 = null;
        stack24.push(obj26);
        stack24.pop();
        int int29 = stack24.size();
        stack24.clear();
        stack24.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass33 = stack24.getClass();
        boolean boolean34 = stack24.isEmpty();
        stack24.clear();
        stack24.clear();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        boolean boolean38 = stack37.isEmpty();
        stack37.clear();
        jbhembise.testauto.example3.Stack stack40 = new jbhembise.testauto.example3.Stack();
        int int41 = stack40.size();
        java.lang.Object obj42 = null;
        stack40.push(obj42);
        stack40.pop();
        int int45 = stack40.size();
        stack40.clear();
        stack40.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass49 = stack40.getClass();
        stack37.push((java.lang.Object) stack40);
        stack24.push((java.lang.Object) stack37);
        stack37.pop();
        jbhembise.testauto.example3.Stack stack53 = new jbhembise.testauto.example3.Stack();
        int int54 = stack53.size();
        stack53.clear();
        stack53.push((java.lang.Object) true);
        boolean boolean58 = stack53.isEmpty();
        stack53.clear();
        boolean boolean60 = stack53.isEmpty();
        jbhembise.testauto.example3.Stack stack61 = new jbhembise.testauto.example3.Stack();
        int int62 = stack61.size();
        java.lang.Class<?> wildcardClass63 = stack61.getClass();
        java.lang.Class<?> wildcardClass64 = stack61.getClass();
        stack61.push((java.lang.Object) 10L);
        boolean boolean67 = stack61.isFull();
        stack53.push((java.lang.Object) stack61);
        stack53.push((java.lang.Object) false);
        stack53.clear();
        int int72 = stack53.size();
        stack37.push((java.lang.Object) stack53);
        java.lang.Class<?> wildcardClass74 = stack37.getClass();
        boolean boolean75 = stack37.isFull();
        java.lang.Class<?> wildcardClass76 = stack37.getClass();
        stack0.push((java.lang.Object) stack37);
        stack0.pop();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte) 10 + "'", obj5.equals((byte) 10));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + (byte) 10 + "'", obj7.equals((byte) 10));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        boolean boolean12 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        java.lang.Class<?> wildcardClass15 = stack13.getClass();
        java.lang.Class<?> wildcardClass16 = stack13.getClass();
        stack13.push((java.lang.Object) 10L);
        boolean boolean19 = stack13.isFull();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass21 = stack20.getClass();
        int int22 = stack20.size();
        stack13.push((java.lang.Object) int22);
        int int24 = stack13.size();
        java.lang.Class<?> wildcardClass25 = stack13.getClass();
        boolean boolean26 = stack13.isFull();
        stack0.push((java.lang.Object) stack13);
        java.lang.Object obj28 = stack0.last();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(obj28);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        boolean boolean11 = stack10.isEmpty();
        boolean boolean12 = stack10.isEmpty();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        java.lang.Object obj15 = null;
        stack13.push(obj15);
        stack13.pop();
        int int18 = stack13.size();
        int int19 = stack13.size();
        stack10.push((java.lang.Object) int19);
        boolean boolean21 = stack10.isEmpty();
        stack0.push((java.lang.Object) stack10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isFull();
        java.lang.Object obj11 = stack0.last();
        boolean boolean12 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        stack0.clear();
        boolean boolean18 = stack0.isEmpty();
        boolean boolean19 = stack0.isFull();
        boolean boolean20 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        stack21.clear();
        stack21.push((java.lang.Object) true);
        boolean boolean26 = stack21.isEmpty();
        boolean boolean27 = stack21.isFull();
        stack21.pop();
        java.lang.Class<?> wildcardClass29 = stack21.getClass();
        stack21.clear();
        stack0.push((java.lang.Object) stack21);
        int int32 = stack0.size();
        boolean boolean33 = stack0.isFull();
        int int34 = stack0.size();
        java.lang.Object obj35 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(obj35);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        stack0.pop();
        boolean boolean17 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        boolean boolean19 = stack18.isEmpty();
        boolean boolean20 = stack18.isEmpty();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        boolean boolean22 = stack21.isEmpty();
        stack21.push((java.lang.Object) (short) 10);
        stack18.push((java.lang.Object) stack21);
        boolean boolean26 = stack18.isEmpty();
        java.lang.Object obj27 = stack18.last();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        stack0.push((java.lang.Object) wildcardClass28);
        boolean boolean30 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass4 = stack3.getClass();
        int int5 = stack3.size();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        boolean boolean12 = stack8.isFull();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        java.lang.Object obj15 = null;
        stack13.push(obj15);
        stack13.pop();
        int int18 = stack13.size();
        stack13.clear();
        stack13.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass22 = stack13.getClass();
        stack8.push((java.lang.Object) stack13);
        boolean boolean24 = stack13.isEmpty();
        java.lang.Class<?> wildcardClass25 = stack13.getClass();
        java.lang.Class<?> wildcardClass26 = stack13.getClass();
        stack0.push((java.lang.Object) stack13);
        int int28 = stack0.size();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.pop();
        int int36 = stack29.size();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        boolean boolean38 = stack37.isEmpty();
        stack37.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack41 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass42 = stack41.getClass();
        int int43 = stack41.size();
        stack37.push((java.lang.Object) int43);
        stack37.clear();
        java.lang.Class<?> wildcardClass46 = stack37.getClass();
        java.lang.Class<?> wildcardClass47 = stack37.getClass();
        stack29.push((java.lang.Object) stack37);
        stack0.push((java.lang.Object) stack37);
        int int50 = stack37.size();
        int int51 = stack37.size();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        stack0.clear();
        boolean boolean18 = stack0.isEmpty();
        boolean boolean19 = stack0.isFull();
        java.lang.Class<?> wildcardClass20 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        java.lang.Object obj18 = stack0.last();
        int int19 = stack0.size();
        java.lang.Class<?> wildcardClass20 = stack0.getClass();
        stack0.pop();
        java.lang.Class<?> wildcardClass22 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.pop();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        int int16 = stack15.size();
        stack15.clear();
        boolean boolean18 = stack15.isFull();
        java.lang.Class<?> wildcardClass19 = stack15.getClass();
        stack0.push((java.lang.Object) stack15);
        boolean boolean21 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        int int5 = stack0.size();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        int int7 = stack0.size();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        boolean boolean9 = stack8.isEmpty();
        boolean boolean10 = stack8.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        stack11.push((java.lang.Object) (short) 10);
        stack8.push((java.lang.Object) stack11);
        int int16 = stack11.size();
        stack0.push((java.lang.Object) int16);
        int int18 = stack0.size();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        boolean boolean20 = stack19.isEmpty();
        stack19.clear();
        boolean boolean22 = stack19.isFull();
        boolean boolean23 = stack19.isEmpty();
        java.lang.Class<?> wildcardClass24 = stack19.getClass();
        int int25 = stack19.size();
        stack19.clear();
        java.lang.Class<?> wildcardClass27 = stack19.getClass();
        stack0.push((java.lang.Object) stack19);
        boolean boolean29 = stack19.isEmpty();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        java.lang.Class<?> wildcardClass19 = stack9.getClass();
        java.lang.Object obj20 = null;
        stack9.push(obj20);
        java.lang.Object obj22 = stack9.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        stack5.pop();
        stack5.push((java.lang.Object) false);
        boolean boolean20 = stack5.isEmpty();
        int int21 = stack5.size();
        java.lang.Object obj22 = stack5.last();
        int int23 = stack5.size();
        stack5.clear();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass26 = stack25.getClass();
        int int27 = stack25.size();
        stack25.push((java.lang.Object) (byte) 10);
        java.lang.Object obj30 = stack25.last();
        boolean boolean31 = stack25.isFull();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        int int33 = stack32.size();
        java.lang.Class<?> wildcardClass34 = stack32.getClass();
        stack25.push((java.lang.Object) stack32);
        java.lang.Class<?> wildcardClass36 = stack25.getClass();
        boolean boolean37 = stack25.isFull();
        boolean boolean38 = stack25.isFull();
        stack5.push((java.lang.Object) stack25);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + obj22 + "' != '" + false + "'", obj22.equals(false));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + (byte) 10 + "'", obj30.equals((byte) 10));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        boolean boolean19 = stack5.isEmpty();
        int int20 = stack5.size();
        int int21 = stack5.size();
        stack5.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        boolean boolean5 = stack0.isFull();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        java.lang.Class<?> wildcardClass12 = stack8.getClass();
        boolean boolean13 = stack8.isEmpty();
        java.lang.Class<?> wildcardClass14 = stack8.getClass();
        stack0.push((java.lang.Object) stack8);
        java.lang.Class<?> wildcardClass16 = stack0.getClass();
        int int17 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        stack0.clear();
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        int int19 = stack0.size();
        boolean boolean20 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Object obj23 = null;
        stack21.push(obj23);
        stack21.pop();
        int int26 = stack21.size();
        stack21.clear();
        stack21.push((java.lang.Object) 10);
        java.lang.Object obj30 = stack21.last();
        boolean boolean31 = stack21.isEmpty();
        java.lang.Object obj32 = stack21.last();
        stack21.clear();
        stack0.push((java.lang.Object) stack21);
        stack21.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + 10 + "'", obj30.equals(10));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + obj32 + "' != '" + 10 + "'", obj32.equals(10));
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        int int5 = stack4.size();
        java.lang.Class<?> wildcardClass6 = stack4.getClass();
        java.lang.Class<?> wildcardClass7 = stack4.getClass();
        boolean boolean8 = stack4.isFull();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Object obj11 = null;
        stack9.push(obj11);
        stack9.pop();
        int int14 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        stack4.push((java.lang.Object) stack9);
        boolean boolean20 = stack4.isFull();
        stack4.clear();
        boolean boolean22 = stack4.isFull();
        stack0.push((java.lang.Object) stack4);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        int int3 = stack0.size();
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        int int5 = stack4.size();
        java.lang.Object obj6 = null;
        stack4.push(obj6);
        stack4.pop();
        int int9 = stack4.size();
        stack4.clear();
        stack4.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass13 = stack4.getClass();
        boolean boolean14 = stack4.isEmpty();
        stack4.clear();
        stack4.clear();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        boolean boolean18 = stack17.isEmpty();
        stack17.clear();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Object obj22 = null;
        stack20.push(obj22);
        stack20.pop();
        int int25 = stack20.size();
        stack20.clear();
        stack20.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass29 = stack20.getClass();
        stack17.push((java.lang.Object) stack20);
        stack4.push((java.lang.Object) stack17);
        int int32 = stack17.size();
        stack0.push((java.lang.Object) int32);
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        int int35 = stack34.size();
        java.lang.Object obj36 = null;
        stack34.push(obj36);
        stack34.pop();
        int int39 = stack34.size();
        stack34.clear();
        stack34.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass43 = stack34.getClass();
        boolean boolean44 = stack34.isEmpty();
        jbhembise.testauto.example3.Stack stack45 = new jbhembise.testauto.example3.Stack();
        boolean boolean46 = stack45.isEmpty();
        boolean boolean47 = stack45.isEmpty();
        boolean boolean48 = stack45.isEmpty();
        stack34.push((java.lang.Object) boolean48);
        stack34.pop();
        int int51 = stack34.size();
        boolean boolean52 = stack34.isEmpty();
        stack0.push((java.lang.Object) stack34);
        java.lang.Class<?> wildcardClass54 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        boolean boolean19 = stack5.isEmpty();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        boolean boolean21 = stack20.isEmpty();
        stack20.clear();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Object obj25 = null;
        stack23.push(obj25);
        stack23.pop();
        int int28 = stack23.size();
        stack23.clear();
        stack23.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass32 = stack23.getClass();
        stack20.push((java.lang.Object) stack23);
        stack23.clear();
        stack5.push((java.lang.Object) stack23);
        jbhembise.testauto.example3.Stack stack36 = new jbhembise.testauto.example3.Stack();
        int int37 = stack36.size();
        stack36.clear();
        stack36.push((java.lang.Object) true);
        boolean boolean41 = stack36.isEmpty();
        int int42 = stack36.size();
        java.lang.Class<?> wildcardClass43 = stack36.getClass();
        boolean boolean44 = stack36.isEmpty();
        boolean boolean45 = stack36.isFull();
        boolean boolean46 = stack36.isFull();
        stack36.clear();
        boolean boolean48 = stack36.isEmpty();
        int int49 = stack36.size();
        boolean boolean50 = stack36.isFull();
        stack23.push((java.lang.Object) boolean50);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isFull();
        boolean boolean11 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Object obj14 = null;
        stack12.push(obj14);
        stack12.pop();
        int int17 = stack12.size();
        stack12.clear();
        stack12.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass21 = stack12.getClass();
        boolean boolean22 = stack12.isFull();
        stack12.clear();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass25 = stack24.getClass();
        int int26 = stack24.size();
        stack24.push((java.lang.Object) (byte) 10);
        stack12.push((java.lang.Object) stack24);
        stack12.clear();
        stack0.push((java.lang.Object) stack12);
        stack0.clear();
        boolean boolean33 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Class<?> wildcardClass7 = stack5.getClass();
        java.lang.Class<?> wildcardClass8 = stack5.getClass();
        boolean boolean9 = stack5.isFull();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass19 = stack10.getClass();
        stack5.push((java.lang.Object) stack10);
        boolean boolean21 = stack10.isEmpty();
        int int22 = stack10.size();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Object obj25 = null;
        stack23.push(obj25);
        stack23.pop();
        int int28 = stack23.size();
        stack23.clear();
        stack23.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass32 = stack23.getClass();
        boolean boolean33 = stack23.isFull();
        stack23.clear();
        jbhembise.testauto.example3.Stack stack35 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass36 = stack35.getClass();
        int int37 = stack35.size();
        stack35.push((java.lang.Object) (byte) 10);
        stack23.push((java.lang.Object) stack35);
        stack23.clear();
        stack10.push((java.lang.Object) stack23);
        boolean boolean43 = stack10.isEmpty();
        stack0.push((java.lang.Object) stack10);
        stack0.clear();
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        boolean boolean47 = stack46.isEmpty();
        boolean boolean48 = stack46.isEmpty();
        jbhembise.testauto.example3.Stack stack49 = new jbhembise.testauto.example3.Stack();
        boolean boolean50 = stack49.isEmpty();
        stack49.push((java.lang.Object) (short) 10);
        stack46.push((java.lang.Object) stack49);
        int int54 = stack49.size();
        int int55 = stack49.size();
        stack0.push((java.lang.Object) stack49);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        int int6 = stack0.size();
        stack0.push((java.lang.Object) 1.0f);
        boolean boolean9 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        boolean boolean11 = stack10.isEmpty();
        boolean boolean12 = stack10.isEmpty();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.push((java.lang.Object) (short) 10);
        stack10.push((java.lang.Object) stack13);
        boolean boolean18 = stack10.isEmpty();
        java.lang.Object obj19 = stack10.last();
        boolean boolean20 = stack10.isFull();
        boolean boolean21 = stack10.isEmpty();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        int int23 = stack22.size();
        java.lang.Object obj24 = null;
        stack22.push(obj24);
        stack22.pop();
        int int27 = stack22.size();
        stack22.clear();
        stack22.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass31 = stack22.getClass();
        boolean boolean32 = stack22.isFull();
        stack22.clear();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass35 = stack34.getClass();
        int int36 = stack34.size();
        stack34.push((java.lang.Object) (byte) 10);
        stack22.push((java.lang.Object) stack34);
        stack22.clear();
        stack10.push((java.lang.Object) stack22);
        java.lang.Class<?> wildcardClass42 = stack10.getClass();
        stack0.push((java.lang.Object) stack10);
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        java.lang.Object obj5 = stack0.last();
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Class<?> wildcardClass9 = stack7.getClass();
        stack0.push((java.lang.Object) stack7);
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        boolean boolean15 = stack11.isFull();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack11.push((java.lang.Object) stack16);
        boolean boolean27 = stack16.isEmpty();
        java.lang.Class<?> wildcardClass28 = stack16.getClass();
        int int29 = stack16.size();
        stack7.push((java.lang.Object) stack16);
        stack7.clear();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte) 10 + "'", obj5.equals((byte) 10));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        int int18 = stack17.size();
        stack17.clear();
        stack17.push((java.lang.Object) true);
        java.lang.Object obj22 = stack17.last();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        stack23.clear();
        boolean boolean26 = stack23.isFull();
        stack23.clear();
        stack23.clear();
        stack17.push((java.lang.Object) stack23);
        stack5.push((java.lang.Object) stack23);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + obj22 + "' != '" + true + "'", obj22.equals(true));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        int int7 = stack0.size();
        stack0.clear();
        int int9 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        boolean boolean5 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        java.lang.Class<?> wildcardClass8 = stack6.getClass();
        java.lang.Class<?> wildcardClass9 = stack6.getClass();
        boolean boolean10 = stack6.isFull();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Object obj13 = null;
        stack11.push(obj13);
        stack11.pop();
        int int16 = stack11.size();
        stack11.clear();
        stack11.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass20 = stack11.getClass();
        stack6.push((java.lang.Object) stack11);
        boolean boolean22 = stack6.isFull();
        int int23 = stack6.size();
        boolean boolean24 = stack6.isEmpty();
        boolean boolean25 = stack6.isEmpty();
        jbhembise.testauto.example3.Stack stack26 = new jbhembise.testauto.example3.Stack();
        int int27 = stack26.size();
        java.lang.Object obj28 = null;
        stack26.push(obj28);
        stack26.pop();
        int int31 = stack26.size();
        stack26.clear();
        stack26.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass35 = stack26.getClass();
        boolean boolean36 = stack26.isEmpty();
        stack26.clear();
        jbhembise.testauto.example3.Stack stack38 = new jbhembise.testauto.example3.Stack();
        int int39 = stack38.size();
        java.lang.Class<?> wildcardClass40 = stack38.getClass();
        java.lang.Class<?> wildcardClass41 = stack38.getClass();
        java.lang.Class<?> wildcardClass42 = stack38.getClass();
        stack26.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = stack26.last();
        int int45 = stack26.size();
        stack26.pop();
        boolean boolean47 = stack26.isFull();
        stack6.push((java.lang.Object) boolean47);
        stack0.push((java.lang.Object) boolean47);
        int int50 = stack0.size();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Class<?> wildcardClass16 = stack0.getClass();
        boolean boolean17 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass19 = stack18.getClass();
        boolean boolean20 = stack18.isEmpty();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Class<?> wildcardClass23 = stack21.getClass();
        java.lang.Class<?> wildcardClass24 = stack21.getClass();
        boolean boolean25 = stack21.isFull();
        jbhembise.testauto.example3.Stack stack26 = new jbhembise.testauto.example3.Stack();
        int int27 = stack26.size();
        java.lang.Object obj28 = null;
        stack26.push(obj28);
        stack26.pop();
        int int31 = stack26.size();
        stack26.clear();
        stack26.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass35 = stack26.getClass();
        stack21.push((java.lang.Object) stack26);
        boolean boolean37 = stack26.isEmpty();
        int int38 = stack26.size();
        boolean boolean39 = stack26.isEmpty();
        boolean boolean40 = stack26.isEmpty();
        jbhembise.testauto.example3.Stack stack41 = new jbhembise.testauto.example3.Stack();
        int int42 = stack41.size();
        java.lang.Object obj43 = null;
        stack41.push(obj43);
        stack41.pop();
        int int46 = stack41.size();
        stack41.clear();
        java.lang.Class<?> wildcardClass48 = stack41.getClass();
        stack26.push((java.lang.Object) wildcardClass48);
        stack18.push((java.lang.Object) stack26);
        stack0.push((java.lang.Object) stack18);
        stack18.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        boolean boolean26 = stack18.isFull();
        java.lang.Class<?> wildcardClass27 = stack18.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        java.lang.Object obj5 = stack0.last();
        boolean boolean6 = stack0.isFull();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        int int8 = stack0.size();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte) 10 + "'", obj5.equals((byte) 10));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        stack11.clear();
        int int14 = stack11.size();
        java.lang.Class<?> wildcardClass15 = stack11.getClass();
        java.lang.Class<?> wildcardClass16 = stack11.getClass();
        stack0.push((java.lang.Object) stack11);
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        stack0.clear();
        boolean boolean20 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        boolean boolean17 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        boolean boolean19 = stack18.isEmpty();
        stack18.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack18);
        stack18.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Object obj5 = null;
        stack3.push(obj5);
        stack3.pop();
        int int8 = stack3.size();
        stack3.clear();
        stack3.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass12 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        stack3.clear();
        boolean boolean15 = stack3.isFull();
        stack3.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        int int6 = stack0.size();
        stack0.push((java.lang.Object) 1.0f);
        boolean boolean9 = stack0.isEmpty();
        int int10 = stack0.size();
        java.lang.Object obj11 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 1.0f + "'", obj11.equals(1.0f));
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        int int6 = stack0.size();
        stack0.push((java.lang.Object) 1.0f);
        boolean boolean9 = stack0.isEmpty();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        java.lang.Object obj19 = null;
        stack5.push(obj19);
        java.lang.Class<?> wildcardClass21 = stack5.getClass();
        stack5.clear();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        boolean boolean24 = stack23.isEmpty();
        stack23.push((java.lang.Object) "hi!");
        int int27 = stack23.size();
        stack5.push((java.lang.Object) stack23);
        boolean boolean29 = stack23.isEmpty();
        stack23.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isFull();
        boolean boolean11 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Object obj14 = null;
        stack12.push(obj14);
        stack12.pop();
        int int17 = stack12.size();
        stack12.clear();
        stack12.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass21 = stack12.getClass();
        boolean boolean22 = stack12.isFull();
        stack12.clear();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass25 = stack24.getClass();
        int int26 = stack24.size();
        stack24.push((java.lang.Object) (byte) 10);
        stack12.push((java.lang.Object) stack24);
        stack12.clear();
        stack0.push((java.lang.Object) stack12);
        stack0.clear();
        int int33 = stack0.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Object obj10 = null;
        stack8.push(obj10);
        stack8.pop();
        int int13 = stack8.size();
        stack8.clear();
        stack8.push((java.lang.Object) 10);
        boolean boolean17 = stack8.isEmpty();
        boolean boolean18 = stack8.isEmpty();
        java.lang.Object obj19 = stack8.last();
        stack8.push((java.lang.Object) (byte) 100);
        boolean boolean22 = stack8.isEmpty();
        boolean boolean23 = stack8.isFull();
        java.lang.Class<?> wildcardClass24 = stack8.getClass();
        java.lang.Class<?> wildcardClass25 = stack8.getClass();
        stack0.push((java.lang.Object) wildcardClass25);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + obj19 + "' != '" + 10 + "'", obj19.equals(10));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        java.lang.Class<?> wildcardClass17 = stack5.getClass();
        stack5.pop();
        java.lang.Class<?> wildcardClass19 = stack5.getClass();
        boolean boolean20 = stack5.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Class<?> wildcardClass5 = stack3.getClass();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        boolean boolean7 = stack3.isFull();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Object obj10 = null;
        stack8.push(obj10);
        stack8.pop();
        int int13 = stack8.size();
        stack8.clear();
        stack8.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass17 = stack8.getClass();
        stack3.push((java.lang.Object) stack8);
        boolean boolean19 = stack8.isEmpty();
        int int20 = stack8.size();
        boolean boolean21 = stack8.isEmpty();
        boolean boolean22 = stack8.isEmpty();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Object obj25 = null;
        stack23.push(obj25);
        stack23.pop();
        int int28 = stack23.size();
        stack23.clear();
        java.lang.Class<?> wildcardClass30 = stack23.getClass();
        stack8.push((java.lang.Object) wildcardClass30);
        stack0.push((java.lang.Object) stack8);
        java.lang.Object obj33 = stack0.last();
        stack0.clear();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        boolean boolean3 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        stack6.push((java.lang.Object) true);
        boolean boolean11 = stack6.isEmpty();
        boolean boolean12 = stack6.isFull();
        stack6.pop();
        boolean boolean14 = stack6.isFull();
        int int15 = stack6.size();
        stack0.push((java.lang.Object) stack6);
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        int int18 = stack17.size();
        java.lang.Object obj19 = null;
        stack17.push(obj19);
        stack17.pop();
        int int22 = stack17.size();
        stack17.clear();
        stack17.push((java.lang.Object) 10);
        boolean boolean26 = stack17.isEmpty();
        boolean boolean27 = stack17.isEmpty();
        java.lang.Object obj28 = stack17.last();
        java.lang.Class<?> wildcardClass29 = stack17.getClass();
        java.lang.Object obj30 = stack17.last();
        int int31 = stack17.size();
        stack0.push((java.lang.Object) stack17);
        java.lang.Object obj33 = stack0.last();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + 10 + "'", obj28.equals(10));
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + 10 + "'", obj30.equals(10));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        boolean boolean11 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack12.clear();
        stack12.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        java.lang.Object obj21 = null;
        stack19.push(obj21);
        stack19.pop();
        int int24 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass28 = stack19.getClass();
        stack12.push((java.lang.Object) wildcardClass28);
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) true);
        boolean boolean35 = stack30.isEmpty();
        stack30.pop();
        stack12.push((java.lang.Object) stack30);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        java.lang.Class<?> wildcardClass41 = stack39.getClass();
        java.lang.Class<?> wildcardClass42 = stack39.getClass();
        boolean boolean43 = stack39.isFull();
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        int int45 = stack44.size();
        java.lang.Object obj46 = null;
        stack44.push(obj46);
        stack44.pop();
        int int49 = stack44.size();
        stack44.clear();
        stack44.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass53 = stack44.getClass();
        stack39.push((java.lang.Object) stack44);
        jbhembise.testauto.example3.Stack stack55 = new jbhembise.testauto.example3.Stack();
        int int56 = stack55.size();
        java.lang.Object obj57 = null;
        stack55.push(obj57);
        java.lang.Class<?> wildcardClass59 = stack55.getClass();
        stack44.push((java.lang.Object) wildcardClass59);
        stack0.push((java.lang.Object) stack44);
        jbhembise.testauto.example3.Stack stack62 = new jbhembise.testauto.example3.Stack();
        int int63 = stack62.size();
        java.lang.Class<?> wildcardClass64 = stack62.getClass();
        java.lang.Class<?> wildcardClass65 = stack62.getClass();
        boolean boolean66 = stack62.isFull();
        jbhembise.testauto.example3.Stack stack67 = new jbhembise.testauto.example3.Stack();
        int int68 = stack67.size();
        java.lang.Object obj69 = null;
        stack67.push(obj69);
        stack67.pop();
        int int72 = stack67.size();
        stack67.clear();
        stack67.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass76 = stack67.getClass();
        stack62.push((java.lang.Object) stack67);
        boolean boolean78 = stack67.isEmpty();
        java.lang.Class<?> wildcardClass79 = stack67.getClass();
        int int80 = stack67.size();
        stack44.push((java.lang.Object) stack67);
        stack44.pop();
        java.lang.Class<?> wildcardClass83 = stack44.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        stack3.pop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        boolean boolean13 = stack9.isFull();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        int int15 = stack14.size();
        java.lang.Object obj16 = null;
        stack14.push(obj16);
        stack14.pop();
        int int19 = stack14.size();
        stack14.clear();
        stack14.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass23 = stack14.getClass();
        stack9.push((java.lang.Object) stack14);
        java.lang.Object obj25 = stack14.last();
        java.lang.Object obj26 = stack14.last();
        int int27 = stack14.size();
        stack0.push((java.lang.Object) int27);
        int int29 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + 10 + "'", obj25.equals(10));
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + 10 + "'", obj26.equals(10));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        int int4 = stack0.size();
        boolean boolean5 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        stack0.clear();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass6 = stack5.getClass();
        int int7 = stack5.size();
        stack5.push((java.lang.Object) (byte) 10);
        int int10 = stack5.size();
        stack5.clear();
        stack0.push((java.lang.Object) stack5);
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        java.lang.Object obj15 = null;
        stack13.push(obj15);
        stack13.pop();
        int int18 = stack13.size();
        stack13.clear();
        stack13.push((java.lang.Object) 10);
        java.lang.Object obj22 = stack13.last();
        boolean boolean23 = stack13.isEmpty();
        boolean boolean24 = stack13.isEmpty();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Class<?> wildcardClass27 = stack25.getClass();
        java.lang.Class<?> wildcardClass28 = stack25.getClass();
        stack25.push((java.lang.Object) 10L);
        boolean boolean31 = stack25.isFull();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass33 = stack32.getClass();
        int int34 = stack32.size();
        stack25.push((java.lang.Object) int34);
        boolean boolean36 = stack25.isFull();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Class<?> wildcardClass39 = stack37.getClass();
        java.lang.Class<?> wildcardClass40 = stack37.getClass();
        java.lang.Class<?> wildcardClass41 = stack37.getClass();
        stack37.clear();
        stack37.clear();
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        int int45 = stack44.size();
        java.lang.Object obj46 = null;
        stack44.push(obj46);
        stack44.pop();
        int int49 = stack44.size();
        stack44.clear();
        stack44.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass53 = stack44.getClass();
        stack37.push((java.lang.Object) wildcardClass53);
        jbhembise.testauto.example3.Stack stack55 = new jbhembise.testauto.example3.Stack();
        int int56 = stack55.size();
        stack55.clear();
        stack55.push((java.lang.Object) true);
        boolean boolean60 = stack55.isEmpty();
        stack55.pop();
        stack37.push((java.lang.Object) stack55);
        stack25.push((java.lang.Object) stack37);
        stack13.push((java.lang.Object) stack25);
        java.lang.Object obj65 = stack13.last();
        stack0.push((java.lang.Object) stack13);
        java.lang.Class<?> wildcardClass67 = stack13.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + obj22 + "' != '" + 10 + "'", obj22.equals(10));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        java.lang.Object obj5 = stack0.last();
        java.lang.Object obj6 = stack0.last();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isEmpty();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + true + "'", obj5.equals(true));
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + true + "'", obj6.equals(true));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        int int6 = stack0.size();
        stack0.push((java.lang.Object) 1.0f);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isFull();
        java.lang.Class<?> wildcardClass11 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        boolean boolean2 = stack0.isEmpty();
        boolean boolean3 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        boolean boolean5 = stack0.isEmpty();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        boolean boolean14 = stack11.isEmpty();
        stack0.push((java.lang.Object) boolean14);
        java.lang.Class<?> wildcardClass16 = stack0.getClass();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        stack11.clear();
        int int14 = stack11.size();
        java.lang.Class<?> wildcardClass15 = stack11.getClass();
        java.lang.Class<?> wildcardClass16 = stack11.getClass();
        stack0.push((java.lang.Object) stack11);
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) true);
        boolean boolean24 = stack19.isEmpty();
        int int25 = stack19.size();
        java.lang.Class<?> wildcardClass26 = stack19.getClass();
        boolean boolean27 = stack19.isEmpty();
        boolean boolean28 = stack19.isFull();
        boolean boolean29 = stack19.isFull();
        stack19.clear();
        boolean boolean31 = stack19.isEmpty();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        int int33 = stack32.size();
        java.lang.Class<?> wildcardClass34 = stack32.getClass();
        java.lang.Class<?> wildcardClass35 = stack32.getClass();
        stack32.push((java.lang.Object) 10L);
        boolean boolean38 = stack32.isFull();
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass40 = stack39.getClass();
        int int41 = stack39.size();
        stack32.push((java.lang.Object) int41);
        int int43 = stack32.size();
        java.lang.Class<?> wildcardClass44 = stack32.getClass();
        boolean boolean45 = stack32.isFull();
        stack19.push((java.lang.Object) stack32);
        stack0.push((java.lang.Object) stack32);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        java.lang.Class<?> wildcardClass26 = stack0.getClass();
        boolean boolean27 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        stack5.pop();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.clear();
        boolean boolean25 = stack18.isEmpty();
        stack5.push((java.lang.Object) boolean25);
        stack5.pop();
        boolean boolean28 = stack5.isEmpty();
        boolean boolean29 = stack5.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        java.lang.Class<?> wildcardClass17 = stack5.getClass();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        int int24 = stack18.size();
        int int25 = stack18.size();
        stack18.clear();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Object obj29 = null;
        stack27.push(obj29);
        stack27.pop();
        int int32 = stack27.size();
        stack27.clear();
        stack27.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass36 = stack27.getClass();
        boolean boolean37 = stack27.isEmpty();
        stack27.clear();
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        java.lang.Class<?> wildcardClass41 = stack39.getClass();
        java.lang.Class<?> wildcardClass42 = stack39.getClass();
        java.lang.Class<?> wildcardClass43 = stack39.getClass();
        stack27.push((java.lang.Object) wildcardClass43);
        stack18.push((java.lang.Object) stack27);
        stack5.push((java.lang.Object) stack27);
        stack5.pop();
        java.lang.Object obj48 = stack5.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + obj48 + "' != '" + 10 + "'", obj48.equals(10));
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        stack5.pop();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.clear();
        boolean boolean25 = stack18.isEmpty();
        stack5.push((java.lang.Object) boolean25);
        java.lang.Class<?> wildcardClass27 = stack5.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Class<?> wildcardClass7 = stack5.getClass();
        java.lang.Class<?> wildcardClass8 = stack5.getClass();
        boolean boolean9 = stack5.isFull();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass19 = stack10.getClass();
        stack5.push((java.lang.Object) stack10);
        java.lang.Class<?> wildcardClass21 = stack5.getClass();
        stack0.push((java.lang.Object) wildcardClass21);
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Class<?> wildcardClass25 = stack23.getClass();
        java.lang.Class<?> wildcardClass26 = stack23.getClass();
        boolean boolean27 = stack23.isFull();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        stack28.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass37 = stack28.getClass();
        stack23.push((java.lang.Object) stack28);
        boolean boolean39 = stack23.isFull();
        int int40 = stack23.size();
        stack0.push((java.lang.Object) stack23);
        jbhembise.testauto.example3.Stack stack42 = new jbhembise.testauto.example3.Stack();
        int int43 = stack42.size();
        java.lang.Object obj44 = null;
        stack42.push(obj44);
        stack42.pop();
        int int47 = stack42.size();
        stack42.clear();
        stack42.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass51 = stack42.getClass();
        boolean boolean52 = stack42.isEmpty();
        boolean boolean53 = stack42.isFull();
        boolean boolean54 = stack42.isEmpty();
        jbhembise.testauto.example3.Stack stack55 = new jbhembise.testauto.example3.Stack();
        int int56 = stack55.size();
        stack55.clear();
        boolean boolean58 = stack55.isFull();
        stack55.clear();
        stack55.clear();
        jbhembise.testauto.example3.Stack stack61 = new jbhembise.testauto.example3.Stack();
        int int62 = stack61.size();
        stack61.clear();
        stack61.push((java.lang.Object) true);
        boolean boolean66 = stack61.isEmpty();
        int int67 = stack61.size();
        int int68 = stack61.size();
        stack55.push((java.lang.Object) stack61);
        stack42.push((java.lang.Object) stack61);
        boolean boolean71 = stack42.isEmpty();
        jbhembise.testauto.example3.Stack stack72 = new jbhembise.testauto.example3.Stack();
        int int73 = stack72.size();
        java.lang.Object obj74 = null;
        stack72.push(obj74);
        stack72.pop();
        int int77 = stack72.size();
        stack72.clear();
        stack72.push((java.lang.Object) 10);
        java.lang.Object obj81 = stack72.last();
        boolean boolean82 = stack72.isFull();
        stack72.pop();
        boolean boolean84 = stack72.isFull();
        boolean boolean85 = stack72.isEmpty();
        boolean boolean86 = stack72.isEmpty();
        stack42.push((java.lang.Object) stack72);
        stack23.push((java.lang.Object) stack42);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + obj81 + "' != '" + 10 + "'", obj81.equals(10));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        boolean boolean11 = stack0.isEmpty();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        boolean boolean26 = stack0.isFull();
        java.lang.Object obj27 = stack0.last();
        java.lang.Class<?> wildcardClass28 = stack0.getClass();
        boolean boolean29 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Class<?> wildcardClass5 = stack3.getClass();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        boolean boolean7 = stack3.isFull();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Object obj10 = null;
        stack8.push(obj10);
        stack8.pop();
        int int13 = stack8.size();
        stack8.clear();
        stack8.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass17 = stack8.getClass();
        stack3.push((java.lang.Object) stack8);
        boolean boolean19 = stack8.isEmpty();
        int int20 = stack8.size();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Object obj23 = null;
        stack21.push(obj23);
        stack21.pop();
        int int26 = stack21.size();
        stack21.clear();
        stack21.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass30 = stack21.getClass();
        boolean boolean31 = stack21.isFull();
        stack21.clear();
        jbhembise.testauto.example3.Stack stack33 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass34 = stack33.getClass();
        int int35 = stack33.size();
        stack33.push((java.lang.Object) (byte) 10);
        stack21.push((java.lang.Object) stack33);
        stack21.clear();
        stack8.push((java.lang.Object) stack21);
        stack0.push((java.lang.Object) stack21);
        java.lang.Object obj42 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass6 = stack5.getClass();
        int int7 = stack5.size();
        stack0.push((java.lang.Object) int7);
        boolean boolean9 = stack0.isEmpty();
        stack0.clear();
        boolean boolean11 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        stack0.clear();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        java.lang.Class<?> wildcardClass10 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Object obj13 = null;
        stack11.push(obj13);
        stack11.pop();
        int int16 = stack11.size();
        stack11.clear();
        boolean boolean18 = stack11.isFull();
        java.lang.Class<?> wildcardClass19 = stack11.getClass();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        stack20.clear();
        stack20.push((java.lang.Object) true);
        boolean boolean25 = stack20.isEmpty();
        boolean boolean26 = stack20.isFull();
        int int27 = stack20.size();
        stack11.push((java.lang.Object) int27);
        java.lang.Class<?> wildcardClass29 = stack11.getClass();
        boolean boolean30 = stack11.isEmpty();
        stack0.push((java.lang.Object) boolean30);
        boolean boolean32 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        int int17 = stack0.size();
        boolean boolean18 = stack0.isEmpty();
        boolean boolean19 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        stack20.clear();
        stack20.push((java.lang.Object) true);
        boolean boolean25 = stack20.isEmpty();
        int int26 = stack20.size();
        java.lang.Class<?> wildcardClass27 = stack20.getClass();
        boolean boolean28 = stack20.isEmpty();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        java.lang.Class<?> wildcardClass31 = stack29.getClass();
        java.lang.Class<?> wildcardClass32 = stack29.getClass();
        stack29.push((java.lang.Object) 10L);
        stack29.pop();
        int int36 = stack29.size();
        stack20.push((java.lang.Object) stack29);
        jbhembise.testauto.example3.Stack stack38 = new jbhembise.testauto.example3.Stack();
        int int39 = stack38.size();
        stack38.clear();
        stack38.push((java.lang.Object) true);
        boolean boolean43 = stack38.isFull();
        stack20.push((java.lang.Object) stack38);
        stack0.push((java.lang.Object) stack38);
        java.lang.Class<?> wildcardClass46 = stack38.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        stack12.push((java.lang.Object) 10L);
        boolean boolean18 = stack12.isFull();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass20 = stack19.getClass();
        int int21 = stack19.size();
        stack12.push((java.lang.Object) int21);
        boolean boolean23 = stack12.isFull();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Class<?> wildcardClass26 = stack24.getClass();
        java.lang.Class<?> wildcardClass27 = stack24.getClass();
        java.lang.Class<?> wildcardClass28 = stack24.getClass();
        stack24.clear();
        stack24.clear();
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        int int32 = stack31.size();
        java.lang.Object obj33 = null;
        stack31.push(obj33);
        stack31.pop();
        int int36 = stack31.size();
        stack31.clear();
        stack31.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass40 = stack31.getClass();
        stack24.push((java.lang.Object) wildcardClass40);
        jbhembise.testauto.example3.Stack stack42 = new jbhembise.testauto.example3.Stack();
        int int43 = stack42.size();
        stack42.clear();
        stack42.push((java.lang.Object) true);
        boolean boolean47 = stack42.isEmpty();
        stack42.pop();
        stack24.push((java.lang.Object) stack42);
        stack12.push((java.lang.Object) stack24);
        stack0.push((java.lang.Object) stack12);
        java.lang.Object obj52 = stack0.last();
        stack0.pop();
        int int54 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        int int9 = stack0.size();
        boolean boolean10 = stack0.isEmpty();
        stack0.pop();
        boolean boolean12 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass13 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        boolean boolean25 = stack18.isFull();
        java.lang.Class<?> wildcardClass26 = stack18.getClass();
        stack12.push((java.lang.Object) stack18);
        boolean boolean28 = stack18.isFull();
        boolean boolean29 = stack18.isEmpty();
        java.lang.Object obj30 = null;
        stack18.push(obj30);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Object obj7 = stack0.last();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        boolean boolean12 = stack8.isFull();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        java.lang.Object obj15 = null;
        stack13.push(obj15);
        stack13.pop();
        int int18 = stack13.size();
        stack13.clear();
        stack13.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass22 = stack13.getClass();
        stack8.push((java.lang.Object) stack13);
        boolean boolean24 = stack8.isFull();
        int int25 = stack8.size();
        boolean boolean26 = stack8.isEmpty();
        boolean boolean27 = stack8.isEmpty();
        java.lang.Object obj28 = stack8.last();
        stack0.push(obj28);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + true + "'", obj7.equals(true));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(obj28);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        boolean boolean26 = stack0.isFull();
        java.lang.Object obj27 = stack0.last();
        java.lang.Object obj28 = stack0.last();
        int int29 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        int int8 = stack0.size();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        boolean boolean11 = stack0.isFull();
        java.lang.Class<?> wildcardClass12 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        java.lang.Class<?> wildcardClass9 = stack3.getClass();
        java.lang.Object obj10 = stack3.last();
        java.lang.Object obj11 = stack3.last();
        int int12 = stack3.size();
        boolean boolean13 = stack3.isEmpty();
        stack3.pop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 10 + "'", obj10.equals((short) 10));
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 10 + "'", obj11.equals((short) 10));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        java.lang.Object obj5 = stack0.last();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        boolean boolean9 = stack6.isFull();
        stack6.clear();
        stack6.clear();
        stack0.push((java.lang.Object) stack6);
        stack0.pop();
        boolean boolean14 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass15 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + true + "'", obj5.equals(true));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        java.lang.Class<?> wildcardClass9 = stack3.getClass();
        java.lang.Object obj10 = stack3.last();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass12 = stack11.getClass();
        boolean boolean13 = stack11.isEmpty();
        stack11.clear();
        stack11.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        boolean boolean17 = stack16.isEmpty();
        boolean boolean18 = stack16.isEmpty();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        boolean boolean20 = stack19.isEmpty();
        stack19.push((java.lang.Object) (short) 10);
        stack16.push((java.lang.Object) stack19);
        boolean boolean24 = stack16.isEmpty();
        java.lang.Object obj25 = stack16.last();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        stack11.push((java.lang.Object) wildcardClass26);
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Class<?> wildcardClass30 = stack28.getClass();
        java.lang.Class<?> wildcardClass31 = stack28.getClass();
        java.lang.Class<?> wildcardClass32 = stack28.getClass();
        stack28.clear();
        stack28.clear();
        jbhembise.testauto.example3.Stack stack35 = new jbhembise.testauto.example3.Stack();
        int int36 = stack35.size();
        java.lang.Object obj37 = null;
        stack35.push(obj37);
        stack35.pop();
        int int40 = stack35.size();
        stack35.clear();
        stack35.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass44 = stack35.getClass();
        stack28.push((java.lang.Object) wildcardClass44);
        stack11.push((java.lang.Object) stack28);
        stack3.push((java.lang.Object) stack11);
        boolean boolean48 = stack3.isEmpty();
        boolean boolean49 = stack3.isFull();
        jbhembise.testauto.example3.Stack stack50 = new jbhembise.testauto.example3.Stack();
        int int51 = stack50.size();
        java.lang.Class<?> wildcardClass52 = stack50.getClass();
        java.lang.Class<?> wildcardClass53 = stack50.getClass();
        java.lang.Class<?> wildcardClass54 = stack50.getClass();
        stack50.clear();
        stack50.clear();
        jbhembise.testauto.example3.Stack stack57 = new jbhembise.testauto.example3.Stack();
        int int58 = stack57.size();
        java.lang.Object obj59 = null;
        stack57.push(obj59);
        stack57.pop();
        int int62 = stack57.size();
        stack57.clear();
        stack57.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass66 = stack57.getClass();
        stack50.push((java.lang.Object) wildcardClass66);
        jbhembise.testauto.example3.Stack stack68 = new jbhembise.testauto.example3.Stack();
        int int69 = stack68.size();
        stack68.clear();
        stack68.push((java.lang.Object) true);
        boolean boolean73 = stack68.isEmpty();
        stack68.pop();
        stack50.push((java.lang.Object) stack68);
        boolean boolean76 = stack68.isFull();
        jbhembise.testauto.example3.Stack stack77 = new jbhembise.testauto.example3.Stack();
        boolean boolean78 = stack77.isEmpty();
        boolean boolean79 = stack77.isEmpty();
        jbhembise.testauto.example3.Stack stack80 = new jbhembise.testauto.example3.Stack();
        int int81 = stack80.size();
        java.lang.Object obj82 = null;
        stack80.push(obj82);
        stack80.pop();
        int int85 = stack80.size();
        int int86 = stack80.size();
        stack77.push((java.lang.Object) int86);
        stack68.push((java.lang.Object) stack77);
        stack68.pop();
        stack3.push((java.lang.Object) stack68);
        boolean boolean91 = stack68.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 10 + "'", obj10.equals((short) 10));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        int int9 = stack0.size();
        java.lang.Class<?> wildcardClass10 = stack0.getClass();
        stack0.clear();
        int int12 = stack0.size();
        java.lang.Class<?> wildcardClass13 = stack0.getClass();
        boolean boolean14 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        boolean boolean2 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        boolean boolean6 = stack5.isEmpty();
        boolean boolean7 = stack5.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        boolean boolean9 = stack8.isEmpty();
        stack8.push((java.lang.Object) (short) 10);
        stack5.push((java.lang.Object) stack8);
        boolean boolean13 = stack5.isEmpty();
        java.lang.Object obj14 = stack5.last();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        stack0.push((java.lang.Object) wildcardClass15);
        stack0.clear();
        boolean boolean18 = stack0.isEmpty();
        int int19 = stack0.size();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        int int17 = stack0.size();
        boolean boolean18 = stack0.isEmpty();
        java.lang.Object obj19 = stack0.last();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Class<?> wildcardClass22 = stack20.getClass();
        java.lang.Class<?> wildcardClass23 = stack20.getClass();
        boolean boolean24 = stack20.isFull();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Object obj27 = null;
        stack25.push(obj27);
        stack25.pop();
        int int30 = stack25.size();
        stack25.clear();
        stack25.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass34 = stack25.getClass();
        stack20.push((java.lang.Object) stack25);
        stack25.pop();
        int int37 = stack25.size();
        boolean boolean38 = stack25.isEmpty();
        boolean boolean39 = stack25.isEmpty();
        java.lang.Class<?> wildcardClass40 = stack25.getClass();
        stack0.push((java.lang.Object) wildcardClass40);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        java.lang.Object obj18 = stack0.last();
        java.lang.Object obj19 = stack0.last();
        java.lang.Class<?> wildcardClass20 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Class<?> wildcardClass23 = stack21.getClass();
        java.lang.Class<?> wildcardClass24 = stack21.getClass();
        stack21.push((java.lang.Object) 10L);
        boolean boolean27 = stack21.isFull();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass29 = stack28.getClass();
        int int30 = stack28.size();
        stack21.push((java.lang.Object) int30);
        boolean boolean32 = stack21.isFull();
        jbhembise.testauto.example3.Stack stack33 = new jbhembise.testauto.example3.Stack();
        int int34 = stack33.size();
        java.lang.Class<?> wildcardClass35 = stack33.getClass();
        java.lang.Class<?> wildcardClass36 = stack33.getClass();
        java.lang.Class<?> wildcardClass37 = stack33.getClass();
        stack33.clear();
        stack33.clear();
        jbhembise.testauto.example3.Stack stack40 = new jbhembise.testauto.example3.Stack();
        int int41 = stack40.size();
        java.lang.Object obj42 = null;
        stack40.push(obj42);
        stack40.pop();
        int int45 = stack40.size();
        stack40.clear();
        stack40.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass49 = stack40.getClass();
        stack33.push((java.lang.Object) wildcardClass49);
        jbhembise.testauto.example3.Stack stack51 = new jbhembise.testauto.example3.Stack();
        int int52 = stack51.size();
        stack51.clear();
        stack51.push((java.lang.Object) true);
        boolean boolean56 = stack51.isEmpty();
        stack51.pop();
        stack33.push((java.lang.Object) stack51);
        stack21.push((java.lang.Object) stack33);
        jbhembise.testauto.example3.Stack stack60 = new jbhembise.testauto.example3.Stack();
        int int61 = stack60.size();
        stack60.clear();
        boolean boolean63 = stack60.isFull();
        stack60.clear();
        stack60.clear();
        jbhembise.testauto.example3.Stack stack66 = new jbhembise.testauto.example3.Stack();
        int int67 = stack66.size();
        stack66.clear();
        stack66.push((java.lang.Object) true);
        boolean boolean71 = stack66.isEmpty();
        int int72 = stack66.size();
        int int73 = stack66.size();
        stack60.push((java.lang.Object) stack66);
        int int75 = stack60.size();
        jbhembise.testauto.example3.Stack stack76 = new jbhembise.testauto.example3.Stack();
        int int77 = stack76.size();
        stack76.clear();
        stack76.push((java.lang.Object) true);
        boolean boolean81 = stack76.isEmpty();
        stack76.clear();
        boolean boolean83 = stack76.isEmpty();
        jbhembise.testauto.example3.Stack stack84 = new jbhembise.testauto.example3.Stack();
        int int85 = stack84.size();
        java.lang.Class<?> wildcardClass86 = stack84.getClass();
        java.lang.Class<?> wildcardClass87 = stack84.getClass();
        stack84.push((java.lang.Object) 10L);
        boolean boolean90 = stack84.isFull();
        stack76.push((java.lang.Object) stack84);
        java.lang.Object obj92 = stack76.last();
        stack60.push((java.lang.Object) stack76);
        stack33.push((java.lang.Object) stack60);
        stack0.push((java.lang.Object) stack33);
        boolean boolean96 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        java.lang.Object obj18 = stack0.last();
        int int19 = stack0.size();
        java.lang.Class<?> wildcardClass20 = stack0.getClass();
        java.lang.Object obj21 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        java.lang.Object obj5 = stack0.last();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        boolean boolean9 = stack6.isFull();
        stack6.clear();
        stack6.clear();
        stack0.push((java.lang.Object) stack6);
        stack0.pop();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        stack14.push((java.lang.Object) "hi!");
        stack0.push((java.lang.Object) stack14);
        stack14.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + true + "'", obj5.equals(true));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass27 = stack18.getClass();
        boolean boolean28 = stack18.isFull();
        stack18.clear();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass31 = stack30.getClass();
        int int32 = stack30.size();
        stack30.push((java.lang.Object) (byte) 10);
        stack18.push((java.lang.Object) stack30);
        stack18.clear();
        stack5.push((java.lang.Object) stack18);
        boolean boolean38 = stack5.isEmpty();
        java.lang.Object obj39 = stack5.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        java.lang.Object obj18 = stack0.last();
        java.lang.Object obj19 = stack0.last();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        stack20.clear();
        stack20.push((java.lang.Object) true);
        java.lang.Class<?> wildcardClass25 = stack20.getClass();
        stack0.push((java.lang.Object) wildcardClass25);
        boolean boolean27 = stack0.isEmpty();
        java.lang.Object obj28 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(obj28);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Object obj5 = null;
        stack3.push(obj5);
        stack3.pop();
        int int8 = stack3.size();
        stack3.clear();
        stack3.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass12 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        stack3.pop();
        int int15 = stack3.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        stack0.pop();
        stack0.clear();
        stack0.push((java.lang.Object) (-1));
        java.lang.Object obj10 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (-1) + "'", obj10.equals((-1)));
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        boolean boolean14 = stack11.isEmpty();
        stack0.push((java.lang.Object) boolean14);
        stack0.pop();
        java.lang.Object obj17 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + obj17 + "' != '" + 10 + "'", obj17.equals(10));
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        int int6 = stack0.size();
        stack0.push((java.lang.Object) 1.0f);
        boolean boolean9 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        boolean boolean11 = stack10.isEmpty();
        boolean boolean12 = stack10.isEmpty();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.push((java.lang.Object) (short) 10);
        stack10.push((java.lang.Object) stack13);
        boolean boolean18 = stack10.isEmpty();
        java.lang.Object obj19 = stack10.last();
        boolean boolean20 = stack10.isFull();
        boolean boolean21 = stack10.isEmpty();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        int int23 = stack22.size();
        java.lang.Object obj24 = null;
        stack22.push(obj24);
        stack22.pop();
        int int27 = stack22.size();
        stack22.clear();
        stack22.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass31 = stack22.getClass();
        boolean boolean32 = stack22.isFull();
        stack22.clear();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass35 = stack34.getClass();
        int int36 = stack34.size();
        stack34.push((java.lang.Object) (byte) 10);
        stack22.push((java.lang.Object) stack34);
        stack22.clear();
        stack10.push((java.lang.Object) stack22);
        java.lang.Class<?> wildcardClass42 = stack10.getClass();
        stack0.push((java.lang.Object) stack10);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        boolean boolean4 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        int int6 = stack0.size();
        stack0.clear();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        stack10.clear();
        boolean boolean13 = stack10.isFull();
        stack10.clear();
        boolean boolean15 = stack10.isFull();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Class<?> wildcardClass18 = stack16.getClass();
        java.lang.Class<?> wildcardClass19 = stack16.getClass();
        stack10.push((java.lang.Object) wildcardClass19);
        boolean boolean21 = stack10.isEmpty();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        int int23 = stack22.size();
        java.lang.Class<?> wildcardClass24 = stack22.getClass();
        java.lang.Class<?> wildcardClass25 = stack22.getClass();
        boolean boolean26 = stack22.isFull();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Object obj29 = null;
        stack27.push(obj29);
        stack27.pop();
        int int32 = stack27.size();
        stack27.clear();
        stack27.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass36 = stack27.getClass();
        stack22.push((java.lang.Object) stack27);
        java.lang.Object obj38 = stack27.last();
        stack27.pop();
        jbhembise.testauto.example3.Stack stack40 = new jbhembise.testauto.example3.Stack();
        int int41 = stack40.size();
        stack40.clear();
        stack40.push((java.lang.Object) true);
        boolean boolean45 = stack40.isEmpty();
        stack40.clear();
        boolean boolean47 = stack40.isEmpty();
        stack27.push((java.lang.Object) boolean47);
        stack27.pop();
        boolean boolean50 = stack27.isEmpty();
        stack10.push((java.lang.Object) stack27);
        stack0.push((java.lang.Object) stack27);
        boolean boolean53 = stack27.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + 10 + "'", obj38.equals(10));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Object obj5 = null;
        stack3.push(obj5);
        stack3.pop();
        int int8 = stack3.size();
        stack3.clear();
        stack3.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass12 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        int int15 = stack14.size();
        java.lang.Class<?> wildcardClass16 = stack14.getClass();
        java.lang.Class<?> wildcardClass17 = stack14.getClass();
        boolean boolean18 = stack14.isFull();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        java.lang.Object obj21 = null;
        stack19.push(obj21);
        stack19.pop();
        int int24 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass28 = stack19.getClass();
        stack14.push((java.lang.Object) stack19);
        boolean boolean30 = stack19.isEmpty();
        int int31 = stack19.size();
        boolean boolean32 = stack19.isEmpty();
        java.lang.Class<?> wildcardClass33 = stack19.getClass();
        stack3.push((java.lang.Object) wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        boolean boolean10 = stack9.isEmpty();
        stack9.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass14 = stack13.getClass();
        int int15 = stack13.size();
        stack9.push((java.lang.Object) int15);
        boolean boolean17 = stack9.isEmpty();
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        stack0.push((java.lang.Object) stack9);
        java.lang.Class<?> wildcardClass20 = stack9.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        boolean boolean3 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        stack6.push((java.lang.Object) true);
        boolean boolean11 = stack6.isEmpty();
        boolean boolean12 = stack6.isFull();
        stack6.pop();
        boolean boolean14 = stack6.isFull();
        int int15 = stack6.size();
        stack0.push((java.lang.Object) stack6);
        boolean boolean17 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        int int19 = stack0.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        boolean boolean12 = stack0.isFull();
        java.lang.Class<?> wildcardClass13 = stack0.getClass();
        java.lang.Class<?> wildcardClass14 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        boolean boolean12 = stack0.isFull();
        boolean boolean13 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        stack6.push((java.lang.Object) true);
        boolean boolean11 = stack6.isEmpty();
        int int12 = stack6.size();
        int int13 = stack6.size();
        stack0.push((java.lang.Object) stack6);
        java.lang.Class<?> wildcardClass15 = stack0.getClass();
        java.lang.Object obj16 = stack0.last();
        boolean boolean17 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        java.lang.Object obj5 = stack0.last();
        java.lang.Object obj6 = stack0.last();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        boolean boolean9 = stack8.isEmpty();
        stack8.push((java.lang.Object) (short) 10);
        boolean boolean12 = stack8.isEmpty();
        stack8.clear();
        java.lang.Class<?> wildcardClass14 = stack8.getClass();
        boolean boolean15 = stack8.isEmpty();
        boolean boolean16 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + true + "'", obj5.equals(true));
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + true + "'", obj6.equals(true));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass19 = stack18.getClass();
        int int20 = stack18.size();
        stack18.push((java.lang.Object) (byte) 10);
        java.lang.Object obj23 = stack18.last();
        boolean boolean24 = stack18.isFull();
        stack0.push((java.lang.Object) stack18);
        boolean boolean26 = stack18.isFull();
        stack18.pop();
        int int28 = stack18.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (byte) 10 + "'", obj23.equals((byte) 10));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        int int6 = stack0.size();
        java.lang.Object obj7 = stack0.last();
        int int8 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + 10L + "'", obj7.equals(10L));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) "hi!");
        int int4 = stack0.size();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Class<?> wildcardClass7 = stack5.getClass();
        java.lang.Class<?> wildcardClass8 = stack5.getClass();
        stack5.push((java.lang.Object) 10L);
        stack5.pop();
        boolean boolean12 = stack5.isFull();
        stack0.push((java.lang.Object) stack5);
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        int int15 = stack14.size();
        stack14.clear();
        stack14.push((java.lang.Object) true);
        boolean boolean19 = stack14.isEmpty();
        int int20 = stack14.size();
        int int21 = stack14.size();
        stack0.push((java.lang.Object) int21);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        int int12 = stack0.size();
        boolean boolean13 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        int int15 = stack14.size();
        stack14.clear();
        boolean boolean17 = stack14.isFull();
        stack14.clear();
        stack14.clear();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        stack20.clear();
        stack20.push((java.lang.Object) true);
        boolean boolean25 = stack20.isEmpty();
        int int26 = stack20.size();
        int int27 = stack20.size();
        stack14.push((java.lang.Object) stack20);
        int int29 = stack20.size();
        stack20.pop();
        stack0.push((java.lang.Object) stack20);
        boolean boolean32 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        java.lang.Object obj18 = stack0.last();
        java.lang.Object obj19 = stack0.last();
        java.lang.Class<?> wildcardClass20 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Class<?> wildcardClass23 = stack21.getClass();
        java.lang.Class<?> wildcardClass24 = stack21.getClass();
        stack21.push((java.lang.Object) 10L);
        boolean boolean27 = stack21.isFull();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass29 = stack28.getClass();
        int int30 = stack28.size();
        stack21.push((java.lang.Object) int30);
        boolean boolean32 = stack21.isFull();
        jbhembise.testauto.example3.Stack stack33 = new jbhembise.testauto.example3.Stack();
        int int34 = stack33.size();
        java.lang.Class<?> wildcardClass35 = stack33.getClass();
        java.lang.Class<?> wildcardClass36 = stack33.getClass();
        java.lang.Class<?> wildcardClass37 = stack33.getClass();
        stack33.clear();
        stack33.clear();
        jbhembise.testauto.example3.Stack stack40 = new jbhembise.testauto.example3.Stack();
        int int41 = stack40.size();
        java.lang.Object obj42 = null;
        stack40.push(obj42);
        stack40.pop();
        int int45 = stack40.size();
        stack40.clear();
        stack40.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass49 = stack40.getClass();
        stack33.push((java.lang.Object) wildcardClass49);
        jbhembise.testauto.example3.Stack stack51 = new jbhembise.testauto.example3.Stack();
        int int52 = stack51.size();
        stack51.clear();
        stack51.push((java.lang.Object) true);
        boolean boolean56 = stack51.isEmpty();
        stack51.pop();
        stack33.push((java.lang.Object) stack51);
        stack21.push((java.lang.Object) stack33);
        jbhembise.testauto.example3.Stack stack60 = new jbhembise.testauto.example3.Stack();
        int int61 = stack60.size();
        stack60.clear();
        boolean boolean63 = stack60.isFull();
        stack60.clear();
        stack60.clear();
        jbhembise.testauto.example3.Stack stack66 = new jbhembise.testauto.example3.Stack();
        int int67 = stack66.size();
        stack66.clear();
        stack66.push((java.lang.Object) true);
        boolean boolean71 = stack66.isEmpty();
        int int72 = stack66.size();
        int int73 = stack66.size();
        stack60.push((java.lang.Object) stack66);
        int int75 = stack60.size();
        jbhembise.testauto.example3.Stack stack76 = new jbhembise.testauto.example3.Stack();
        int int77 = stack76.size();
        stack76.clear();
        stack76.push((java.lang.Object) true);
        boolean boolean81 = stack76.isEmpty();
        stack76.clear();
        boolean boolean83 = stack76.isEmpty();
        jbhembise.testauto.example3.Stack stack84 = new jbhembise.testauto.example3.Stack();
        int int85 = stack84.size();
        java.lang.Class<?> wildcardClass86 = stack84.getClass();
        java.lang.Class<?> wildcardClass87 = stack84.getClass();
        stack84.push((java.lang.Object) 10L);
        boolean boolean90 = stack84.isFull();
        stack76.push((java.lang.Object) stack84);
        java.lang.Object obj92 = stack76.last();
        stack60.push((java.lang.Object) stack76);
        stack33.push((java.lang.Object) stack60);
        stack0.push((java.lang.Object) stack33);
        int int96 = stack33.size();
        stack33.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 3 + "'", int96 == 3);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack0.size();
        int int9 = stack0.size();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isFull();
        boolean boolean11 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        boolean boolean16 = stack12.isFull();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        int int18 = stack17.size();
        java.lang.Object obj19 = null;
        stack17.push(obj19);
        stack17.pop();
        int int22 = stack17.size();
        stack17.clear();
        stack17.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass26 = stack17.getClass();
        stack12.push((java.lang.Object) stack17);
        stack17.pop();
        int int29 = stack17.size();
        boolean boolean30 = stack17.isEmpty();
        stack17.clear();
        stack0.push((java.lang.Object) stack17);
        stack17.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        boolean boolean18 = stack0.isFull();
        java.lang.Class<?> wildcardClass19 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isEmpty();
        boolean boolean17 = stack0.isEmpty();
        stack0.pop();
        boolean boolean19 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Class<?> wildcardClass5 = stack3.getClass();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        java.lang.Class<?> wildcardClass7 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        boolean boolean9 = stack3.isFull();
        stack3.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Object obj13 = null;
        stack11.push(obj13);
        stack11.pop();
        int int16 = stack11.size();
        stack11.clear();
        boolean boolean18 = stack11.isEmpty();
        boolean boolean19 = stack11.isEmpty();
        java.lang.Class<?> wildcardClass20 = stack11.getClass();
        int int21 = stack11.size();
        java.lang.Class<?> wildcardClass22 = stack11.getClass();
        stack3.push((java.lang.Object) stack11);
        boolean boolean24 = stack11.isEmpty();
        int int25 = stack11.size();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        int int19 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        java.lang.Class<?> wildcardClass18 = stack12.getClass();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        boolean boolean20 = stack19.isEmpty();
        stack19.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass24 = stack23.getClass();
        int int25 = stack23.size();
        stack19.push((java.lang.Object) int25);
        int int27 = stack19.size();
        boolean boolean28 = stack19.isFull();
        stack12.push((java.lang.Object) boolean28);
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass39 = stack30.getClass();
        boolean boolean40 = stack30.isEmpty();
        stack30.clear();
        jbhembise.testauto.example3.Stack stack42 = new jbhembise.testauto.example3.Stack();
        int int43 = stack42.size();
        java.lang.Class<?> wildcardClass44 = stack42.getClass();
        java.lang.Class<?> wildcardClass45 = stack42.getClass();
        java.lang.Class<?> wildcardClass46 = stack42.getClass();
        stack30.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stack30.last();
        stack30.clear();
        stack12.push((java.lang.Object) stack30);
        jbhembise.testauto.example3.Stack stack51 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass52 = stack51.getClass();
        int int53 = stack51.size();
        stack51.push((java.lang.Object) (byte) 10);
        int int56 = stack51.size();
        java.lang.Class<?> wildcardClass57 = stack51.getClass();
        stack51.pop();
        jbhembise.testauto.example3.Stack stack59 = new jbhembise.testauto.example3.Stack();
        int int60 = stack59.size();
        java.lang.Class<?> wildcardClass61 = stack59.getClass();
        java.lang.Class<?> wildcardClass62 = stack59.getClass();
        boolean boolean63 = stack59.isFull();
        boolean boolean64 = stack59.isFull();
        stack51.push((java.lang.Object) stack59);
        stack30.push((java.lang.Object) stack51);
        stack51.pop();
        boolean boolean68 = stack51.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        boolean boolean25 = stack18.isFull();
        java.lang.Class<?> wildcardClass26 = stack18.getClass();
        stack12.push((java.lang.Object) stack18);
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        stack28.clear();
        stack28.push((java.lang.Object) true);
        boolean boolean33 = stack28.isEmpty();
        stack28.clear();
        boolean boolean35 = stack28.isEmpty();
        jbhembise.testauto.example3.Stack stack36 = new jbhembise.testauto.example3.Stack();
        int int37 = stack36.size();
        java.lang.Class<?> wildcardClass38 = stack36.getClass();
        java.lang.Class<?> wildcardClass39 = stack36.getClass();
        stack36.push((java.lang.Object) 10L);
        boolean boolean42 = stack36.isFull();
        stack28.push((java.lang.Object) stack36);
        java.lang.Object obj44 = stack28.last();
        stack28.clear();
        stack12.push((java.lang.Object) stack28);
        java.lang.Object obj47 = stack12.last();
        java.lang.Class<?> wildcardClass48 = stack12.getClass();
        jbhembise.testauto.example3.Stack stack49 = new jbhembise.testauto.example3.Stack();
        int int50 = stack49.size();
        java.lang.Class<?> wildcardClass51 = stack49.getClass();
        java.lang.Class<?> wildcardClass52 = stack49.getClass();
        stack49.push((java.lang.Object) 10L);
        boolean boolean55 = stack49.isFull();
        java.lang.Object obj56 = stack49.last();
        boolean boolean57 = stack49.isFull();
        java.lang.Object obj58 = stack49.last();
        stack12.push(obj58);
        int int60 = stack12.size();
        stack12.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + 10L + "'", obj56.equals(10L));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + obj58 + "' != '" + 10L + "'", obj58.equals(10L));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 4 + "'", int60 == 4);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        java.lang.Class<?> wildcardClass15 = stack11.getClass();
        stack11.clear();
        java.lang.Class<?> wildcardClass17 = stack11.getClass();
        stack0.push((java.lang.Object) stack11);
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        stack19.clear();
        boolean boolean22 = stack19.isFull();
        stack19.clear();
        boolean boolean24 = stack19.isFull();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Class<?> wildcardClass27 = stack25.getClass();
        java.lang.Class<?> wildcardClass28 = stack25.getClass();
        stack19.push((java.lang.Object) wildcardClass28);
        stack0.push((java.lang.Object) wildcardClass28);
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        int int32 = stack31.size();
        stack31.clear();
        stack31.push((java.lang.Object) true);
        boolean boolean36 = stack31.isEmpty();
        stack31.clear();
        boolean boolean38 = stack31.isEmpty();
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        java.lang.Class<?> wildcardClass41 = stack39.getClass();
        java.lang.Class<?> wildcardClass42 = stack39.getClass();
        stack39.push((java.lang.Object) 10L);
        boolean boolean45 = stack39.isFull();
        stack31.push((java.lang.Object) stack39);
        jbhembise.testauto.example3.Stack stack47 = new jbhembise.testauto.example3.Stack();
        int int48 = stack47.size();
        java.lang.Object obj49 = null;
        stack47.push(obj49);
        stack47.pop();
        int int52 = stack47.size();
        stack47.clear();
        stack47.push((java.lang.Object) 10);
        boolean boolean56 = stack47.isEmpty();
        stack47.pop();
        jbhembise.testauto.example3.Stack stack58 = new jbhembise.testauto.example3.Stack();
        int int59 = stack58.size();
        java.lang.Class<?> wildcardClass60 = stack58.getClass();
        java.lang.Class<?> wildcardClass61 = stack58.getClass();
        java.lang.Class<?> wildcardClass62 = stack58.getClass();
        stack58.clear();
        stack58.clear();
        jbhembise.testauto.example3.Stack stack65 = new jbhembise.testauto.example3.Stack();
        int int66 = stack65.size();
        java.lang.Object obj67 = null;
        stack65.push(obj67);
        stack65.pop();
        int int70 = stack65.size();
        stack65.clear();
        stack65.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass74 = stack65.getClass();
        stack58.push((java.lang.Object) wildcardClass74);
        jbhembise.testauto.example3.Stack stack76 = new jbhembise.testauto.example3.Stack();
        int int77 = stack76.size();
        stack76.clear();
        stack76.push((java.lang.Object) true);
        boolean boolean81 = stack76.isEmpty();
        stack76.pop();
        stack58.push((java.lang.Object) stack76);
        stack47.push((java.lang.Object) stack76);
        stack31.push((java.lang.Object) stack76);
        int int86 = stack31.size();
        stack0.push((java.lang.Object) int86);
        java.lang.Class<?> wildcardClass88 = stack0.getClass();
        java.lang.Object obj89 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 2 + "'", int86 == 2);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + obj89 + "' != '" + 2 + "'", obj89.equals(2));
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        int int5 = stack4.size();
        java.lang.Class<?> wildcardClass6 = stack4.getClass();
        java.lang.Class<?> wildcardClass7 = stack4.getClass();
        boolean boolean8 = stack4.isFull();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Object obj11 = null;
        stack9.push(obj11);
        stack9.pop();
        int int14 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        stack4.push((java.lang.Object) stack9);
        boolean boolean20 = stack4.isFull();
        stack4.clear();
        boolean boolean22 = stack4.isFull();
        stack0.push((java.lang.Object) stack4);
        java.lang.Class<?> wildcardClass24 = stack4.getClass();
        java.lang.Class<?> wildcardClass25 = stack4.getClass();
        java.lang.Class<?> wildcardClass26 = stack4.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.push((java.lang.Object) (byte) 100);
        boolean boolean14 = stack0.isEmpty();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        stack6.push((java.lang.Object) true);
        boolean boolean11 = stack6.isEmpty();
        int int12 = stack6.size();
        int int13 = stack6.size();
        stack0.push((java.lang.Object) stack6);
        java.lang.Class<?> wildcardClass15 = stack6.getClass();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Object obj25 = stack16.last();
        stack16.clear();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Class<?> wildcardClass29 = stack27.getClass();
        java.lang.Class<?> wildcardClass30 = stack27.getClass();
        java.lang.Class<?> wildcardClass31 = stack27.getClass();
        stack27.clear();
        java.lang.Class<?> wildcardClass33 = stack27.getClass();
        stack16.push((java.lang.Object) stack27);
        stack6.push((java.lang.Object) stack27);
        java.lang.Object obj36 = stack6.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + 10 + "'", obj25.equals(10));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        boolean boolean14 = stack11.isEmpty();
        stack0.push((java.lang.Object) boolean14);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) true);
        boolean boolean21 = stack16.isEmpty();
        stack16.pop();
        int int23 = stack16.size();
        stack0.push((java.lang.Object) int23);
        java.lang.Object obj25 = stack0.last();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Class<?> wildcardClass29 = stack27.getClass();
        java.lang.Class<?> wildcardClass30 = stack27.getClass();
        java.lang.Class<?> wildcardClass31 = stack27.getClass();
        stack27.clear();
        stack27.clear();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        int int35 = stack34.size();
        java.lang.Object obj36 = null;
        stack34.push(obj36);
        stack34.pop();
        int int39 = stack34.size();
        stack34.clear();
        stack34.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass43 = stack34.getClass();
        stack27.push((java.lang.Object) wildcardClass43);
        boolean boolean45 = stack27.isFull();
        boolean boolean46 = stack27.isFull();
        jbhembise.testauto.example3.Stack stack47 = new jbhembise.testauto.example3.Stack();
        int int48 = stack47.size();
        java.lang.Object obj49 = null;
        stack47.push(obj49);
        stack47.pop();
        int int52 = stack47.size();
        stack47.clear();
        stack47.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass56 = stack47.getClass();
        boolean boolean57 = stack47.isEmpty();
        stack47.clear();
        boolean boolean59 = stack47.isFull();
        java.lang.Class<?> wildcardClass60 = stack47.getClass();
        stack27.push((java.lang.Object) stack47);
        stack0.push((java.lang.Object) stack27);
        boolean boolean63 = stack27.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + 0 + "'", obj25.equals(0));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        boolean boolean5 = stack0.isFull();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        java.lang.Class<?> wildcardClass12 = stack8.getClass();
        boolean boolean13 = stack8.isEmpty();
        java.lang.Class<?> wildcardClass14 = stack8.getClass();
        stack0.push((java.lang.Object) stack8);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack8.push((java.lang.Object) stack16);
        stack8.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isFull();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) true);
        boolean boolean14 = stack9.isEmpty();
        boolean boolean15 = stack9.isFull();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) int16);
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        boolean boolean19 = stack0.isEmpty();
        stack0.pop();
        boolean boolean21 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        int int23 = stack22.size();
        java.lang.Class<?> wildcardClass24 = stack22.getClass();
        java.lang.Class<?> wildcardClass25 = stack22.getClass();
        stack22.push((java.lang.Object) 10L);
        boolean boolean28 = stack22.isFull();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass30 = stack29.getClass();
        int int31 = stack29.size();
        stack22.push((java.lang.Object) int31);
        boolean boolean33 = stack22.isFull();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        int int35 = stack34.size();
        java.lang.Class<?> wildcardClass36 = stack34.getClass();
        java.lang.Class<?> wildcardClass37 = stack34.getClass();
        java.lang.Class<?> wildcardClass38 = stack34.getClass();
        stack34.clear();
        stack34.clear();
        jbhembise.testauto.example3.Stack stack41 = new jbhembise.testauto.example3.Stack();
        int int42 = stack41.size();
        java.lang.Object obj43 = null;
        stack41.push(obj43);
        stack41.pop();
        int int46 = stack41.size();
        stack41.clear();
        stack41.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass50 = stack41.getClass();
        stack34.push((java.lang.Object) wildcardClass50);
        jbhembise.testauto.example3.Stack stack52 = new jbhembise.testauto.example3.Stack();
        int int53 = stack52.size();
        stack52.clear();
        stack52.push((java.lang.Object) true);
        boolean boolean57 = stack52.isEmpty();
        stack52.pop();
        stack34.push((java.lang.Object) stack52);
        stack22.push((java.lang.Object) stack34);
        jbhembise.testauto.example3.Stack stack61 = new jbhembise.testauto.example3.Stack();
        int int62 = stack61.size();
        java.lang.Class<?> wildcardClass63 = stack61.getClass();
        java.lang.Class<?> wildcardClass64 = stack61.getClass();
        stack61.push((java.lang.Object) 10L);
        boolean boolean67 = stack61.isFull();
        jbhembise.testauto.example3.Stack stack68 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass69 = stack68.getClass();
        int int70 = stack68.size();
        stack61.push((java.lang.Object) int70);
        int int72 = stack61.size();
        java.lang.Class<?> wildcardClass73 = stack61.getClass();
        stack22.push((java.lang.Object) stack61);
        java.lang.Object obj75 = stack61.last();
        stack0.push((java.lang.Object) stack61);
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + obj75 + "' != '" + 0 + "'", obj75.equals(0));
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass27 = stack18.getClass();
        boolean boolean28 = stack18.isEmpty();
        stack18.clear();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Class<?> wildcardClass32 = stack30.getClass();
        java.lang.Class<?> wildcardClass33 = stack30.getClass();
        java.lang.Class<?> wildcardClass34 = stack30.getClass();
        stack18.push((java.lang.Object) wildcardClass34);
        stack0.push((java.lang.Object) wildcardClass34);
        int int37 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        java.lang.Class<?> wildcardClass9 = stack3.getClass();
        java.lang.Object obj10 = stack3.last();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass12 = stack11.getClass();
        boolean boolean13 = stack11.isEmpty();
        stack11.clear();
        stack11.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        boolean boolean17 = stack16.isEmpty();
        boolean boolean18 = stack16.isEmpty();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        boolean boolean20 = stack19.isEmpty();
        stack19.push((java.lang.Object) (short) 10);
        stack16.push((java.lang.Object) stack19);
        boolean boolean24 = stack16.isEmpty();
        java.lang.Object obj25 = stack16.last();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        stack11.push((java.lang.Object) wildcardClass26);
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Class<?> wildcardClass30 = stack28.getClass();
        java.lang.Class<?> wildcardClass31 = stack28.getClass();
        java.lang.Class<?> wildcardClass32 = stack28.getClass();
        stack28.clear();
        stack28.clear();
        jbhembise.testauto.example3.Stack stack35 = new jbhembise.testauto.example3.Stack();
        int int36 = stack35.size();
        java.lang.Object obj37 = null;
        stack35.push(obj37);
        stack35.pop();
        int int40 = stack35.size();
        stack35.clear();
        stack35.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass44 = stack35.getClass();
        stack28.push((java.lang.Object) wildcardClass44);
        stack11.push((java.lang.Object) stack28);
        stack3.push((java.lang.Object) stack11);
        stack3.pop();
        stack3.pop();
        java.lang.Class<?> wildcardClass50 = stack3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 10 + "'", obj10.equals((short) 10));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        stack0.clear();
        int int4 = stack0.size();
        boolean boolean5 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        java.lang.Object obj7 = stack0.last();
        stack0.clear();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + 10L + "'", obj7.equals(10L));
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isFull();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) true);
        boolean boolean14 = stack9.isEmpty();
        boolean boolean15 = stack9.isFull();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) int16);
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) true);
        boolean boolean24 = stack19.isEmpty();
        stack19.clear();
        boolean boolean26 = stack19.isEmpty();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Class<?> wildcardClass29 = stack27.getClass();
        java.lang.Class<?> wildcardClass30 = stack27.getClass();
        stack27.push((java.lang.Object) 10L);
        boolean boolean33 = stack27.isFull();
        stack19.push((java.lang.Object) stack27);
        java.lang.Object obj35 = stack19.last();
        stack19.clear();
        boolean boolean37 = stack19.isFull();
        stack0.push((java.lang.Object) boolean37);
        boolean boolean39 = stack0.isEmpty();
        java.lang.Object obj40 = stack0.last();
        boolean boolean41 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + obj40 + "' != '" + false + "'", obj40.equals(false));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        int int9 = stack0.size();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        stack12.push((java.lang.Object) 10L);
        boolean boolean18 = stack12.isFull();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass20 = stack19.getClass();
        int int21 = stack19.size();
        stack12.push((java.lang.Object) int21);
        int int23 = stack12.size();
        java.lang.Class<?> wildcardClass24 = stack12.getClass();
        stack12.pop();
        stack0.push((java.lang.Object) stack12);
        stack12.clear();
        int int28 = stack12.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass16 = stack15.getClass();
        int int17 = stack15.size();
        stack8.push((java.lang.Object) int17);
        boolean boolean19 = stack8.isFull();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Class<?> wildcardClass22 = stack20.getClass();
        java.lang.Class<?> wildcardClass23 = stack20.getClass();
        java.lang.Class<?> wildcardClass24 = stack20.getClass();
        stack20.clear();
        stack20.clear();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Object obj29 = null;
        stack27.push(obj29);
        stack27.pop();
        int int32 = stack27.size();
        stack27.clear();
        stack27.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass36 = stack27.getClass();
        stack20.push((java.lang.Object) wildcardClass36);
        jbhembise.testauto.example3.Stack stack38 = new jbhembise.testauto.example3.Stack();
        int int39 = stack38.size();
        stack38.clear();
        stack38.push((java.lang.Object) true);
        boolean boolean43 = stack38.isEmpty();
        stack38.pop();
        stack20.push((java.lang.Object) stack38);
        stack8.push((java.lang.Object) stack20);
        stack0.push((java.lang.Object) stack20);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        boolean boolean19 = stack5.isEmpty();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        boolean boolean21 = stack20.isEmpty();
        stack20.clear();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Object obj25 = null;
        stack23.push(obj25);
        stack23.pop();
        int int28 = stack23.size();
        stack23.clear();
        stack23.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass32 = stack23.getClass();
        stack20.push((java.lang.Object) stack23);
        stack23.clear();
        stack5.push((java.lang.Object) stack23);
        stack5.pop();
        stack5.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        boolean boolean17 = stack0.isEmpty();
        java.lang.Object obj18 = stack0.last();
        stack0.clear();
        boolean boolean20 = stack0.isFull();
        int int21 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        int int11 = stack0.size();
        boolean boolean12 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack3.isEmpty();
        int int9 = stack3.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass27 = stack18.getClass();
        boolean boolean28 = stack18.isFull();
        stack18.clear();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass31 = stack30.getClass();
        int int32 = stack30.size();
        stack30.push((java.lang.Object) (byte) 10);
        stack18.push((java.lang.Object) stack30);
        stack18.clear();
        stack5.push((java.lang.Object) stack18);
        boolean boolean38 = stack5.isFull();
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        java.lang.Class<?> wildcardClass41 = stack39.getClass();
        java.lang.Class<?> wildcardClass42 = stack39.getClass();
        boolean boolean43 = stack39.isFull();
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        int int45 = stack44.size();
        java.lang.Object obj46 = null;
        stack44.push(obj46);
        stack44.pop();
        int int49 = stack44.size();
        stack44.clear();
        stack44.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass53 = stack44.getClass();
        stack39.push((java.lang.Object) stack44);
        java.lang.Object obj55 = stack44.last();
        java.lang.Object obj56 = stack44.last();
        stack5.push((java.lang.Object) stack44);
        boolean boolean58 = stack5.isFull();
        java.lang.Class<?> wildcardClass59 = stack5.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + 10 + "'", obj55.equals(10));
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + 10 + "'", obj56.equals(10));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isFull();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        boolean boolean11 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass12 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        stack0.clear();
        int int6 = stack0.size();
        int int7 = stack0.size();
        int int8 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isFull();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) true);
        boolean boolean14 = stack9.isEmpty();
        boolean boolean15 = stack9.isFull();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) int16);
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        int int19 = stack0.size();
        int int20 = stack0.size();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        stack11.clear();
        stack11.push((java.lang.Object) true);
        boolean boolean16 = stack11.isEmpty();
        stack11.clear();
        boolean boolean18 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        java.lang.Class<?> wildcardClass21 = stack19.getClass();
        java.lang.Class<?> wildcardClass22 = stack19.getClass();
        stack19.push((java.lang.Object) 10L);
        boolean boolean25 = stack19.isFull();
        stack11.push((java.lang.Object) stack19);
        java.lang.Object obj27 = stack11.last();
        stack11.clear();
        stack11.clear();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass39 = stack30.getClass();
        boolean boolean40 = stack30.isEmpty();
        stack30.clear();
        stack30.clear();
        jbhembise.testauto.example3.Stack stack43 = new jbhembise.testauto.example3.Stack();
        boolean boolean44 = stack43.isEmpty();
        stack43.clear();
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        int int47 = stack46.size();
        java.lang.Object obj48 = null;
        stack46.push(obj48);
        stack46.pop();
        int int51 = stack46.size();
        stack46.clear();
        stack46.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass55 = stack46.getClass();
        stack43.push((java.lang.Object) stack46);
        stack30.push((java.lang.Object) stack43);
        int int58 = stack43.size();
        stack43.clear();
        stack11.push((java.lang.Object) stack43);
        boolean boolean61 = stack43.isEmpty();
        stack0.push((java.lang.Object) stack43);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        boolean boolean11 = stack0.isFull();
        boolean boolean12 = stack0.isEmpty();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        boolean boolean4 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        int int6 = stack0.size();
        stack0.clear();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        stack10.clear();
        boolean boolean13 = stack10.isFull();
        stack10.clear();
        boolean boolean15 = stack10.isFull();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Class<?> wildcardClass18 = stack16.getClass();
        java.lang.Class<?> wildcardClass19 = stack16.getClass();
        stack10.push((java.lang.Object) wildcardClass19);
        boolean boolean21 = stack10.isEmpty();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        int int23 = stack22.size();
        java.lang.Class<?> wildcardClass24 = stack22.getClass();
        java.lang.Class<?> wildcardClass25 = stack22.getClass();
        boolean boolean26 = stack22.isFull();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Object obj29 = null;
        stack27.push(obj29);
        stack27.pop();
        int int32 = stack27.size();
        stack27.clear();
        stack27.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass36 = stack27.getClass();
        stack22.push((java.lang.Object) stack27);
        java.lang.Object obj38 = stack27.last();
        stack27.pop();
        jbhembise.testauto.example3.Stack stack40 = new jbhembise.testauto.example3.Stack();
        int int41 = stack40.size();
        stack40.clear();
        stack40.push((java.lang.Object) true);
        boolean boolean45 = stack40.isEmpty();
        stack40.clear();
        boolean boolean47 = stack40.isEmpty();
        stack27.push((java.lang.Object) boolean47);
        stack27.pop();
        boolean boolean50 = stack27.isEmpty();
        stack10.push((java.lang.Object) stack27);
        stack0.push((java.lang.Object) stack27);
        boolean boolean53 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + 10 + "'", obj38.equals(10));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        int int5 = stack0.size();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        stack0.pop();
        int int8 = stack0.size();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass10 = stack9.getClass();
        boolean boolean11 = stack9.isEmpty();
        stack9.clear();
        stack9.clear();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        boolean boolean16 = stack14.isEmpty();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        boolean boolean18 = stack17.isEmpty();
        stack17.push((java.lang.Object) (short) 10);
        stack14.push((java.lang.Object) stack17);
        boolean boolean22 = stack14.isEmpty();
        java.lang.Object obj23 = stack14.last();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        stack9.push((java.lang.Object) wildcardClass24);
        stack9.clear();
        boolean boolean27 = stack9.isEmpty();
        stack0.push((java.lang.Object) stack9);
        stack0.pop();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Object obj11 = null;
        stack9.push(obj11);
        stack9.pop();
        int int14 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        boolean boolean19 = stack9.isEmpty();
        stack9.clear();
        stack9.clear();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        boolean boolean23 = stack22.isEmpty();
        stack22.clear();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Object obj27 = null;
        stack25.push(obj27);
        stack25.pop();
        int int30 = stack25.size();
        stack25.clear();
        stack25.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass34 = stack25.getClass();
        stack22.push((java.lang.Object) stack25);
        stack9.push((java.lang.Object) stack22);
        stack22.pop();
        jbhembise.testauto.example3.Stack stack38 = new jbhembise.testauto.example3.Stack();
        int int39 = stack38.size();
        stack38.clear();
        stack38.push((java.lang.Object) true);
        boolean boolean43 = stack38.isEmpty();
        stack38.clear();
        boolean boolean45 = stack38.isEmpty();
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        int int47 = stack46.size();
        java.lang.Class<?> wildcardClass48 = stack46.getClass();
        java.lang.Class<?> wildcardClass49 = stack46.getClass();
        stack46.push((java.lang.Object) 10L);
        boolean boolean52 = stack46.isFull();
        stack38.push((java.lang.Object) stack46);
        stack38.push((java.lang.Object) false);
        stack38.clear();
        int int57 = stack38.size();
        stack22.push((java.lang.Object) stack38);
        stack0.push((java.lang.Object) stack38);
        boolean boolean60 = stack0.isFull();
        java.lang.Object obj61 = stack0.last();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        boolean boolean6 = stack0.isFull();
        stack0.pop();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        boolean boolean15 = stack9.isFull();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass17 = stack16.getClass();
        int int18 = stack16.size();
        stack9.push((java.lang.Object) int18);
        boolean boolean20 = stack9.isFull();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Class<?> wildcardClass23 = stack21.getClass();
        java.lang.Class<?> wildcardClass24 = stack21.getClass();
        java.lang.Class<?> wildcardClass25 = stack21.getClass();
        stack21.clear();
        stack21.clear();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        stack28.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass37 = stack28.getClass();
        stack21.push((java.lang.Object) wildcardClass37);
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        stack39.clear();
        stack39.push((java.lang.Object) true);
        boolean boolean44 = stack39.isEmpty();
        stack39.pop();
        stack21.push((java.lang.Object) stack39);
        stack9.push((java.lang.Object) stack21);
        jbhembise.testauto.example3.Stack stack48 = new jbhembise.testauto.example3.Stack();
        int int49 = stack48.size();
        java.lang.Class<?> wildcardClass50 = stack48.getClass();
        java.lang.Class<?> wildcardClass51 = stack48.getClass();
        boolean boolean52 = stack48.isFull();
        jbhembise.testauto.example3.Stack stack53 = new jbhembise.testauto.example3.Stack();
        int int54 = stack53.size();
        java.lang.Object obj55 = null;
        stack53.push(obj55);
        stack53.pop();
        int int58 = stack53.size();
        stack53.clear();
        stack53.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass62 = stack53.getClass();
        stack48.push((java.lang.Object) stack53);
        jbhembise.testauto.example3.Stack stack64 = new jbhembise.testauto.example3.Stack();
        int int65 = stack64.size();
        java.lang.Object obj66 = null;
        stack64.push(obj66);
        java.lang.Class<?> wildcardClass68 = stack64.getClass();
        stack53.push((java.lang.Object) wildcardClass68);
        stack9.push((java.lang.Object) stack53);
        boolean boolean71 = stack53.isEmpty();
        stack0.push((java.lang.Object) boolean71);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        boolean boolean8 = stack0.isFull();
        boolean boolean9 = stack0.isEmpty();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        java.lang.Object obj18 = stack0.last();
        java.lang.Object obj19 = stack0.last();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Object obj22 = null;
        stack20.push(obj22);
        stack20.pop();
        int int25 = stack20.size();
        int int26 = stack20.size();
        stack20.clear();
        boolean boolean28 = stack20.isEmpty();
        stack20.clear();
        java.lang.Class<?> wildcardClass30 = stack20.getClass();
        stack0.push((java.lang.Object) stack20);
        boolean boolean32 = stack0.isFull();
        boolean boolean33 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        java.lang.Class<?> wildcardClass17 = stack5.getClass();
        int int18 = stack5.size();
        stack5.clear();
        boolean boolean20 = stack5.isEmpty();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        stack21.clear();
        boolean boolean24 = stack21.isFull();
        java.lang.Class<?> wildcardClass25 = stack21.getClass();
        stack5.push((java.lang.Object) wildcardClass25);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        boolean boolean5 = stack0.isFull();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        java.lang.Class<?> wildcardClass12 = stack8.getClass();
        boolean boolean13 = stack8.isEmpty();
        java.lang.Class<?> wildcardClass14 = stack8.getClass();
        stack0.push((java.lang.Object) stack8);
        stack8.push((java.lang.Object) 0.0d);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass10 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        boolean boolean13 = stack0.isFull();
        boolean boolean14 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack0.size();
        int int9 = stack0.size();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        stack0.pop();
        boolean boolean17 = stack0.isEmpty();
        int int18 = stack0.size();
        int int19 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        java.lang.Object obj19 = null;
        stack5.push(obj19);
        java.lang.Class<?> wildcardClass21 = stack5.getClass();
        stack5.clear();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        boolean boolean24 = stack23.isEmpty();
        stack23.push((java.lang.Object) "hi!");
        int int27 = stack23.size();
        stack5.push((java.lang.Object) stack23);
        java.lang.Class<?> wildcardClass29 = stack23.getClass();
        java.lang.Object obj30 = stack23.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + "hi!" + "'", obj30.equals("hi!"));
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        stack0.pop();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        boolean boolean13 = stack9.isFull();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        int int15 = stack14.size();
        java.lang.Object obj16 = null;
        stack14.push(obj16);
        stack14.pop();
        int int19 = stack14.size();
        stack14.clear();
        stack14.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass23 = stack14.getClass();
        stack9.push((java.lang.Object) stack14);
        java.lang.Object obj25 = stack14.last();
        stack14.pop();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        boolean boolean28 = stack27.isEmpty();
        stack27.clear();
        boolean boolean30 = stack27.isFull();
        stack14.push((java.lang.Object) boolean30);
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        int int33 = stack32.size();
        stack32.clear();
        boolean boolean35 = stack32.isFull();
        stack32.clear();
        boolean boolean37 = stack32.isEmpty();
        stack14.push((java.lang.Object) stack32);
        stack32.clear();
        stack0.push((java.lang.Object) stack32);
        int int41 = stack32.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + 10 + "'", obj25.equals(10));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.pop();
        int int7 = stack0.size();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        boolean boolean9 = stack8.isEmpty();
        stack8.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack8.push((java.lang.Object) int14);
        stack8.clear();
        java.lang.Class<?> wildcardClass17 = stack8.getClass();
        java.lang.Class<?> wildcardClass18 = stack8.getClass();
        stack0.push((java.lang.Object) stack8);
        int int20 = stack0.size();
        int int21 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        int int19 = stack5.size();
        java.lang.Object obj20 = stack5.last();
        boolean boolean21 = stack5.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + 10 + "'", obj20.equals(10));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack0.size();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.pop();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        stack12.clear();
        stack12.push((java.lang.Object) true);
        boolean boolean17 = stack12.isEmpty();
        stack12.clear();
        boolean boolean19 = stack12.isEmpty();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Class<?> wildcardClass22 = stack20.getClass();
        java.lang.Class<?> wildcardClass23 = stack20.getClass();
        stack20.push((java.lang.Object) 10L);
        boolean boolean26 = stack20.isFull();
        stack12.push((java.lang.Object) stack20);
        stack12.push((java.lang.Object) false);
        stack12.clear();
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        int int32 = stack31.size();
        stack31.clear();
        boolean boolean34 = stack31.isFull();
        boolean boolean35 = stack31.isFull();
        stack12.push((java.lang.Object) boolean35);
        java.lang.Class<?> wildcardClass37 = stack12.getClass();
        stack0.push((java.lang.Object) stack12);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Class<?> wildcardClass16 = stack0.getClass();
        boolean boolean17 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass19 = stack18.getClass();
        boolean boolean20 = stack18.isEmpty();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Class<?> wildcardClass23 = stack21.getClass();
        java.lang.Class<?> wildcardClass24 = stack21.getClass();
        boolean boolean25 = stack21.isFull();
        jbhembise.testauto.example3.Stack stack26 = new jbhembise.testauto.example3.Stack();
        int int27 = stack26.size();
        java.lang.Object obj28 = null;
        stack26.push(obj28);
        stack26.pop();
        int int31 = stack26.size();
        stack26.clear();
        stack26.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass35 = stack26.getClass();
        stack21.push((java.lang.Object) stack26);
        boolean boolean37 = stack26.isEmpty();
        int int38 = stack26.size();
        boolean boolean39 = stack26.isEmpty();
        boolean boolean40 = stack26.isEmpty();
        jbhembise.testauto.example3.Stack stack41 = new jbhembise.testauto.example3.Stack();
        int int42 = stack41.size();
        java.lang.Object obj43 = null;
        stack41.push(obj43);
        stack41.pop();
        int int46 = stack41.size();
        stack41.clear();
        java.lang.Class<?> wildcardClass48 = stack41.getClass();
        stack26.push((java.lang.Object) wildcardClass48);
        stack18.push((java.lang.Object) stack26);
        stack0.push((java.lang.Object) stack18);
        boolean boolean52 = stack18.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.clear();
        stack0.clear();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Class<?> wildcardClass5 = stack3.getClass();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        java.lang.Class<?> wildcardClass7 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        boolean boolean9 = stack3.isFull();
        stack3.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Object obj13 = null;
        stack11.push(obj13);
        stack11.pop();
        int int16 = stack11.size();
        stack11.clear();
        boolean boolean18 = stack11.isEmpty();
        boolean boolean19 = stack11.isEmpty();
        java.lang.Class<?> wildcardClass20 = stack11.getClass();
        int int21 = stack11.size();
        java.lang.Class<?> wildcardClass22 = stack11.getClass();
        stack3.push((java.lang.Object) stack11);
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        stack24.clear();
        stack24.push((java.lang.Object) true);
        boolean boolean29 = stack24.isEmpty();
        stack24.clear();
        boolean boolean31 = stack24.isEmpty();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        int int33 = stack32.size();
        java.lang.Class<?> wildcardClass34 = stack32.getClass();
        java.lang.Class<?> wildcardClass35 = stack32.getClass();
        stack32.push((java.lang.Object) 10L);
        boolean boolean38 = stack32.isFull();
        stack24.push((java.lang.Object) stack32);
        jbhembise.testauto.example3.Stack stack40 = new jbhembise.testauto.example3.Stack();
        int int41 = stack40.size();
        java.lang.Object obj42 = null;
        stack40.push(obj42);
        stack40.pop();
        int int45 = stack40.size();
        stack40.clear();
        stack40.push((java.lang.Object) 10);
        boolean boolean49 = stack40.isEmpty();
        stack40.pop();
        jbhembise.testauto.example3.Stack stack51 = new jbhembise.testauto.example3.Stack();
        int int52 = stack51.size();
        java.lang.Class<?> wildcardClass53 = stack51.getClass();
        java.lang.Class<?> wildcardClass54 = stack51.getClass();
        java.lang.Class<?> wildcardClass55 = stack51.getClass();
        stack51.clear();
        stack51.clear();
        jbhembise.testauto.example3.Stack stack58 = new jbhembise.testauto.example3.Stack();
        int int59 = stack58.size();
        java.lang.Object obj60 = null;
        stack58.push(obj60);
        stack58.pop();
        int int63 = stack58.size();
        stack58.clear();
        stack58.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass67 = stack58.getClass();
        stack51.push((java.lang.Object) wildcardClass67);
        jbhembise.testauto.example3.Stack stack69 = new jbhembise.testauto.example3.Stack();
        int int70 = stack69.size();
        stack69.clear();
        stack69.push((java.lang.Object) true);
        boolean boolean74 = stack69.isEmpty();
        stack69.pop();
        stack51.push((java.lang.Object) stack69);
        stack40.push((java.lang.Object) stack69);
        stack24.push((java.lang.Object) stack69);
        int int79 = stack24.size();
        int int80 = stack24.size();
        stack3.push((java.lang.Object) int80);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        int int17 = stack0.size();
        boolean boolean18 = stack0.isEmpty();
        boolean boolean19 = stack0.isFull();
        java.lang.Object obj20 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        java.lang.Class<?> wildcardClass10 = stack0.getClass();
        stack0.clear();
        java.lang.Class<?> wildcardClass12 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        boolean boolean9 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass19 = stack10.getClass();
        boolean boolean20 = stack10.isFull();
        stack10.clear();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass23 = stack22.getClass();
        int int24 = stack22.size();
        stack22.push((java.lang.Object) (byte) 10);
        stack10.push((java.lang.Object) stack22);
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        boolean boolean35 = stack28.isFull();
        java.lang.Class<?> wildcardClass36 = stack28.getClass();
        stack22.push((java.lang.Object) stack28);
        boolean boolean38 = stack22.isFull();
        java.lang.Object obj39 = stack22.last();
        stack22.pop();
        stack0.push((java.lang.Object) stack22);
        jbhembise.testauto.example3.Stack stack42 = new jbhembise.testauto.example3.Stack();
        int int43 = stack42.size();
        stack42.clear();
        stack42.push((java.lang.Object) true);
        boolean boolean47 = stack42.isEmpty();
        int int48 = stack42.size();
        java.lang.Object obj49 = stack42.last();
        stack0.push((java.lang.Object) stack42);
        boolean boolean51 = stack42.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + true + "'", obj49.equals(true));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.clear();
        int int5 = stack0.size();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        boolean boolean9 = stack6.isFull();
        stack0.push((java.lang.Object) stack6);
        boolean boolean11 = stack6.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        boolean boolean4 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        int int6 = stack0.size();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Class<?> wildcardClass9 = stack7.getClass();
        java.lang.Class<?> wildcardClass10 = stack7.getClass();
        boolean boolean11 = stack7.isFull();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Object obj14 = null;
        stack12.push(obj14);
        stack12.pop();
        int int17 = stack12.size();
        stack12.clear();
        stack12.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass21 = stack12.getClass();
        stack7.push((java.lang.Object) stack12);
        java.lang.Object obj23 = stack12.last();
        stack12.pop();
        int int25 = stack12.size();
        jbhembise.testauto.example3.Stack stack26 = new jbhembise.testauto.example3.Stack();
        boolean boolean27 = stack26.isEmpty();
        boolean boolean28 = stack26.isEmpty();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        boolean boolean30 = stack29.isEmpty();
        stack29.push((java.lang.Object) (short) 10);
        stack26.push((java.lang.Object) stack29);
        boolean boolean34 = stack26.isEmpty();
        java.lang.Class<?> wildcardClass35 = stack26.getClass();
        stack26.clear();
        stack12.push((java.lang.Object) stack26);
        boolean boolean38 = stack26.isFull();
        stack0.push((java.lang.Object) boolean38);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + 10 + "'", obj23.equals(10));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        boolean boolean4 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        int int6 = stack0.size();
        stack0.clear();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        stack10.clear();
        boolean boolean13 = stack10.isFull();
        stack10.clear();
        boolean boolean15 = stack10.isFull();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Class<?> wildcardClass18 = stack16.getClass();
        java.lang.Class<?> wildcardClass19 = stack16.getClass();
        stack10.push((java.lang.Object) wildcardClass19);
        boolean boolean21 = stack10.isEmpty();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        int int23 = stack22.size();
        java.lang.Class<?> wildcardClass24 = stack22.getClass();
        java.lang.Class<?> wildcardClass25 = stack22.getClass();
        boolean boolean26 = stack22.isFull();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Object obj29 = null;
        stack27.push(obj29);
        stack27.pop();
        int int32 = stack27.size();
        stack27.clear();
        stack27.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass36 = stack27.getClass();
        stack22.push((java.lang.Object) stack27);
        java.lang.Object obj38 = stack27.last();
        stack27.pop();
        jbhembise.testauto.example3.Stack stack40 = new jbhembise.testauto.example3.Stack();
        int int41 = stack40.size();
        stack40.clear();
        stack40.push((java.lang.Object) true);
        boolean boolean45 = stack40.isEmpty();
        stack40.clear();
        boolean boolean47 = stack40.isEmpty();
        stack27.push((java.lang.Object) boolean47);
        stack27.pop();
        boolean boolean50 = stack27.isEmpty();
        stack10.push((java.lang.Object) stack27);
        stack0.push((java.lang.Object) stack27);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + 10 + "'", obj38.equals(10));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        stack0.clear();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        stack14.push((java.lang.Object) (short) 10);
        stack11.push((java.lang.Object) stack14);
        boolean boolean19 = stack11.isEmpty();
        java.lang.Object obj20 = stack11.last();
        int int21 = stack11.size();
        stack0.push((java.lang.Object) stack11);
        boolean boolean23 = stack11.isEmpty();
        stack11.pop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        int int5 = stack0.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        java.lang.Object obj18 = stack0.last();
        java.lang.Object obj19 = stack0.last();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        stack20.clear();
        stack20.push((java.lang.Object) true);
        java.lang.Class<?> wildcardClass25 = stack20.getClass();
        stack0.push((java.lang.Object) wildcardClass25);
        stack0.pop();
        boolean boolean28 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        stack6.push((java.lang.Object) true);
        boolean boolean11 = stack6.isEmpty();
        int int12 = stack6.size();
        int int13 = stack6.size();
        stack0.push((java.lang.Object) stack6);
        java.lang.Class<?> wildcardClass15 = stack6.getClass();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Object obj25 = stack16.last();
        stack16.clear();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Class<?> wildcardClass29 = stack27.getClass();
        java.lang.Class<?> wildcardClass30 = stack27.getClass();
        java.lang.Class<?> wildcardClass31 = stack27.getClass();
        stack27.clear();
        java.lang.Class<?> wildcardClass33 = stack27.getClass();
        stack16.push((java.lang.Object) stack27);
        stack6.push((java.lang.Object) stack27);
        java.lang.Class<?> wildcardClass36 = stack6.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + 10 + "'", obj25.equals(10));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Object obj11 = null;
        stack9.push(obj11);
        stack9.pop();
        int int14 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        boolean boolean19 = stack9.isEmpty();
        stack9.clear();
        stack9.clear();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        boolean boolean23 = stack22.isEmpty();
        stack22.clear();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Object obj27 = null;
        stack25.push(obj27);
        stack25.pop();
        int int30 = stack25.size();
        stack25.clear();
        stack25.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass34 = stack25.getClass();
        stack22.push((java.lang.Object) stack25);
        stack9.push((java.lang.Object) stack22);
        stack22.pop();
        jbhembise.testauto.example3.Stack stack38 = new jbhembise.testauto.example3.Stack();
        int int39 = stack38.size();
        stack38.clear();
        stack38.push((java.lang.Object) true);
        boolean boolean43 = stack38.isEmpty();
        stack38.clear();
        boolean boolean45 = stack38.isEmpty();
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        int int47 = stack46.size();
        java.lang.Class<?> wildcardClass48 = stack46.getClass();
        java.lang.Class<?> wildcardClass49 = stack46.getClass();
        stack46.push((java.lang.Object) 10L);
        boolean boolean52 = stack46.isFull();
        stack38.push((java.lang.Object) stack46);
        stack38.push((java.lang.Object) false);
        stack38.clear();
        int int57 = stack38.size();
        stack22.push((java.lang.Object) stack38);
        stack0.push((java.lang.Object) stack38);
        stack38.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        java.lang.Object obj10 = stack0.last();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        stack11.clear();
        stack11.push((java.lang.Object) true);
        boolean boolean16 = stack11.isFull();
        stack0.push((java.lang.Object) stack11);
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + 10 + "'", obj10.equals(10));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        boolean boolean2 = stack0.isEmpty();
        int int3 = stack0.size();
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        int int5 = stack4.size();
        stack4.clear();
        stack4.clear();
        int int8 = stack4.size();
        stack4.clear();
        stack0.push((java.lang.Object) stack4);
        boolean boolean11 = stack0.isFull();
        java.lang.Object obj12 = stack0.last();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        stack0.clear();
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        boolean boolean21 = stack19.isEmpty();
        int int22 = stack19.size();
        stack0.push((java.lang.Object) int22);
        java.lang.Class<?> wildcardClass24 = stack0.getClass();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        boolean boolean14 = stack11.isEmpty();
        stack0.push((java.lang.Object) boolean14);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Class<?> wildcardClass18 = stack16.getClass();
        java.lang.Class<?> wildcardClass19 = stack16.getClass();
        boolean boolean20 = stack16.isFull();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Object obj23 = null;
        stack21.push(obj23);
        stack21.pop();
        int int26 = stack21.size();
        stack21.clear();
        stack21.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass30 = stack21.getClass();
        stack16.push((java.lang.Object) stack21);
        boolean boolean32 = stack21.isEmpty();
        java.lang.Class<?> wildcardClass33 = stack21.getClass();
        int int34 = stack21.size();
        stack21.clear();
        stack21.clear();
        stack0.push((java.lang.Object) stack21);
        int int38 = stack0.size();
        java.lang.Object obj39 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3 + "'", int38 == 3);
        org.junit.Assert.assertNotNull(obj39);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        java.lang.Class<?> wildcardClass9 = stack3.getClass();
        java.lang.Object obj10 = stack3.last();
        java.lang.Object obj11 = stack3.last();
        boolean boolean12 = stack3.isEmpty();
        boolean boolean13 = stack3.isEmpty();
        int int14 = stack3.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 10 + "'", obj10.equals((short) 10));
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 10 + "'", obj11.equals((short) 10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass6 = stack5.getClass();
        int int7 = stack5.size();
        stack0.push((java.lang.Object) int7);
        stack0.clear();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        stack0.clear();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass6 = stack5.getClass();
        int int7 = stack5.size();
        stack5.push((java.lang.Object) (byte) 10);
        int int10 = stack5.size();
        stack5.clear();
        stack0.push((java.lang.Object) stack5);
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        java.lang.Object obj15 = null;
        stack13.push(obj15);
        stack13.pop();
        int int18 = stack13.size();
        stack13.clear();
        stack13.push((java.lang.Object) 10);
        java.lang.Object obj22 = stack13.last();
        boolean boolean23 = stack13.isEmpty();
        boolean boolean24 = stack13.isEmpty();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Class<?> wildcardClass27 = stack25.getClass();
        java.lang.Class<?> wildcardClass28 = stack25.getClass();
        stack25.push((java.lang.Object) 10L);
        boolean boolean31 = stack25.isFull();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass33 = stack32.getClass();
        int int34 = stack32.size();
        stack25.push((java.lang.Object) int34);
        boolean boolean36 = stack25.isFull();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Class<?> wildcardClass39 = stack37.getClass();
        java.lang.Class<?> wildcardClass40 = stack37.getClass();
        java.lang.Class<?> wildcardClass41 = stack37.getClass();
        stack37.clear();
        stack37.clear();
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        int int45 = stack44.size();
        java.lang.Object obj46 = null;
        stack44.push(obj46);
        stack44.pop();
        int int49 = stack44.size();
        stack44.clear();
        stack44.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass53 = stack44.getClass();
        stack37.push((java.lang.Object) wildcardClass53);
        jbhembise.testauto.example3.Stack stack55 = new jbhembise.testauto.example3.Stack();
        int int56 = stack55.size();
        stack55.clear();
        stack55.push((java.lang.Object) true);
        boolean boolean60 = stack55.isEmpty();
        stack55.pop();
        stack37.push((java.lang.Object) stack55);
        stack25.push((java.lang.Object) stack37);
        stack13.push((java.lang.Object) stack25);
        java.lang.Object obj65 = stack13.last();
        stack0.push((java.lang.Object) stack13);
        int int67 = stack0.size();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + obj22 + "' != '" + 10 + "'", obj22.equals(10));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        stack0.pop();
        int int7 = stack0.size();
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        java.lang.Class<?> wildcardClass12 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        int int11 = stack0.size();
        int int12 = stack0.size();
        boolean boolean13 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        int int15 = stack14.size();
        java.lang.Class<?> wildcardClass16 = stack14.getClass();
        java.lang.Class<?> wildcardClass17 = stack14.getClass();
        stack14.push((java.lang.Object) 10L);
        boolean boolean20 = stack14.isFull();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass22 = stack21.getClass();
        int int23 = stack21.size();
        stack14.push((java.lang.Object) int23);
        boolean boolean25 = stack14.isFull();
        jbhembise.testauto.example3.Stack stack26 = new jbhembise.testauto.example3.Stack();
        int int27 = stack26.size();
        java.lang.Class<?> wildcardClass28 = stack26.getClass();
        java.lang.Class<?> wildcardClass29 = stack26.getClass();
        java.lang.Class<?> wildcardClass30 = stack26.getClass();
        stack26.clear();
        stack26.clear();
        jbhembise.testauto.example3.Stack stack33 = new jbhembise.testauto.example3.Stack();
        int int34 = stack33.size();
        java.lang.Object obj35 = null;
        stack33.push(obj35);
        stack33.pop();
        int int38 = stack33.size();
        stack33.clear();
        stack33.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass42 = stack33.getClass();
        stack26.push((java.lang.Object) wildcardClass42);
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        int int45 = stack44.size();
        stack44.clear();
        stack44.push((java.lang.Object) true);
        boolean boolean49 = stack44.isEmpty();
        stack44.pop();
        stack26.push((java.lang.Object) stack44);
        stack14.push((java.lang.Object) stack26);
        boolean boolean53 = stack26.isEmpty();
        boolean boolean54 = stack26.isFull();
        int int55 = stack26.size();
        boolean boolean56 = stack26.isEmpty();
        stack0.push((java.lang.Object) boolean56);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        boolean boolean12 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        int int15 = stack14.size();
        java.lang.Object obj16 = null;
        stack14.push(obj16);
        stack14.pop();
        int int19 = stack14.size();
        stack14.clear();
        stack14.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass23 = stack14.getClass();
        boolean boolean24 = stack14.isEmpty();
        stack14.clear();
        stack14.clear();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        boolean boolean28 = stack27.isEmpty();
        stack27.clear();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass39 = stack30.getClass();
        stack27.push((java.lang.Object) stack30);
        stack14.push((java.lang.Object) stack27);
        stack27.pop();
        stack0.push((java.lang.Object) stack27);
        int int44 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Class<?> wildcardClass5 = stack3.getClass();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        java.lang.Class<?> wildcardClass7 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        boolean boolean13 = stack9.isFull();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        int int15 = stack14.size();
        java.lang.Object obj16 = null;
        stack14.push(obj16);
        stack14.pop();
        int int19 = stack14.size();
        stack14.clear();
        stack14.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass23 = stack14.getClass();
        stack9.push((java.lang.Object) stack14);
        java.lang.Class<?> wildcardClass25 = stack9.getClass();
        stack3.push((java.lang.Object) stack9);
        int int27 = stack3.size();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        int int6 = stack0.size();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        boolean boolean17 = stack7.isFull();
        stack7.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass20 = stack19.getClass();
        int int21 = stack19.size();
        stack19.push((java.lang.Object) (byte) 10);
        stack7.push((java.lang.Object) stack19);
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Object obj27 = null;
        stack25.push(obj27);
        stack25.pop();
        int int30 = stack25.size();
        stack25.clear();
        boolean boolean32 = stack25.isFull();
        java.lang.Class<?> wildcardClass33 = stack25.getClass();
        stack19.push((java.lang.Object) stack25);
        boolean boolean35 = stack19.isFull();
        java.lang.Object obj36 = stack19.last();
        stack0.push((java.lang.Object) stack19);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass19 = stack10.getClass();
        boolean boolean20 = stack10.isFull();
        stack10.clear();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass23 = stack22.getClass();
        int int24 = stack22.size();
        stack22.push((java.lang.Object) (byte) 10);
        stack10.push((java.lang.Object) stack22);
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        boolean boolean35 = stack28.isFull();
        java.lang.Class<?> wildcardClass36 = stack28.getClass();
        stack22.push((java.lang.Object) stack28);
        jbhembise.testauto.example3.Stack stack38 = new jbhembise.testauto.example3.Stack();
        int int39 = stack38.size();
        stack38.clear();
        stack38.push((java.lang.Object) true);
        boolean boolean43 = stack38.isEmpty();
        stack38.clear();
        boolean boolean45 = stack38.isEmpty();
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        int int47 = stack46.size();
        java.lang.Class<?> wildcardClass48 = stack46.getClass();
        java.lang.Class<?> wildcardClass49 = stack46.getClass();
        stack46.push((java.lang.Object) 10L);
        boolean boolean52 = stack46.isFull();
        stack38.push((java.lang.Object) stack46);
        java.lang.Object obj54 = stack38.last();
        stack38.clear();
        stack22.push((java.lang.Object) stack38);
        stack0.push((java.lang.Object) stack22);
        boolean boolean58 = stack22.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        boolean boolean16 = stack8.isEmpty();
        java.lang.Object obj17 = stack8.last();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass27 = stack18.getClass();
        boolean boolean28 = stack18.isEmpty();
        boolean boolean29 = stack18.isFull();
        boolean boolean30 = stack18.isEmpty();
        stack18.clear();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        int int33 = stack32.size();
        java.lang.Object obj34 = null;
        stack32.push(obj34);
        stack32.pop();
        int int37 = stack32.size();
        stack32.clear();
        stack32.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass41 = stack32.getClass();
        boolean boolean42 = stack32.isEmpty();
        int int43 = stack32.size();
        boolean boolean44 = stack32.isFull();
        int int45 = stack32.size();
        stack18.push((java.lang.Object) stack32);
        stack8.push((java.lang.Object) stack32);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + obj17 + "' != '" + 10L + "'", obj17.equals(10L));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        int int11 = stack0.size();
        boolean boolean12 = stack0.isFull();
        java.lang.Class<?> wildcardClass13 = stack0.getClass();
        java.lang.Object obj14 = stack0.last();
        stack0.pop();
        boolean boolean16 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + 10 + "'", obj14.equals(10));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        java.lang.Class<?> wildcardClass17 = stack5.getClass();
        java.lang.Class<?> wildcardClass18 = stack5.getClass();
        boolean boolean19 = stack5.isEmpty();
        int int20 = stack5.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        boolean boolean19 = stack5.isEmpty();
        stack5.clear();
        boolean boolean21 = stack5.isEmpty();
        boolean boolean22 = stack5.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        boolean boolean2 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        boolean boolean6 = stack5.isEmpty();
        boolean boolean7 = stack5.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        boolean boolean9 = stack8.isEmpty();
        stack8.push((java.lang.Object) (short) 10);
        stack5.push((java.lang.Object) stack8);
        boolean boolean13 = stack5.isEmpty();
        java.lang.Object obj14 = stack5.last();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        stack0.push((java.lang.Object) wildcardClass15);
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        int int18 = stack17.size();
        java.lang.Class<?> wildcardClass19 = stack17.getClass();
        java.lang.Class<?> wildcardClass20 = stack17.getClass();
        java.lang.Class<?> wildcardClass21 = stack17.getClass();
        stack17.clear();
        stack17.clear();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Object obj26 = null;
        stack24.push(obj26);
        stack24.pop();
        int int29 = stack24.size();
        stack24.clear();
        stack24.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass33 = stack24.getClass();
        stack17.push((java.lang.Object) wildcardClass33);
        stack0.push((java.lang.Object) stack17);
        jbhembise.testauto.example3.Stack stack36 = new jbhembise.testauto.example3.Stack();
        int int37 = stack36.size();
        java.lang.Class<?> wildcardClass38 = stack36.getClass();
        java.lang.Class<?> wildcardClass39 = stack36.getClass();
        stack36.clear();
        boolean boolean41 = stack36.isEmpty();
        boolean boolean42 = stack36.isEmpty();
        stack0.push((java.lang.Object) stack36);
        boolean boolean44 = stack36.isFull();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        boolean boolean8 = stack0.isFull();
        int int9 = stack0.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Object obj5 = null;
        stack3.push(obj5);
        stack3.pop();
        int int8 = stack3.size();
        stack3.clear();
        boolean boolean10 = stack3.isEmpty();
        boolean boolean11 = stack3.isEmpty();
        stack3.clear();
        boolean boolean13 = stack3.isEmpty();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        boolean boolean16 = stack14.isEmpty();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        boolean boolean18 = stack17.isEmpty();
        stack17.push((java.lang.Object) (short) 10);
        stack14.push((java.lang.Object) stack17);
        int int22 = stack17.size();
        int int23 = stack17.size();
        stack3.push((java.lang.Object) stack17);
        boolean boolean25 = stack17.isEmpty();
        jbhembise.testauto.example3.Stack stack26 = new jbhembise.testauto.example3.Stack();
        int int27 = stack26.size();
        java.lang.Object obj28 = null;
        stack26.push(obj28);
        stack26.pop();
        int int31 = stack26.size();
        stack26.clear();
        stack26.push((java.lang.Object) 10);
        boolean boolean35 = stack26.isEmpty();
        boolean boolean36 = stack26.isEmpty();
        java.lang.Object obj37 = stack26.last();
        boolean boolean38 = stack26.isFull();
        stack26.clear();
        stack17.push((java.lang.Object) stack26);
        jbhembise.testauto.example3.Stack stack41 = new jbhembise.testauto.example3.Stack();
        boolean boolean42 = stack41.isEmpty();
        stack41.push((java.lang.Object) "hi!");
        stack17.push((java.lang.Object) stack41);
        stack0.push((java.lang.Object) stack41);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + obj37 + "' != '" + 10 + "'", obj37.equals(10));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        java.lang.Object obj18 = stack0.last();
        java.lang.Object obj19 = stack0.last();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        stack20.clear();
        stack20.push((java.lang.Object) true);
        java.lang.Class<?> wildcardClass25 = stack20.getClass();
        stack0.push((java.lang.Object) wildcardClass25);
        stack0.pop();
        stack0.pop();
        java.lang.Class<?> wildcardClass29 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        java.lang.Class<?> wildcardClass17 = stack5.getClass();
        int int18 = stack5.size();
        stack5.clear();
        stack5.clear();
        boolean boolean21 = stack5.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        stack12.push((java.lang.Object) 10L);
        boolean boolean18 = stack12.isFull();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass20 = stack19.getClass();
        int int21 = stack19.size();
        stack12.push((java.lang.Object) int21);
        boolean boolean23 = stack12.isFull();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Class<?> wildcardClass26 = stack24.getClass();
        java.lang.Class<?> wildcardClass27 = stack24.getClass();
        java.lang.Class<?> wildcardClass28 = stack24.getClass();
        stack24.clear();
        stack24.clear();
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        int int32 = stack31.size();
        java.lang.Object obj33 = null;
        stack31.push(obj33);
        stack31.pop();
        int int36 = stack31.size();
        stack31.clear();
        stack31.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass40 = stack31.getClass();
        stack24.push((java.lang.Object) wildcardClass40);
        jbhembise.testauto.example3.Stack stack42 = new jbhembise.testauto.example3.Stack();
        int int43 = stack42.size();
        stack42.clear();
        stack42.push((java.lang.Object) true);
        boolean boolean47 = stack42.isEmpty();
        stack42.pop();
        stack24.push((java.lang.Object) stack42);
        stack12.push((java.lang.Object) stack24);
        stack0.push((java.lang.Object) stack12);
        boolean boolean52 = stack0.isFull();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        boolean boolean9 = stack6.isFull();
        stack6.clear();
        stack6.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        stack12.clear();
        stack12.push((java.lang.Object) true);
        boolean boolean17 = stack12.isEmpty();
        int int18 = stack12.size();
        int int19 = stack12.size();
        stack6.push((java.lang.Object) stack12);
        java.lang.Class<?> wildcardClass21 = stack6.getClass();
        stack6.pop();
        stack0.push((java.lang.Object) stack6);
        java.lang.Class<?> wildcardClass24 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        java.lang.Class<?> wildcardClass15 = stack11.getClass();
        stack11.clear();
        java.lang.Class<?> wildcardClass17 = stack11.getClass();
        stack0.push((java.lang.Object) stack11);
        java.lang.Object obj19 = stack0.last();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj19);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        boolean boolean17 = stack0.isEmpty();
        boolean boolean18 = stack0.isEmpty();
        boolean boolean19 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        java.lang.Class<?> wildcardClass19 = stack9.getClass();
        java.lang.Object obj20 = null;
        stack9.push(obj20);
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass23 = stack22.getClass();
        int int24 = stack22.size();
        stack22.push((java.lang.Object) (byte) 10);
        boolean boolean27 = stack22.isEmpty();
        stack9.push((java.lang.Object) boolean27);
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        java.lang.Class<?> wildcardClass31 = stack29.getClass();
        java.lang.Class<?> wildcardClass32 = stack29.getClass();
        boolean boolean33 = stack29.isFull();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        int int35 = stack34.size();
        java.lang.Object obj36 = null;
        stack34.push(obj36);
        stack34.pop();
        int int39 = stack34.size();
        stack34.clear();
        stack34.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass43 = stack34.getClass();
        stack29.push((java.lang.Object) stack34);
        boolean boolean45 = stack29.isFull();
        stack29.clear();
        boolean boolean47 = stack29.isEmpty();
        boolean boolean48 = stack29.isFull();
        boolean boolean49 = stack29.isFull();
        jbhembise.testauto.example3.Stack stack50 = new jbhembise.testauto.example3.Stack();
        int int51 = stack50.size();
        stack50.clear();
        stack50.push((java.lang.Object) true);
        boolean boolean55 = stack50.isEmpty();
        boolean boolean56 = stack50.isFull();
        stack50.pop();
        java.lang.Class<?> wildcardClass58 = stack50.getClass();
        stack50.clear();
        stack29.push((java.lang.Object) stack50);
        int int61 = stack29.size();
        boolean boolean62 = stack29.isFull();
        java.lang.Class<?> wildcardClass63 = stack29.getClass();
        stack9.push((java.lang.Object) stack29);
        stack9.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        boolean boolean18 = stack12.isFull();
        int int19 = stack12.size();
        boolean boolean20 = stack12.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        boolean boolean13 = stack0.isEmpty();
        int int14 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        int int5 = stack0.size();
        boolean boolean6 = stack0.isFull();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        boolean boolean11 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack12.clear();
        stack12.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        java.lang.Object obj21 = null;
        stack19.push(obj21);
        stack19.pop();
        int int24 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass28 = stack19.getClass();
        stack12.push((java.lang.Object) wildcardClass28);
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) true);
        boolean boolean35 = stack30.isEmpty();
        stack30.pop();
        stack12.push((java.lang.Object) stack30);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        java.lang.Class<?> wildcardClass41 = stack39.getClass();
        java.lang.Class<?> wildcardClass42 = stack39.getClass();
        boolean boolean43 = stack39.isFull();
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        int int45 = stack44.size();
        java.lang.Object obj46 = null;
        stack44.push(obj46);
        stack44.pop();
        int int49 = stack44.size();
        stack44.clear();
        stack44.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass53 = stack44.getClass();
        stack39.push((java.lang.Object) stack44);
        jbhembise.testauto.example3.Stack stack55 = new jbhembise.testauto.example3.Stack();
        int int56 = stack55.size();
        java.lang.Object obj57 = null;
        stack55.push(obj57);
        java.lang.Class<?> wildcardClass59 = stack55.getClass();
        stack44.push((java.lang.Object) wildcardClass59);
        stack0.push((java.lang.Object) stack44);
        jbhembise.testauto.example3.Stack stack62 = new jbhembise.testauto.example3.Stack();
        int int63 = stack62.size();
        java.lang.Class<?> wildcardClass64 = stack62.getClass();
        java.lang.Class<?> wildcardClass65 = stack62.getClass();
        boolean boolean66 = stack62.isFull();
        jbhembise.testauto.example3.Stack stack67 = new jbhembise.testauto.example3.Stack();
        int int68 = stack67.size();
        java.lang.Object obj69 = null;
        stack67.push(obj69);
        stack67.pop();
        int int72 = stack67.size();
        stack67.clear();
        stack67.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass76 = stack67.getClass();
        stack62.push((java.lang.Object) stack67);
        boolean boolean78 = stack67.isEmpty();
        java.lang.Class<?> wildcardClass79 = stack67.getClass();
        int int80 = stack67.size();
        stack44.push((java.lang.Object) stack67);
        stack44.pop();
        boolean boolean83 = stack44.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        boolean boolean12 = stack0.isFull();
        java.lang.Class<?> wildcardClass13 = stack0.getClass();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        stack0.clear();
        boolean boolean8 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        boolean boolean13 = stack12.isEmpty();
        boolean boolean14 = stack12.isEmpty();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        boolean boolean16 = stack15.isEmpty();
        stack15.push((java.lang.Object) (short) 10);
        stack12.push((java.lang.Object) stack15);
        boolean boolean20 = stack12.isEmpty();
        java.lang.Class<?> wildcardClass21 = stack12.getClass();
        int int22 = stack12.size();
        java.lang.Object obj23 = stack12.last();
        stack0.push((java.lang.Object) stack12);
        java.lang.Object obj25 = stack0.last();
        stack0.pop();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        java.lang.Class<?> wildcardClass8 = stack6.getClass();
        java.lang.Class<?> wildcardClass9 = stack6.getClass();
        boolean boolean10 = stack6.isFull();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Object obj13 = null;
        stack11.push(obj13);
        stack11.pop();
        int int16 = stack11.size();
        stack11.clear();
        stack11.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass20 = stack11.getClass();
        stack6.push((java.lang.Object) stack11);
        java.lang.Class<?> wildcardClass22 = stack6.getClass();
        boolean boolean23 = stack6.isFull();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass25 = stack24.getClass();
        boolean boolean26 = stack24.isEmpty();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Class<?> wildcardClass29 = stack27.getClass();
        java.lang.Class<?> wildcardClass30 = stack27.getClass();
        boolean boolean31 = stack27.isFull();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        int int33 = stack32.size();
        java.lang.Object obj34 = null;
        stack32.push(obj34);
        stack32.pop();
        int int37 = stack32.size();
        stack32.clear();
        stack32.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass41 = stack32.getClass();
        stack27.push((java.lang.Object) stack32);
        boolean boolean43 = stack32.isEmpty();
        int int44 = stack32.size();
        boolean boolean45 = stack32.isEmpty();
        boolean boolean46 = stack32.isEmpty();
        jbhembise.testauto.example3.Stack stack47 = new jbhembise.testauto.example3.Stack();
        int int48 = stack47.size();
        java.lang.Object obj49 = null;
        stack47.push(obj49);
        stack47.pop();
        int int52 = stack47.size();
        stack47.clear();
        java.lang.Class<?> wildcardClass54 = stack47.getClass();
        stack32.push((java.lang.Object) wildcardClass54);
        stack24.push((java.lang.Object) stack32);
        stack6.push((java.lang.Object) stack24);
        stack0.push((java.lang.Object) stack6);
        jbhembise.testauto.example3.Stack stack59 = new jbhembise.testauto.example3.Stack();
        int int60 = stack59.size();
        stack59.clear();
        stack59.push((java.lang.Object) true);
        boolean boolean64 = stack59.isEmpty();
        int int65 = stack59.size();
        java.lang.Class<?> wildcardClass66 = stack59.getClass();
        stack0.push((java.lang.Object) stack59);
        java.lang.Class<?> wildcardClass68 = stack59.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        boolean boolean9 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass19 = stack10.getClass();
        boolean boolean20 = stack10.isFull();
        stack10.clear();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass23 = stack22.getClass();
        int int24 = stack22.size();
        stack22.push((java.lang.Object) (byte) 10);
        stack10.push((java.lang.Object) stack22);
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        boolean boolean35 = stack28.isFull();
        java.lang.Class<?> wildcardClass36 = stack28.getClass();
        stack22.push((java.lang.Object) stack28);
        boolean boolean38 = stack22.isFull();
        java.lang.Object obj39 = stack22.last();
        stack22.pop();
        stack0.push((java.lang.Object) stack22);
        boolean boolean42 = stack0.isFull();
        boolean boolean43 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        int int45 = stack44.size();
        java.lang.Class<?> wildcardClass46 = stack44.getClass();
        java.lang.Class<?> wildcardClass47 = stack44.getClass();
        stack44.clear();
        jbhembise.testauto.example3.Stack stack49 = new jbhembise.testauto.example3.Stack();
        int int50 = stack49.size();
        java.lang.Class<?> wildcardClass51 = stack49.getClass();
        java.lang.Class<?> wildcardClass52 = stack49.getClass();
        boolean boolean53 = stack49.isFull();
        jbhembise.testauto.example3.Stack stack54 = new jbhembise.testauto.example3.Stack();
        int int55 = stack54.size();
        java.lang.Object obj56 = null;
        stack54.push(obj56);
        stack54.pop();
        int int59 = stack54.size();
        stack54.clear();
        stack54.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass63 = stack54.getClass();
        stack49.push((java.lang.Object) stack54);
        boolean boolean65 = stack54.isEmpty();
        int int66 = stack54.size();
        jbhembise.testauto.example3.Stack stack67 = new jbhembise.testauto.example3.Stack();
        int int68 = stack67.size();
        java.lang.Object obj69 = null;
        stack67.push(obj69);
        stack67.pop();
        int int72 = stack67.size();
        stack67.clear();
        stack67.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass76 = stack67.getClass();
        boolean boolean77 = stack67.isFull();
        stack67.clear();
        jbhembise.testauto.example3.Stack stack79 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass80 = stack79.getClass();
        int int81 = stack79.size();
        stack79.push((java.lang.Object) (byte) 10);
        stack67.push((java.lang.Object) stack79);
        stack67.clear();
        stack54.push((java.lang.Object) stack67);
        boolean boolean87 = stack54.isEmpty();
        stack44.push((java.lang.Object) stack54);
        java.lang.Object obj89 = stack54.last();
        stack0.push((java.lang.Object) stack54);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(obj89);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        java.lang.Class<?> wildcardClass16 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        boolean boolean5 = stack0.isFull();
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        boolean boolean17 = stack7.isFull();
        stack7.clear();
        int int19 = stack7.size();
        stack0.push((java.lang.Object) int19);
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        stack0.pop();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass11 = stack10.getClass();
        int int12 = stack10.size();
        stack10.push((java.lang.Object) (byte) 10);
        int int15 = stack10.size();
        java.lang.Class<?> wildcardClass16 = stack10.getClass();
        boolean boolean17 = stack10.isFull();
        stack0.push((java.lang.Object) boolean17);
        java.lang.Class<?> wildcardClass19 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        java.lang.Object obj10 = stack0.last();
        int int11 = stack0.size();
        boolean boolean12 = stack0.isEmpty();
        int int13 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + 10 + "'", obj10.equals(10));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        java.lang.Class<?> wildcardClass8 = stack6.getClass();
        java.lang.Class<?> wildcardClass9 = stack6.getClass();
        stack6.push((java.lang.Object) 10L);
        boolean boolean12 = stack6.isFull();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass14 = stack13.getClass();
        int int15 = stack13.size();
        stack6.push((java.lang.Object) int15);
        boolean boolean17 = stack6.isFull();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Class<?> wildcardClass20 = stack18.getClass();
        java.lang.Class<?> wildcardClass21 = stack18.getClass();
        java.lang.Class<?> wildcardClass22 = stack18.getClass();
        stack18.clear();
        stack18.clear();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Object obj27 = null;
        stack25.push(obj27);
        stack25.pop();
        int int30 = stack25.size();
        stack25.clear();
        stack25.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass34 = stack25.getClass();
        stack18.push((java.lang.Object) wildcardClass34);
        jbhembise.testauto.example3.Stack stack36 = new jbhembise.testauto.example3.Stack();
        int int37 = stack36.size();
        stack36.clear();
        stack36.push((java.lang.Object) true);
        boolean boolean41 = stack36.isEmpty();
        stack36.pop();
        stack18.push((java.lang.Object) stack36);
        stack6.push((java.lang.Object) stack18);
        jbhembise.testauto.example3.Stack stack45 = new jbhembise.testauto.example3.Stack();
        int int46 = stack45.size();
        java.lang.Class<?> wildcardClass47 = stack45.getClass();
        java.lang.Class<?> wildcardClass48 = stack45.getClass();
        boolean boolean49 = stack45.isFull();
        jbhembise.testauto.example3.Stack stack50 = new jbhembise.testauto.example3.Stack();
        int int51 = stack50.size();
        java.lang.Object obj52 = null;
        stack50.push(obj52);
        stack50.pop();
        int int55 = stack50.size();
        stack50.clear();
        stack50.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass59 = stack50.getClass();
        stack45.push((java.lang.Object) stack50);
        jbhembise.testauto.example3.Stack stack61 = new jbhembise.testauto.example3.Stack();
        int int62 = stack61.size();
        java.lang.Object obj63 = null;
        stack61.push(obj63);
        java.lang.Class<?> wildcardClass65 = stack61.getClass();
        stack50.push((java.lang.Object) wildcardClass65);
        stack6.push((java.lang.Object) stack50);
        boolean boolean68 = stack50.isFull();
        java.lang.Class<?> wildcardClass69 = stack50.getClass();
        stack0.push((java.lang.Object) wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        int int9 = stack0.size();
        boolean boolean10 = stack0.isEmpty();
        stack0.pop();
        stack0.clear();
        boolean boolean13 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        boolean boolean19 = stack5.isEmpty();
        stack5.clear();
        int int21 = stack5.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        java.lang.Object obj5 = stack0.last();
        stack0.clear();
        boolean boolean7 = stack0.isFull();
        boolean boolean8 = stack0.isFull();
        int int9 = stack0.size();
        int int10 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + true + "'", obj5.equals(true));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        boolean boolean26 = stack18.isFull();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        boolean boolean28 = stack27.isEmpty();
        boolean boolean29 = stack27.isEmpty();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        int int36 = stack30.size();
        stack27.push((java.lang.Object) int36);
        stack18.push((java.lang.Object) stack27);
        boolean boolean39 = stack18.isFull();
        boolean boolean40 = stack18.isFull();
        int int41 = stack18.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        int int8 = stack0.size();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        int int12 = stack0.size();
        java.lang.Class<?> wildcardClass13 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        int int15 = stack14.size();
        stack14.clear();
        boolean boolean17 = stack14.isFull();
        stack14.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass20 = stack19.getClass();
        int int21 = stack19.size();
        stack14.push((java.lang.Object) int21);
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass24 = stack23.getClass();
        stack14.push((java.lang.Object) wildcardClass24);
        stack0.push((java.lang.Object) stack14);
        java.lang.Object obj27 = stack14.last();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        stack12.push((java.lang.Object) 10L);
        boolean boolean18 = stack12.isFull();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass20 = stack19.getClass();
        int int21 = stack19.size();
        stack12.push((java.lang.Object) int21);
        boolean boolean23 = stack12.isFull();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Class<?> wildcardClass26 = stack24.getClass();
        java.lang.Class<?> wildcardClass27 = stack24.getClass();
        java.lang.Class<?> wildcardClass28 = stack24.getClass();
        stack24.clear();
        stack24.clear();
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        int int32 = stack31.size();
        java.lang.Object obj33 = null;
        stack31.push(obj33);
        stack31.pop();
        int int36 = stack31.size();
        stack31.clear();
        stack31.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass40 = stack31.getClass();
        stack24.push((java.lang.Object) wildcardClass40);
        jbhembise.testauto.example3.Stack stack42 = new jbhembise.testauto.example3.Stack();
        int int43 = stack42.size();
        stack42.clear();
        stack42.push((java.lang.Object) true);
        boolean boolean47 = stack42.isEmpty();
        stack42.pop();
        stack24.push((java.lang.Object) stack42);
        stack12.push((java.lang.Object) stack24);
        stack0.push((java.lang.Object) stack12);
        boolean boolean52 = stack12.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        stack0.clear();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Object obj14 = null;
        stack12.push(obj14);
        stack12.pop();
        int int17 = stack12.size();
        stack12.clear();
        stack12.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass21 = stack12.getClass();
        boolean boolean22 = stack12.isEmpty();
        stack12.clear();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Class<?> wildcardClass26 = stack24.getClass();
        java.lang.Class<?> wildcardClass27 = stack24.getClass();
        java.lang.Class<?> wildcardClass28 = stack24.getClass();
        stack12.push((java.lang.Object) wildcardClass28);
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass39 = stack30.getClass();
        boolean boolean40 = stack30.isEmpty();
        stack30.clear();
        jbhembise.testauto.example3.Stack stack42 = new jbhembise.testauto.example3.Stack();
        int int43 = stack42.size();
        java.lang.Class<?> wildcardClass44 = stack42.getClass();
        java.lang.Class<?> wildcardClass45 = stack42.getClass();
        java.lang.Class<?> wildcardClass46 = stack42.getClass();
        stack30.push((java.lang.Object) wildcardClass46);
        stack12.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj49 = stack12.last();
        stack0.push((java.lang.Object) stack12);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj49);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.pop();
        stack0.clear();
        stack0.clear();
        boolean boolean15 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass17 = stack16.getClass();
        boolean boolean18 = stack16.isEmpty();
        stack16.clear();
        stack16.clear();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        boolean boolean22 = stack21.isEmpty();
        boolean boolean23 = stack21.isEmpty();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        boolean boolean25 = stack24.isEmpty();
        stack24.push((java.lang.Object) (short) 10);
        stack21.push((java.lang.Object) stack24);
        boolean boolean29 = stack21.isEmpty();
        java.lang.Object obj30 = stack21.last();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        stack16.push((java.lang.Object) wildcardClass31);
        stack16.clear();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        int int35 = stack34.size();
        java.lang.Object obj36 = null;
        stack34.push(obj36);
        stack34.pop();
        int int39 = stack34.size();
        stack34.clear();
        stack34.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass43 = stack34.getClass();
        boolean boolean44 = stack34.isEmpty();
        stack34.clear();
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        int int47 = stack46.size();
        java.lang.Class<?> wildcardClass48 = stack46.getClass();
        java.lang.Class<?> wildcardClass49 = stack46.getClass();
        java.lang.Class<?> wildcardClass50 = stack46.getClass();
        stack34.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stack34.last();
        int int53 = stack34.size();
        stack16.push((java.lang.Object) int53);
        stack0.push((java.lang.Object) int53);
        boolean boolean56 = stack0.isEmpty();
        boolean boolean57 = stack0.isEmpty();
        int int58 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isFull();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isEmpty();
        boolean boolean17 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        boolean boolean21 = stack18.isFull();
        stack18.clear();
        stack18.clear();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        stack24.clear();
        stack24.push((java.lang.Object) true);
        boolean boolean29 = stack24.isEmpty();
        int int30 = stack24.size();
        int int31 = stack24.size();
        stack18.push((java.lang.Object) stack24);
        stack0.push((java.lang.Object) stack24);
        stack24.pop();
        int int35 = stack24.size();
        jbhembise.testauto.example3.Stack stack36 = new jbhembise.testauto.example3.Stack();
        int int37 = stack36.size();
        java.lang.Object obj38 = null;
        stack36.push(obj38);
        stack36.pop();
        int int41 = stack36.size();
        stack36.clear();
        stack36.push((java.lang.Object) 10);
        boolean boolean45 = stack36.isEmpty();
        boolean boolean46 = stack36.isEmpty();
        stack36.clear();
        java.lang.Class<?> wildcardClass48 = stack36.getClass();
        stack24.push((java.lang.Object) stack36);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = null;
        stack0.push(obj16);
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        java.lang.Object obj19 = stack0.last();
        java.lang.Object obj20 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj20);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        stack18.clear();
        boolean boolean27 = stack18.isFull();
        java.lang.Class<?> wildcardClass28 = stack18.getClass();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        boolean boolean30 = stack29.isEmpty();
        stack29.push((java.lang.Object) (short) 10);
        boolean boolean33 = stack29.isEmpty();
        stack29.clear();
        java.lang.Class<?> wildcardClass35 = stack29.getClass();
        boolean boolean36 = stack29.isFull();
        int int37 = stack29.size();
        stack18.push((java.lang.Object) stack29);
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        stack39.clear();
        stack39.push((java.lang.Object) true);
        boolean boolean44 = stack39.isEmpty();
        stack29.push((java.lang.Object) stack39);
        boolean boolean46 = stack29.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        boolean boolean5 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        java.lang.Class<?> wildcardClass8 = stack6.getClass();
        java.lang.Class<?> wildcardClass9 = stack6.getClass();
        stack0.push((java.lang.Object) wildcardClass9);
        boolean boolean11 = stack0.isEmpty();
        boolean boolean12 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        stack13.clear();
        stack13.push((java.lang.Object) true);
        boolean boolean18 = stack13.isEmpty();
        boolean boolean19 = stack13.isFull();
        int int20 = stack13.size();
        stack0.push((java.lang.Object) int20);
        java.lang.Class<?> wildcardClass22 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        stack12.push((java.lang.Object) 10L);
        boolean boolean18 = stack12.isFull();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass20 = stack19.getClass();
        int int21 = stack19.size();
        stack12.push((java.lang.Object) int21);
        boolean boolean23 = stack12.isFull();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Class<?> wildcardClass26 = stack24.getClass();
        java.lang.Class<?> wildcardClass27 = stack24.getClass();
        java.lang.Class<?> wildcardClass28 = stack24.getClass();
        stack24.clear();
        stack24.clear();
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        int int32 = stack31.size();
        java.lang.Object obj33 = null;
        stack31.push(obj33);
        stack31.pop();
        int int36 = stack31.size();
        stack31.clear();
        stack31.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass40 = stack31.getClass();
        stack24.push((java.lang.Object) wildcardClass40);
        jbhembise.testauto.example3.Stack stack42 = new jbhembise.testauto.example3.Stack();
        int int43 = stack42.size();
        stack42.clear();
        stack42.push((java.lang.Object) true);
        boolean boolean47 = stack42.isEmpty();
        stack42.pop();
        stack24.push((java.lang.Object) stack42);
        stack12.push((java.lang.Object) stack24);
        stack0.push((java.lang.Object) stack12);
        boolean boolean52 = stack0.isFull();
        int int53 = stack0.size();
        boolean boolean54 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Class<?> wildcardClass16 = stack0.getClass();
        boolean boolean17 = stack0.isFull();
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Class<?> wildcardClass22 = stack20.getClass();
        java.lang.Class<?> wildcardClass23 = stack20.getClass();
        boolean boolean24 = stack20.isFull();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Object obj27 = null;
        stack25.push(obj27);
        stack25.pop();
        int int30 = stack25.size();
        stack25.clear();
        stack25.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass34 = stack25.getClass();
        stack20.push((java.lang.Object) stack25);
        jbhembise.testauto.example3.Stack stack36 = new jbhembise.testauto.example3.Stack();
        int int37 = stack36.size();
        stack36.clear();
        stack36.clear();
        stack20.push((java.lang.Object) stack36);
        stack0.push((java.lang.Object) stack20);
        java.lang.Class<?> wildcardClass42 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        boolean boolean26 = stack18.isFull();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        boolean boolean28 = stack27.isEmpty();
        boolean boolean29 = stack27.isEmpty();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        int int36 = stack30.size();
        stack27.push((java.lang.Object) int36);
        stack18.push((java.lang.Object) stack27);
        int int39 = stack27.size();
        jbhembise.testauto.example3.Stack stack40 = new jbhembise.testauto.example3.Stack();
        int int41 = stack40.size();
        java.lang.Object obj42 = null;
        stack40.push(obj42);
        stack40.pop();
        int int45 = stack40.size();
        stack40.clear();
        boolean boolean47 = stack40.isEmpty();
        boolean boolean48 = stack40.isEmpty();
        java.lang.Class<?> wildcardClass49 = stack40.getClass();
        stack27.push((java.lang.Object) stack40);
        stack27.clear();
        stack27.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        int int5 = stack0.size();
        java.lang.Object obj6 = null;
        stack0.push(obj6);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        java.lang.Class<?> wildcardClass9 = stack3.getClass();
        java.lang.Object obj10 = stack3.last();
        java.lang.Object obj11 = stack3.last();
        stack3.clear();
        java.lang.Class<?> wildcardClass13 = stack3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 10 + "'", obj10.equals((short) 10));
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 10 + "'", obj11.equals((short) 10));
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        java.lang.Class<?> wildcardClass9 = stack3.getClass();
        java.lang.Object obj10 = stack3.last();
        java.lang.Object obj11 = stack3.last();
        int int12 = stack3.size();
        java.lang.Class<?> wildcardClass13 = stack3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 10 + "'", obj10.equals((short) 10));
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 10 + "'", obj11.equals((short) 10));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        boolean boolean17 = stack0.isEmpty();
        java.lang.Object obj18 = stack0.last();
        stack0.clear();
        java.lang.Class<?> wildcardClass20 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        int int18 = stack17.size();
        stack17.clear();
        stack17.push((java.lang.Object) true);
        java.lang.Class<?> wildcardClass22 = stack17.getClass();
        stack0.push((java.lang.Object) wildcardClass22);
        boolean boolean24 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass25 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = null;
        stack0.push(obj11);
        stack0.pop();
        int int14 = stack0.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        boolean boolean6 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) true);
        boolean boolean12 = stack7.isEmpty();
        int int13 = stack7.size();
        java.lang.Class<?> wildcardClass14 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass14);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        int int5 = stack4.size();
        java.lang.Class<?> wildcardClass6 = stack4.getClass();
        java.lang.Class<?> wildcardClass7 = stack4.getClass();
        boolean boolean8 = stack4.isFull();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Object obj11 = null;
        stack9.push(obj11);
        stack9.pop();
        int int14 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        stack4.push((java.lang.Object) stack9);
        boolean boolean20 = stack4.isFull();
        stack4.clear();
        boolean boolean22 = stack4.isFull();
        stack0.push((java.lang.Object) stack4);
        boolean boolean24 = stack0.isFull();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        boolean boolean13 = stack12.isEmpty();
        boolean boolean14 = stack12.isEmpty();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        boolean boolean16 = stack15.isEmpty();
        stack15.push((java.lang.Object) (short) 10);
        stack12.push((java.lang.Object) stack15);
        int int20 = stack15.size();
        int int21 = stack15.size();
        java.lang.Class<?> wildcardClass22 = stack15.getClass();
        stack0.push((java.lang.Object) wildcardClass22);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Class<?> wildcardClass7 = stack5.getClass();
        java.lang.Class<?> wildcardClass8 = stack5.getClass();
        boolean boolean9 = stack5.isFull();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass19 = stack10.getClass();
        stack5.push((java.lang.Object) stack10);
        java.lang.Class<?> wildcardClass21 = stack5.getClass();
        stack0.push((java.lang.Object) wildcardClass21);
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Class<?> wildcardClass25 = stack23.getClass();
        java.lang.Class<?> wildcardClass26 = stack23.getClass();
        boolean boolean27 = stack23.isFull();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        stack28.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass37 = stack28.getClass();
        stack23.push((java.lang.Object) stack28);
        boolean boolean39 = stack23.isFull();
        int int40 = stack23.size();
        stack0.push((java.lang.Object) stack23);
        java.lang.Class<?> wildcardClass42 = stack0.getClass();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        int int7 = stack0.size();
        stack0.clear();
        boolean boolean9 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        int int10 = stack0.size();
        java.lang.Object obj11 = stack0.last();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        boolean boolean16 = stack12.isFull();
        boolean boolean17 = stack12.isFull();
        boolean boolean18 = stack12.isFull();
        boolean boolean19 = stack12.isEmpty();
        java.lang.Class<?> wildcardClass20 = stack12.getClass();
        stack0.push((java.lang.Object) stack12);
        java.lang.Class<?> wildcardClass22 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        int int12 = stack0.size();
        boolean boolean13 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        int int15 = stack14.size();
        stack14.clear();
        boolean boolean17 = stack14.isFull();
        stack14.clear();
        stack14.clear();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        stack20.clear();
        stack20.push((java.lang.Object) true);
        boolean boolean25 = stack20.isEmpty();
        int int26 = stack20.size();
        int int27 = stack20.size();
        stack14.push((java.lang.Object) stack20);
        int int29 = stack20.size();
        stack20.pop();
        stack0.push((java.lang.Object) stack20);
        int int32 = stack20.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        stack5.pop();
        stack5.push((java.lang.Object) false);
        boolean boolean20 = stack5.isEmpty();
        stack5.clear();
        boolean boolean22 = stack5.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        java.lang.Object obj19 = stack0.last();
        java.lang.Class<?> wildcardClass20 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.clear();
        stack0.push((java.lang.Object) stack16);
        java.lang.Class<?> wildcardClass21 = stack16.getClass();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        int int23 = stack22.size();
        stack22.clear();
        stack22.push((java.lang.Object) true);
        java.lang.Object obj27 = stack22.last();
        java.lang.Object obj28 = stack22.last();
        boolean boolean29 = stack22.isEmpty();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        boolean boolean31 = stack30.isEmpty();
        stack30.push((java.lang.Object) (short) 10);
        boolean boolean34 = stack30.isEmpty();
        stack30.clear();
        java.lang.Class<?> wildcardClass36 = stack30.getClass();
        boolean boolean37 = stack30.isEmpty();
        boolean boolean38 = stack30.isFull();
        stack22.push((java.lang.Object) stack30);
        stack16.push((java.lang.Object) stack30);
        boolean boolean41 = stack16.isEmpty();
        java.lang.Object obj42 = stack16.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + true + "'", obj27.equals(true));
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + true + "'", obj28.equals(true));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        stack13.clear();
        stack13.push((java.lang.Object) true);
        boolean boolean18 = stack13.isEmpty();
        stack13.clear();
        boolean boolean20 = stack13.isEmpty();
        java.lang.Class<?> wildcardClass21 = stack13.getClass();
        boolean boolean22 = stack13.isFull();
        stack0.push((java.lang.Object) boolean22);
        java.lang.Class<?> wildcardClass24 = stack0.getClass();
        boolean boolean25 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack26 = new jbhembise.testauto.example3.Stack();
        int int27 = stack26.size();
        java.lang.Object obj28 = null;
        stack26.push(obj28);
        stack26.pop();
        int int31 = stack26.size();
        stack26.clear();
        stack26.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass35 = stack26.getClass();
        boolean boolean36 = stack26.isEmpty();
        stack26.clear();
        stack26.clear();
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        boolean boolean40 = stack39.isEmpty();
        stack39.clear();
        jbhembise.testauto.example3.Stack stack42 = new jbhembise.testauto.example3.Stack();
        int int43 = stack42.size();
        java.lang.Object obj44 = null;
        stack42.push(obj44);
        stack42.pop();
        int int47 = stack42.size();
        stack42.clear();
        stack42.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass51 = stack42.getClass();
        stack39.push((java.lang.Object) stack42);
        stack26.push((java.lang.Object) stack39);
        stack39.pop();
        int int55 = stack39.size();
        stack39.clear();
        boolean boolean57 = stack39.isEmpty();
        stack0.push((java.lang.Object) boolean57);
        jbhembise.testauto.example3.Stack stack59 = new jbhembise.testauto.example3.Stack();
        int int60 = stack59.size();
        java.lang.Class<?> wildcardClass61 = stack59.getClass();
        java.lang.Class<?> wildcardClass62 = stack59.getClass();
        java.lang.Class<?> wildcardClass63 = stack59.getClass();
        stack59.clear();
        stack59.clear();
        jbhembise.testauto.example3.Stack stack66 = new jbhembise.testauto.example3.Stack();
        int int67 = stack66.size();
        java.lang.Object obj68 = null;
        stack66.push(obj68);
        stack66.pop();
        int int71 = stack66.size();
        stack66.clear();
        stack66.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass75 = stack66.getClass();
        stack59.push((java.lang.Object) wildcardClass75);
        jbhembise.testauto.example3.Stack stack77 = new jbhembise.testauto.example3.Stack();
        int int78 = stack77.size();
        stack77.clear();
        stack77.push((java.lang.Object) true);
        boolean boolean82 = stack77.isEmpty();
        stack77.pop();
        stack59.push((java.lang.Object) stack77);
        stack77.clear();
        boolean boolean86 = stack77.isFull();
        boolean boolean87 = stack77.isEmpty();
        stack0.push((java.lang.Object) stack77);
        boolean boolean89 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass27 = stack18.getClass();
        boolean boolean28 = stack18.isEmpty();
        stack18.clear();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Class<?> wildcardClass32 = stack30.getClass();
        java.lang.Class<?> wildcardClass33 = stack30.getClass();
        java.lang.Class<?> wildcardClass34 = stack30.getClass();
        stack18.push((java.lang.Object) wildcardClass34);
        stack0.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj37 = stack0.last();
        java.lang.Object obj38 = stack0.last();
        int int39 = stack0.size();
        stack0.clear();
        boolean boolean41 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        stack18.clear();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Class<?> wildcardClass29 = stack27.getClass();
        java.lang.Class<?> wildcardClass30 = stack27.getClass();
        java.lang.Class<?> wildcardClass31 = stack27.getClass();
        stack27.clear();
        stack27.clear();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        int int35 = stack34.size();
        java.lang.Object obj36 = null;
        stack34.push(obj36);
        stack34.pop();
        int int39 = stack34.size();
        stack34.clear();
        stack34.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass43 = stack34.getClass();
        stack27.push((java.lang.Object) wildcardClass43);
        stack18.push((java.lang.Object) wildcardClass43);
        int int46 = stack18.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        boolean boolean17 = stack0.isEmpty();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.pop();
        int int12 = stack0.size();
        boolean boolean13 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        int int9 = stack3.size();
        stack3.pop();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Object obj13 = null;
        stack11.push(obj13);
        stack11.pop();
        int int16 = stack11.size();
        stack11.clear();
        stack11.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass20 = stack11.getClass();
        boolean boolean21 = stack11.isFull();
        stack11.clear();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass24 = stack23.getClass();
        int int25 = stack23.size();
        stack23.push((java.lang.Object) (byte) 10);
        stack11.push((java.lang.Object) stack23);
        java.lang.Object obj29 = stack11.last();
        java.lang.Object obj30 = stack11.last();
        stack3.push((java.lang.Object) stack11);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        boolean boolean12 = stack0.isEmpty();
        boolean boolean13 = stack0.isFull();
        stack0.pop();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        int int16 = stack15.size();
        java.lang.Class<?> wildcardClass17 = stack15.getClass();
        java.lang.Class<?> wildcardClass18 = stack15.getClass();
        java.lang.Class<?> wildcardClass19 = stack15.getClass();
        stack15.clear();
        stack15.clear();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        int int23 = stack22.size();
        java.lang.Object obj24 = null;
        stack22.push(obj24);
        stack22.pop();
        int int27 = stack22.size();
        stack22.clear();
        stack22.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass31 = stack22.getClass();
        stack15.push((java.lang.Object) wildcardClass31);
        boolean boolean33 = stack15.isFull();
        boolean boolean34 = stack15.isFull();
        jbhembise.testauto.example3.Stack stack35 = new jbhembise.testauto.example3.Stack();
        int int36 = stack35.size();
        java.lang.Object obj37 = null;
        stack35.push(obj37);
        stack35.pop();
        int int40 = stack35.size();
        stack35.clear();
        stack35.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass44 = stack35.getClass();
        boolean boolean45 = stack35.isEmpty();
        stack35.clear();
        boolean boolean47 = stack35.isFull();
        java.lang.Class<?> wildcardClass48 = stack35.getClass();
        stack15.push((java.lang.Object) stack35);
        stack0.push((java.lang.Object) stack15);
        java.lang.Object obj51 = stack15.last();
        stack15.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        boolean boolean14 = stack11.isEmpty();
        stack0.push((java.lang.Object) boolean14);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) true);
        boolean boolean21 = stack16.isEmpty();
        stack16.pop();
        int int23 = stack16.size();
        stack0.push((java.lang.Object) int23);
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Class<?> wildcardClass27 = stack25.getClass();
        java.lang.Class<?> wildcardClass28 = stack25.getClass();
        java.lang.Class<?> wildcardClass29 = stack25.getClass();
        stack25.clear();
        stack25.clear();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        int int33 = stack32.size();
        java.lang.Object obj34 = null;
        stack32.push(obj34);
        stack32.pop();
        int int37 = stack32.size();
        stack32.clear();
        stack32.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass41 = stack32.getClass();
        stack25.push((java.lang.Object) wildcardClass41);
        jbhembise.testauto.example3.Stack stack43 = new jbhembise.testauto.example3.Stack();
        int int44 = stack43.size();
        stack43.clear();
        stack43.push((java.lang.Object) true);
        boolean boolean48 = stack43.isEmpty();
        stack43.pop();
        stack25.push((java.lang.Object) stack43);
        stack0.push((java.lang.Object) stack43);
        jbhembise.testauto.example3.Stack stack52 = new jbhembise.testauto.example3.Stack();
        int int53 = stack52.size();
        java.lang.Object obj54 = null;
        stack52.push(obj54);
        stack52.pop();
        int int57 = stack52.size();
        stack52.clear();
        stack52.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass61 = stack52.getClass();
        boolean boolean62 = stack52.isEmpty();
        int int63 = stack52.size();
        boolean boolean64 = stack52.isFull();
        java.lang.Class<?> wildcardClass65 = stack52.getClass();
        boolean boolean66 = stack52.isFull();
        stack43.push((java.lang.Object) stack52);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        java.lang.Object obj8 = stack0.last();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) true);
        boolean boolean15 = stack10.isEmpty();
        int int16 = stack10.size();
        java.lang.Class<?> wildcardClass17 = stack10.getClass();
        java.lang.Class<?> wildcardClass18 = stack10.getClass();
        stack0.push((java.lang.Object) stack10);
        stack10.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        boolean boolean11 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        boolean boolean13 = stack12.isEmpty();
        stack12.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass17 = stack16.getClass();
        int int18 = stack16.size();
        stack12.push((java.lang.Object) int18);
        int int20 = stack12.size();
        boolean boolean21 = stack12.isFull();
        boolean boolean22 = stack12.isFull();
        boolean boolean23 = stack12.isFull();
        stack0.push((java.lang.Object) boolean23);
        java.lang.Class<?> wildcardClass25 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        java.lang.Object obj5 = stack0.last();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        boolean boolean7 = stack6.isEmpty();
        stack6.clear();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Object obj11 = null;
        stack9.push(obj11);
        stack9.pop();
        int int14 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        stack6.push((java.lang.Object) stack9);
        stack9.clear();
        boolean boolean21 = stack9.isEmpty();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        int int23 = stack22.size();
        java.lang.Object obj24 = null;
        stack22.push(obj24);
        stack22.pop();
        int int27 = stack22.size();
        stack22.clear();
        stack22.push((java.lang.Object) 10);
        int int31 = stack22.size();
        boolean boolean32 = stack22.isEmpty();
        stack22.clear();
        stack9.push((java.lang.Object) stack22);
        boolean boolean35 = stack9.isEmpty();
        int int36 = stack9.size();
        stack0.push((java.lang.Object) int36);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + true + "'", obj5.equals(true));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        java.lang.Object obj28 = stack0.last();
        int int29 = stack0.size();
        java.lang.Object obj30 = stack0.last();
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        int int32 = stack31.size();
        java.lang.Object obj33 = null;
        stack31.push(obj33);
        stack31.pop();
        int int36 = stack31.size();
        stack31.clear();
        boolean boolean38 = stack31.isFull();
        java.lang.Class<?> wildcardClass39 = stack31.getClass();
        jbhembise.testauto.example3.Stack stack40 = new jbhembise.testauto.example3.Stack();
        int int41 = stack40.size();
        stack40.clear();
        stack40.push((java.lang.Object) true);
        boolean boolean45 = stack40.isEmpty();
        boolean boolean46 = stack40.isFull();
        int int47 = stack40.size();
        stack31.push((java.lang.Object) int47);
        java.lang.Class<?> wildcardClass49 = stack31.getClass();
        jbhembise.testauto.example3.Stack stack50 = new jbhembise.testauto.example3.Stack();
        int int51 = stack50.size();
        java.lang.Class<?> wildcardClass52 = stack50.getClass();
        java.lang.Class<?> wildcardClass53 = stack50.getClass();
        boolean boolean54 = stack50.isFull();
        jbhembise.testauto.example3.Stack stack55 = new jbhembise.testauto.example3.Stack();
        int int56 = stack55.size();
        java.lang.Object obj57 = null;
        stack55.push(obj57);
        stack55.pop();
        int int60 = stack55.size();
        stack55.clear();
        stack55.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass64 = stack55.getClass();
        stack50.push((java.lang.Object) stack55);
        jbhembise.testauto.example3.Stack stack66 = new jbhembise.testauto.example3.Stack();
        int int67 = stack66.size();
        java.lang.Object obj68 = null;
        stack66.push(obj68);
        java.lang.Class<?> wildcardClass70 = stack66.getClass();
        stack55.push((java.lang.Object) wildcardClass70);
        stack31.push((java.lang.Object) wildcardClass70);
        jbhembise.testauto.example3.Stack stack73 = new jbhembise.testauto.example3.Stack();
        int int74 = stack73.size();
        java.lang.Object obj75 = null;
        stack73.push(obj75);
        stack73.pop();
        int int78 = stack73.size();
        stack73.clear();
        stack73.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass82 = stack73.getClass();
        boolean boolean83 = stack73.isEmpty();
        stack73.clear();
        boolean boolean85 = stack73.isEmpty();
        stack31.push((java.lang.Object) stack73);
        boolean boolean87 = stack73.isEmpty();
        stack0.push((java.lang.Object) boolean87);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        boolean boolean14 = stack11.isEmpty();
        stack0.push((java.lang.Object) boolean14);
        stack0.pop();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        int int18 = stack17.size();
        stack17.clear();
        boolean boolean20 = stack17.isFull();
        stack17.clear();
        stack17.clear();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        stack23.clear();
        stack23.push((java.lang.Object) true);
        boolean boolean28 = stack23.isEmpty();
        int int29 = stack23.size();
        int int30 = stack23.size();
        stack17.push((java.lang.Object) stack23);
        int int32 = stack23.size();
        stack23.pop();
        stack0.push((java.lang.Object) stack23);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        stack0.pop();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        java.lang.Class<?> wildcardClass15 = stack11.getClass();
        stack11.clear();
        stack11.clear();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass27 = stack18.getClass();
        stack11.push((java.lang.Object) wildcardClass27);
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.pop();
        stack11.push((java.lang.Object) stack29);
        stack0.push((java.lang.Object) stack29);
        jbhembise.testauto.example3.Stack stack38 = new jbhembise.testauto.example3.Stack();
        int int39 = stack38.size();
        java.lang.Class<?> wildcardClass40 = stack38.getClass();
        java.lang.Class<?> wildcardClass41 = stack38.getClass();
        boolean boolean42 = stack38.isFull();
        jbhembise.testauto.example3.Stack stack43 = new jbhembise.testauto.example3.Stack();
        int int44 = stack43.size();
        java.lang.Object obj45 = null;
        stack43.push(obj45);
        stack43.pop();
        int int48 = stack43.size();
        stack43.clear();
        stack43.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass52 = stack43.getClass();
        stack38.push((java.lang.Object) stack43);
        boolean boolean54 = stack43.isEmpty();
        int int55 = stack43.size();
        stack0.push((java.lang.Object) int55);
        jbhembise.testauto.example3.Stack stack57 = new jbhembise.testauto.example3.Stack();
        int int58 = stack57.size();
        java.lang.Class<?> wildcardClass59 = stack57.getClass();
        java.lang.Class<?> wildcardClass60 = stack57.getClass();
        boolean boolean61 = stack57.isFull();
        jbhembise.testauto.example3.Stack stack62 = new jbhembise.testauto.example3.Stack();
        int int63 = stack62.size();
        java.lang.Object obj64 = null;
        stack62.push(obj64);
        stack62.pop();
        int int67 = stack62.size();
        stack62.clear();
        stack62.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass71 = stack62.getClass();
        stack57.push((java.lang.Object) stack62);
        stack62.pop();
        int int74 = stack62.size();
        boolean boolean75 = stack62.isEmpty();
        stack62.clear();
        stack0.push((java.lang.Object) stack62);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        stack0.pop();
        int int7 = stack0.size();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Class<?> wildcardClass12 = stack10.getClass();
        java.lang.Class<?> wildcardClass13 = stack10.getClass();
        boolean boolean14 = stack10.isFull();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        int int16 = stack15.size();
        java.lang.Object obj17 = null;
        stack15.push(obj17);
        stack15.pop();
        int int20 = stack15.size();
        stack15.clear();
        stack15.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass24 = stack15.getClass();
        stack10.push((java.lang.Object) stack15);
        boolean boolean26 = stack10.isFull();
        int int27 = stack10.size();
        boolean boolean28 = stack10.isEmpty();
        stack10.pop();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass39 = stack30.getClass();
        boolean boolean40 = stack30.isEmpty();
        stack30.clear();
        jbhembise.testauto.example3.Stack stack42 = new jbhembise.testauto.example3.Stack();
        int int43 = stack42.size();
        java.lang.Class<?> wildcardClass44 = stack42.getClass();
        java.lang.Class<?> wildcardClass45 = stack42.getClass();
        java.lang.Class<?> wildcardClass46 = stack42.getClass();
        stack30.push((java.lang.Object) wildcardClass46);
        stack10.push((java.lang.Object) wildcardClass46);
        stack10.clear();
        stack0.push((java.lang.Object) stack10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        boolean boolean4 = stack0.isFull();
        boolean boolean5 = stack0.isEmpty();
        java.lang.Object obj6 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj6);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        int int3 = stack0.size();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        boolean boolean5 = stack0.isFull();
        boolean boolean6 = stack0.isFull();
        boolean boolean7 = stack0.isEmpty();
        int int8 = stack0.size();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        boolean boolean17 = stack9.isEmpty();
        boolean boolean18 = stack9.isFull();
        boolean boolean19 = stack9.isEmpty();
        stack0.push((java.lang.Object) boolean19);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        int int6 = stack0.size();
        stack0.clear();
        boolean boolean8 = stack0.isEmpty();
        stack0.clear();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isEmpty();
        boolean boolean12 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        java.lang.Class<?> wildcardClass19 = stack9.getClass();
        java.lang.Object obj20 = null;
        stack9.push(obj20);
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass23 = stack22.getClass();
        int int24 = stack22.size();
        stack22.push((java.lang.Object) (byte) 10);
        boolean boolean27 = stack22.isEmpty();
        stack9.push((java.lang.Object) boolean27);
        boolean boolean29 = stack9.isEmpty();
        boolean boolean30 = stack9.isFull();
        java.lang.Class<?> wildcardClass31 = stack9.getClass();
        stack9.clear();
        jbhembise.testauto.example3.Stack stack33 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass34 = stack33.getClass();
        int int35 = stack33.size();
        stack33.push((java.lang.Object) (byte) 10);
        java.lang.Object obj38 = stack33.last();
        stack33.pop();
        jbhembise.testauto.example3.Stack stack40 = new jbhembise.testauto.example3.Stack();
        int int41 = stack40.size();
        stack40.clear();
        boolean boolean43 = stack40.isEmpty();
        java.lang.Class<?> wildcardClass44 = stack40.getClass();
        stack33.push((java.lang.Object) wildcardClass44);
        stack9.push((java.lang.Object) wildcardClass44);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + obj38 + "' != '" + (byte) 10 + "'", obj38.equals((byte) 10));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        boolean boolean12 = stack0.isFull();
        java.lang.Class<?> wildcardClass13 = stack0.getClass();
        boolean boolean14 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        boolean boolean13 = stack12.isEmpty();
        boolean boolean14 = stack12.isEmpty();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        boolean boolean16 = stack15.isEmpty();
        stack15.push((java.lang.Object) (short) 10);
        stack12.push((java.lang.Object) stack15);
        boolean boolean20 = stack12.isEmpty();
        java.lang.Class<?> wildcardClass21 = stack12.getClass();
        int int22 = stack12.size();
        java.lang.Object obj23 = stack12.last();
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        stack25.clear();
        boolean boolean28 = stack25.isFull();
        stack25.clear();
        boolean boolean30 = stack25.isFull();
        stack25.clear();
        boolean boolean32 = stack25.isEmpty();
        jbhembise.testauto.example3.Stack stack33 = new jbhembise.testauto.example3.Stack();
        int int34 = stack33.size();
        java.lang.Class<?> wildcardClass35 = stack33.getClass();
        java.lang.Class<?> wildcardClass36 = stack33.getClass();
        java.lang.Class<?> wildcardClass37 = stack33.getClass();
        boolean boolean38 = stack33.isEmpty();
        java.lang.Class<?> wildcardClass39 = stack33.getClass();
        stack25.push((java.lang.Object) stack33);
        stack25.clear();
        boolean boolean42 = stack25.isEmpty();
        boolean boolean43 = stack25.isFull();
        stack12.push((java.lang.Object) stack25);
        int int45 = stack25.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        java.lang.Object obj5 = stack0.last();
        boolean boolean6 = stack0.isFull();
        java.lang.Object obj7 = stack0.last();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        boolean boolean9 = stack8.isEmpty();
        stack8.push((java.lang.Object) (short) 10);
        boolean boolean12 = stack8.isEmpty();
        stack8.clear();
        java.lang.Class<?> wildcardClass14 = stack8.getClass();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        int int16 = stack15.size();
        java.lang.Class<?> wildcardClass17 = stack15.getClass();
        java.lang.Class<?> wildcardClass18 = stack15.getClass();
        stack15.clear();
        boolean boolean20 = stack15.isEmpty();
        stack8.push((java.lang.Object) stack15);
        int int22 = stack15.size();
        stack0.push((java.lang.Object) stack15);
        stack0.clear();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte) 10 + "'", obj5.equals((byte) 10));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + (byte) 10 + "'", obj7.equals((byte) 10));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        boolean boolean26 = stack18.isFull();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        boolean boolean28 = stack27.isEmpty();
        boolean boolean29 = stack27.isEmpty();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        int int36 = stack30.size();
        stack27.push((java.lang.Object) int36);
        stack18.push((java.lang.Object) stack27);
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass40 = stack39.getClass();
        int int41 = stack39.size();
        stack39.push((java.lang.Object) (byte) 10);
        int int44 = stack39.size();
        java.lang.Class<?> wildcardClass45 = stack39.getClass();
        int int46 = stack39.size();
        jbhembise.testauto.example3.Stack stack47 = new jbhembise.testauto.example3.Stack();
        boolean boolean48 = stack47.isEmpty();
        boolean boolean49 = stack47.isEmpty();
        jbhembise.testauto.example3.Stack stack50 = new jbhembise.testauto.example3.Stack();
        boolean boolean51 = stack50.isEmpty();
        stack50.push((java.lang.Object) (short) 10);
        stack47.push((java.lang.Object) stack50);
        int int55 = stack50.size();
        stack39.push((java.lang.Object) int55);
        stack18.push((java.lang.Object) stack39);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        java.lang.Class<?> wildcardClass26 = stack0.getClass();
        boolean boolean27 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        stack13.pop();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.clear();
        boolean boolean36 = stack29.isEmpty();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Class<?> wildcardClass39 = stack37.getClass();
        java.lang.Class<?> wildcardClass40 = stack37.getClass();
        stack37.push((java.lang.Object) 10L);
        boolean boolean43 = stack37.isFull();
        stack29.push((java.lang.Object) stack37);
        stack29.push((java.lang.Object) false);
        stack29.clear();
        int int48 = stack29.size();
        stack13.push((java.lang.Object) stack29);
        java.lang.Class<?> wildcardClass50 = stack29.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isFull();
        int int11 = stack0.size();
        java.lang.Object obj12 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + 10 + "'", obj12.equals(10));
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        boolean boolean7 = stack0.isFull();
        int int8 = stack0.size();
        int int9 = stack0.size();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        stack13.pop();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.clear();
        boolean boolean36 = stack29.isEmpty();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Class<?> wildcardClass39 = stack37.getClass();
        java.lang.Class<?> wildcardClass40 = stack37.getClass();
        stack37.push((java.lang.Object) 10L);
        boolean boolean43 = stack37.isFull();
        stack29.push((java.lang.Object) stack37);
        stack29.push((java.lang.Object) false);
        stack29.clear();
        int int48 = stack29.size();
        stack13.push((java.lang.Object) stack29);
        boolean boolean50 = stack13.isEmpty();
        java.lang.Object obj51 = stack13.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        java.lang.Object obj19 = null;
        stack5.push(obj19);
        java.lang.Class<?> wildcardClass21 = stack5.getClass();
        stack5.clear();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        boolean boolean24 = stack23.isEmpty();
        stack23.push((java.lang.Object) "hi!");
        int int27 = stack23.size();
        stack5.push((java.lang.Object) stack23);
        boolean boolean29 = stack23.isEmpty();
        int int30 = stack23.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        int int28 = stack13.size();
        boolean boolean29 = stack13.isFull();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass39 = stack30.getClass();
        boolean boolean40 = stack30.isFull();
        stack30.clear();
        jbhembise.testauto.example3.Stack stack42 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass43 = stack42.getClass();
        int int44 = stack42.size();
        stack42.push((java.lang.Object) (byte) 10);
        stack30.push((java.lang.Object) stack42);
        stack13.push((java.lang.Object) stack42);
        boolean boolean49 = stack13.isEmpty();
        stack13.pop();
        java.lang.Class<?> wildcardClass51 = stack13.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        java.lang.Object obj6 = stack0.last();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        boolean boolean16 = stack7.isEmpty();
        stack7.pop();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Class<?> wildcardClass20 = stack18.getClass();
        java.lang.Class<?> wildcardClass21 = stack18.getClass();
        java.lang.Class<?> wildcardClass22 = stack18.getClass();
        stack18.clear();
        stack18.clear();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Object obj27 = null;
        stack25.push(obj27);
        stack25.pop();
        int int30 = stack25.size();
        stack25.clear();
        stack25.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass34 = stack25.getClass();
        stack18.push((java.lang.Object) wildcardClass34);
        jbhembise.testauto.example3.Stack stack36 = new jbhembise.testauto.example3.Stack();
        int int37 = stack36.size();
        stack36.clear();
        stack36.push((java.lang.Object) true);
        boolean boolean41 = stack36.isEmpty();
        stack36.pop();
        stack18.push((java.lang.Object) stack36);
        stack7.push((java.lang.Object) stack36);
        stack7.clear();
        stack0.push((java.lang.Object) stack7);
        boolean boolean47 = stack0.isEmpty();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + true + "'", obj6.equals(true));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        java.lang.Class<?> wildcardClass10 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Object obj13 = null;
        stack11.push(obj13);
        stack11.pop();
        int int16 = stack11.size();
        stack11.clear();
        stack11.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass20 = stack11.getClass();
        boolean boolean21 = stack11.isEmpty();
        stack11.clear();
        stack11.clear();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        boolean boolean25 = stack24.isEmpty();
        stack24.clear();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Object obj29 = null;
        stack27.push(obj29);
        stack27.pop();
        int int32 = stack27.size();
        stack27.clear();
        stack27.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass36 = stack27.getClass();
        stack24.push((java.lang.Object) stack27);
        stack11.push((java.lang.Object) stack24);
        stack24.pop();
        jbhembise.testauto.example3.Stack stack40 = new jbhembise.testauto.example3.Stack();
        int int41 = stack40.size();
        stack40.clear();
        stack40.push((java.lang.Object) true);
        boolean boolean45 = stack40.isEmpty();
        stack40.clear();
        boolean boolean47 = stack40.isEmpty();
        jbhembise.testauto.example3.Stack stack48 = new jbhembise.testauto.example3.Stack();
        int int49 = stack48.size();
        java.lang.Class<?> wildcardClass50 = stack48.getClass();
        java.lang.Class<?> wildcardClass51 = stack48.getClass();
        stack48.push((java.lang.Object) 10L);
        boolean boolean54 = stack48.isFull();
        stack40.push((java.lang.Object) stack48);
        stack40.push((java.lang.Object) false);
        stack40.clear();
        int int59 = stack40.size();
        stack24.push((java.lang.Object) stack40);
        java.lang.Class<?> wildcardClass61 = stack24.getClass();
        java.lang.Object obj62 = stack24.last();
        stack0.push(obj62);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        int int8 = stack0.size();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        boolean boolean13 = stack9.isFull();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        int int15 = stack14.size();
        java.lang.Object obj16 = null;
        stack14.push(obj16);
        stack14.pop();
        int int19 = stack14.size();
        stack14.clear();
        stack14.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass23 = stack14.getClass();
        stack9.push((java.lang.Object) stack14);
        java.lang.Object obj25 = stack14.last();
        stack14.pop();
        java.lang.Class<?> wildcardClass27 = stack14.getClass();
        stack0.push((java.lang.Object) wildcardClass27);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + 10 + "'", obj25.equals(10));
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        java.lang.Object obj10 = stack0.last();
        boolean boolean11 = stack0.isEmpty();
        int int12 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + 10 + "'", obj10.equals(10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        java.lang.Class<?> wildcardClass15 = stack11.getClass();
        stack11.clear();
        java.lang.Class<?> wildcardClass17 = stack11.getClass();
        stack0.push((java.lang.Object) stack11);
        java.lang.Object obj19 = stack0.last();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Object obj22 = null;
        stack20.push(obj22);
        stack20.pop();
        int int25 = stack20.size();
        stack20.clear();
        stack20.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass29 = stack20.getClass();
        boolean boolean30 = stack20.isFull();
        stack20.clear();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass33 = stack32.getClass();
        int int34 = stack32.size();
        stack32.push((java.lang.Object) (byte) 10);
        stack20.push((java.lang.Object) stack32);
        java.lang.Object obj38 = stack20.last();
        java.lang.Object obj39 = stack20.last();
        jbhembise.testauto.example3.Stack stack40 = new jbhembise.testauto.example3.Stack();
        int int41 = stack40.size();
        java.lang.Object obj42 = null;
        stack40.push(obj42);
        stack40.pop();
        int int45 = stack40.size();
        int int46 = stack40.size();
        stack40.clear();
        boolean boolean48 = stack40.isEmpty();
        stack40.clear();
        java.lang.Class<?> wildcardClass50 = stack40.getClass();
        stack20.push((java.lang.Object) stack40);
        stack0.push((java.lang.Object) stack40);
        int int53 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        int int5 = stack0.size();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        int int7 = stack0.size();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        boolean boolean9 = stack8.isEmpty();
        boolean boolean10 = stack8.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        stack11.push((java.lang.Object) (short) 10);
        stack8.push((java.lang.Object) stack11);
        int int16 = stack11.size();
        stack0.push((java.lang.Object) int16);
        int int18 = stack0.size();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        boolean boolean20 = stack19.isEmpty();
        stack19.clear();
        boolean boolean22 = stack19.isFull();
        boolean boolean23 = stack19.isEmpty();
        java.lang.Class<?> wildcardClass24 = stack19.getClass();
        int int25 = stack19.size();
        stack19.clear();
        java.lang.Class<?> wildcardClass27 = stack19.getClass();
        stack0.push((java.lang.Object) stack19);
        java.lang.Object obj29 = stack0.last();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        boolean boolean17 = stack5.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        int int11 = stack0.size();
        java.lang.Class<?> wildcardClass12 = stack0.getClass();
        boolean boolean13 = stack0.isFull();
        java.lang.Object obj14 = stack0.last();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass16 = stack15.getClass();
        int int17 = stack15.size();
        stack15.push((java.lang.Object) (byte) 10);
        int int20 = stack15.size();
        java.lang.Class<?> wildcardClass21 = stack15.getClass();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        int int23 = stack22.size();
        java.lang.Class<?> wildcardClass24 = stack22.getClass();
        java.lang.Class<?> wildcardClass25 = stack22.getClass();
        java.lang.Class<?> wildcardClass26 = stack22.getClass();
        stack22.clear();
        stack22.clear();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        java.lang.Object obj31 = null;
        stack29.push(obj31);
        stack29.pop();
        int int34 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass38 = stack29.getClass();
        stack22.push((java.lang.Object) wildcardClass38);
        jbhembise.testauto.example3.Stack stack40 = new jbhembise.testauto.example3.Stack();
        boolean boolean41 = stack40.isEmpty();
        stack40.clear();
        boolean boolean43 = stack40.isFull();
        boolean boolean44 = stack40.isEmpty();
        jbhembise.testauto.example3.Stack stack45 = new jbhembise.testauto.example3.Stack();
        int int46 = stack45.size();
        java.lang.Class<?> wildcardClass47 = stack45.getClass();
        java.lang.Class<?> wildcardClass48 = stack45.getClass();
        boolean boolean49 = stack45.isFull();
        jbhembise.testauto.example3.Stack stack50 = new jbhembise.testauto.example3.Stack();
        int int51 = stack50.size();
        java.lang.Object obj52 = null;
        stack50.push(obj52);
        stack50.pop();
        int int55 = stack50.size();
        stack50.clear();
        stack50.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass59 = stack50.getClass();
        stack45.push((java.lang.Object) stack50);
        stack50.pop();
        int int62 = stack50.size();
        boolean boolean63 = stack50.isEmpty();
        stack40.push((java.lang.Object) boolean63);
        stack40.pop();
        jbhembise.testauto.example3.Stack stack66 = new jbhembise.testauto.example3.Stack();
        int int67 = stack66.size();
        java.lang.Object obj68 = null;
        stack66.push(obj68);
        stack66.pop();
        int int71 = stack66.size();
        stack66.clear();
        java.lang.Class<?> wildcardClass73 = stack66.getClass();
        stack40.push((java.lang.Object) stack66);
        stack22.push((java.lang.Object) stack40);
        java.lang.Class<?> wildcardClass76 = stack40.getClass();
        stack15.push((java.lang.Object) stack40);
        stack0.push((java.lang.Object) stack40);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + 0 + "'", obj14.equals(0));
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        stack0.clear();
        boolean boolean18 = stack0.isEmpty();
        boolean boolean19 = stack0.isFull();
        boolean boolean20 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        stack21.clear();
        stack21.push((java.lang.Object) true);
        boolean boolean26 = stack21.isEmpty();
        boolean boolean27 = stack21.isFull();
        stack21.pop();
        java.lang.Class<?> wildcardClass29 = stack21.getClass();
        stack21.clear();
        stack0.push((java.lang.Object) stack21);
        stack21.clear();
        boolean boolean33 = stack21.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        java.lang.Object obj4 = stack0.last();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.pop();
        int int7 = stack0.size();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        boolean boolean11 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack12.clear();
        stack12.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        java.lang.Object obj21 = null;
        stack19.push(obj21);
        stack19.pop();
        int int24 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass28 = stack19.getClass();
        stack12.push((java.lang.Object) wildcardClass28);
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) true);
        boolean boolean35 = stack30.isEmpty();
        stack30.pop();
        stack12.push((java.lang.Object) stack30);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        java.lang.Class<?> wildcardClass41 = stack39.getClass();
        java.lang.Class<?> wildcardClass42 = stack39.getClass();
        stack39.push((java.lang.Object) 10L);
        boolean boolean45 = stack39.isFull();
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass47 = stack46.getClass();
        int int48 = stack46.size();
        stack39.push((java.lang.Object) int48);
        int int50 = stack39.size();
        java.lang.Class<?> wildcardClass51 = stack39.getClass();
        stack0.push((java.lang.Object) stack39);
        java.lang.Object obj53 = stack39.last();
        stack39.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + 0 + "'", obj53.equals(0));
    }
}

