package jbhembise.testauto.example3;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        boolean boolean3 = stack0.isEmpty();
        stack0.clear();
        int int5 = stack0.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        int int11 = stack0.size();
        java.lang.Class<?> wildcardClass12 = stack0.getClass();
        boolean boolean13 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        boolean boolean17 = stack0.isEmpty();
        boolean boolean18 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass19 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Class<?> wildcardClass16 = stack0.getClass();
        boolean boolean17 = stack0.isFull();
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        boolean boolean19 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        java.lang.Object obj7 = stack0.last();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + 10L + "'", obj7.equals(10L));
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        stack5.pop();
        int int18 = stack5.size();
        stack5.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.clear();
        int int4 = stack0.size();
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        java.lang.Object obj5 = stack0.last();
        java.lang.Object obj6 = stack0.last();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte) 10 + "'", obj5.equals((byte) 10));
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + (byte) 10 + "'", obj6.equals((byte) 10));
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Class<?> wildcardClass30 = stack28.getClass();
        java.lang.Class<?> wildcardClass31 = stack28.getClass();
        java.lang.Class<?> wildcardClass32 = stack28.getClass();
        stack28.clear();
        stack28.clear();
        jbhembise.testauto.example3.Stack stack35 = new jbhembise.testauto.example3.Stack();
        int int36 = stack35.size();
        java.lang.Object obj37 = null;
        stack35.push(obj37);
        stack35.pop();
        int int40 = stack35.size();
        stack35.clear();
        stack35.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass44 = stack35.getClass();
        stack28.push((java.lang.Object) wildcardClass44);
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        int int47 = stack46.size();
        stack46.clear();
        stack46.push((java.lang.Object) true);
        boolean boolean51 = stack46.isEmpty();
        stack46.pop();
        stack28.push((java.lang.Object) stack46);
        boolean boolean54 = stack46.isFull();
        stack13.push((java.lang.Object) boolean54);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        boolean boolean4 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Class<?> wildcardClass7 = stack5.getClass();
        java.lang.Class<?> wildcardClass8 = stack5.getClass();
        boolean boolean9 = stack5.isFull();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass19 = stack10.getClass();
        stack5.push((java.lang.Object) stack10);
        stack10.pop();
        int int22 = stack10.size();
        boolean boolean23 = stack10.isEmpty();
        stack0.push((java.lang.Object) boolean23);
        java.lang.Object obj25 = stack0.last();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + true + "'", obj25.equals(true));
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        stack0.pop();
        boolean boolean11 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        int int17 = stack0.size();
        int int18 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        boolean boolean7 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        java.lang.Object obj5 = stack0.last();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + true + "'", obj5.equals(true));
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        boolean boolean5 = stack0.isFull();
        int int6 = stack0.size();
        boolean boolean7 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        java.lang.Object obj8 = stack0.last();
        boolean boolean9 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        boolean boolean12 = stack0.isEmpty();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        stack5.pop();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.clear();
        boolean boolean25 = stack18.isEmpty();
        stack5.push((java.lang.Object) boolean25);
        stack5.pop();
        int int28 = stack5.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        int int8 = stack0.size();
        stack0.push((java.lang.Object) 2);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        stack0.clear();
        int int8 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isFull();
        stack0.pop();
        boolean boolean13 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        int int5 = stack4.size();
        java.lang.Class<?> wildcardClass6 = stack4.getClass();
        java.lang.Class<?> wildcardClass7 = stack4.getClass();
        boolean boolean8 = stack4.isFull();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Object obj11 = null;
        stack9.push(obj11);
        stack9.pop();
        int int14 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        stack4.push((java.lang.Object) stack9);
        boolean boolean20 = stack4.isFull();
        stack4.clear();
        boolean boolean22 = stack4.isFull();
        stack0.push((java.lang.Object) stack4);
        java.lang.Object obj24 = stack0.last();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj24);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = null;
        stack0.push(obj16);
        java.lang.Object obj18 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        stack5.pop();
        int int18 = stack5.size();
        boolean boolean19 = stack5.isEmpty();
        stack5.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        int int8 = stack0.size();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        stack5.pop();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.clear();
        boolean boolean25 = stack18.isEmpty();
        stack5.push((java.lang.Object) boolean25);
        stack5.clear();
        java.lang.Object obj28 = null;
        stack5.push(obj28);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isFull();
        boolean boolean6 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        stack0.push((java.lang.Object) false);
        stack0.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        stack19.clear();
        boolean boolean22 = stack19.isFull();
        boolean boolean23 = stack19.isFull();
        stack0.push((java.lang.Object) boolean23);
        java.lang.Class<?> wildcardClass25 = stack0.getClass();
        java.lang.Object obj26 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + false + "'", obj26.equals(false));
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        int int5 = stack0.size();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        stack0.pop();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        boolean boolean12 = stack8.isFull();
        boolean boolean13 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        boolean boolean15 = stack0.isFull();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.push((java.lang.Object) (byte) 100);
        boolean boolean14 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass15 = stack0.getClass();
        int int16 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        stack3.clear();
        boolean boolean9 = stack3.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass6 = stack5.getClass();
        int int7 = stack5.size();
        stack0.push((java.lang.Object) int7);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        boolean boolean5 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        int int7 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        java.lang.Object obj10 = stack0.last();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Object obj13 = null;
        stack11.push(obj13);
        stack11.pop();
        int int16 = stack11.size();
        stack11.clear();
        stack11.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass20 = stack11.getClass();
        boolean boolean21 = stack11.isFull();
        stack11.clear();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass24 = stack23.getClass();
        int int25 = stack23.size();
        stack23.push((java.lang.Object) (byte) 10);
        stack11.push((java.lang.Object) stack23);
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        java.lang.Object obj31 = null;
        stack29.push(obj31);
        stack29.pop();
        int int34 = stack29.size();
        stack29.clear();
        boolean boolean36 = stack29.isFull();
        java.lang.Class<?> wildcardClass37 = stack29.getClass();
        stack23.push((java.lang.Object) stack29);
        boolean boolean39 = stack23.isFull();
        java.lang.Object obj40 = stack23.last();
        stack0.push(obj40);
        boolean boolean42 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + 10 + "'", obj10.equals(10));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        boolean boolean13 = stack12.isEmpty();
        boolean boolean14 = stack12.isEmpty();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        boolean boolean16 = stack15.isEmpty();
        stack15.push((java.lang.Object) (short) 10);
        stack12.push((java.lang.Object) stack15);
        boolean boolean20 = stack12.isEmpty();
        java.lang.Class<?> wildcardClass21 = stack12.getClass();
        int int22 = stack12.size();
        java.lang.Object obj23 = stack12.last();
        stack0.push((java.lang.Object) stack12);
        int int25 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) true);
        boolean boolean21 = stack16.isEmpty();
        stack16.clear();
        boolean boolean23 = stack16.isEmpty();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Class<?> wildcardClass26 = stack24.getClass();
        java.lang.Class<?> wildcardClass27 = stack24.getClass();
        stack24.push((java.lang.Object) 10L);
        boolean boolean30 = stack24.isFull();
        stack16.push((java.lang.Object) stack24);
        java.lang.Object obj32 = stack16.last();
        stack16.clear();
        java.lang.Class<?> wildcardClass34 = stack16.getClass();
        stack8.push((java.lang.Object) stack16);
        boolean boolean36 = stack8.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        int int11 = stack0.size();
        stack0.clear();
        java.lang.Class<?> wildcardClass13 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        stack0.pop();
        boolean boolean19 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        java.lang.Object obj8 = stack3.last();
        stack3.pop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 10 + "'", obj8.equals((short) 10));
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        java.lang.Class<?> wildcardClass12 = stack0.getClass();
        java.lang.Object obj13 = stack0.last();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + obj13 + "' != '" + 10 + "'", obj13.equals(10));
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        boolean boolean13 = stack0.isFull();
        stack0.clear();
        boolean boolean15 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        boolean boolean5 = stack0.isFull();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        java.lang.Class<?> wildcardClass12 = stack8.getClass();
        boolean boolean13 = stack8.isEmpty();
        java.lang.Class<?> wildcardClass14 = stack8.getClass();
        stack0.push((java.lang.Object) stack8);
        stack0.clear();
        java.lang.Class<?> wildcardClass17 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        java.lang.Object obj19 = null;
        stack5.push(obj19);
        java.lang.Class<?> wildcardClass21 = stack5.getClass();
        stack5.pop();
        boolean boolean23 = stack5.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isFull();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        boolean boolean9 = stack0.isEmpty();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack0.size();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        java.lang.Class<?> wildcardClass10 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        int int10 = stack0.size();
        int int11 = stack0.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        stack0.pop();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        java.lang.Class<?> wildcardClass15 = stack11.getClass();
        stack11.clear();
        stack11.clear();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass27 = stack18.getClass();
        stack11.push((java.lang.Object) wildcardClass27);
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.pop();
        stack11.push((java.lang.Object) stack29);
        stack0.push((java.lang.Object) stack29);
        jbhembise.testauto.example3.Stack stack38 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass39 = stack38.getClass();
        int int40 = stack38.size();
        stack0.push((java.lang.Object) int40);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        int int6 = stack0.size();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        boolean boolean17 = stack7.isFull();
        stack7.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass20 = stack19.getClass();
        int int21 = stack19.size();
        stack19.push((java.lang.Object) (byte) 10);
        stack7.push((java.lang.Object) stack19);
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Object obj27 = null;
        stack25.push(obj27);
        stack25.pop();
        int int30 = stack25.size();
        stack25.clear();
        boolean boolean32 = stack25.isFull();
        java.lang.Class<?> wildcardClass33 = stack25.getClass();
        stack19.push((java.lang.Object) stack25);
        boolean boolean35 = stack19.isFull();
        java.lang.Object obj36 = stack19.last();
        stack0.push((java.lang.Object) stack19);
        jbhembise.testauto.example3.Stack stack38 = new jbhembise.testauto.example3.Stack();
        int int39 = stack38.size();
        java.lang.Object obj40 = null;
        stack38.push(obj40);
        stack38.pop();
        int int43 = stack38.size();
        stack38.clear();
        boolean boolean45 = stack38.isFull();
        stack0.push((java.lang.Object) boolean45);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        boolean boolean28 = stack0.isFull();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isFull();
        boolean boolean12 = stack0.isFull();
        boolean boolean13 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        int int13 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        boolean boolean26 = stack18.isFull();
        boolean boolean27 = stack18.isFull();
        int int28 = stack18.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        int int8 = stack0.size();
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 0 + "'", obj9.equals(0));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        stack13.pop();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.clear();
        boolean boolean36 = stack29.isEmpty();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Class<?> wildcardClass39 = stack37.getClass();
        java.lang.Class<?> wildcardClass40 = stack37.getClass();
        stack37.push((java.lang.Object) 10L);
        boolean boolean43 = stack37.isFull();
        stack29.push((java.lang.Object) stack37);
        stack29.push((java.lang.Object) false);
        stack29.clear();
        int int48 = stack29.size();
        stack13.push((java.lang.Object) stack29);
        java.lang.Class<?> wildcardClass50 = stack13.getClass();
        boolean boolean51 = stack13.isFull();
        int int52 = stack13.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.clear();
        stack0.push((java.lang.Object) stack16);
        boolean boolean21 = stack16.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        boolean boolean6 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        int int8 = stack0.size();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        int int12 = stack0.size();
        boolean boolean13 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) true);
        boolean boolean21 = stack16.isEmpty();
        stack16.clear();
        boolean boolean23 = stack16.isEmpty();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Class<?> wildcardClass26 = stack24.getClass();
        java.lang.Class<?> wildcardClass27 = stack24.getClass();
        stack24.push((java.lang.Object) 10L);
        boolean boolean30 = stack24.isFull();
        stack16.push((java.lang.Object) stack24);
        java.lang.Object obj32 = stack16.last();
        stack16.clear();
        java.lang.Class<?> wildcardClass34 = stack16.getClass();
        stack8.push((java.lang.Object) stack16);
        boolean boolean36 = stack8.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        int int9 = stack0.size();
        boolean boolean10 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        boolean boolean5 = stack0.isFull();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        int int8 = stack0.size();
        int int9 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        stack5.pop();
        int int18 = stack5.size();
        boolean boolean19 = stack5.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        int int6 = stack0.size();
        boolean boolean7 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        boolean boolean9 = stack8.isEmpty();
        stack8.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack8.push((java.lang.Object) int14);
        boolean boolean16 = stack8.isEmpty();
        stack0.push((java.lang.Object) boolean16);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isFull();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj14 = null;
        stack0.push(obj14);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.clear();
        stack0.push((java.lang.Object) stack16);
        int int21 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        int int10 = stack0.size();
        boolean boolean11 = stack0.isFull();
        boolean boolean12 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        stack13.clear();
        stack13.push((java.lang.Object) true);
        boolean boolean18 = stack13.isEmpty();
        stack13.clear();
        boolean boolean20 = stack13.isEmpty();
        java.lang.Class<?> wildcardClass21 = stack13.getClass();
        boolean boolean22 = stack13.isFull();
        stack0.push((java.lang.Object) boolean22);
        java.lang.Class<?> wildcardClass24 = stack0.getClass();
        boolean boolean25 = stack0.isFull();
        stack0.pop();
        stack0.clear();
        boolean boolean28 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        boolean boolean16 = stack0.isFull();
        boolean boolean17 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        java.lang.Object obj18 = stack0.last();
        int int19 = stack0.size();
        java.lang.Class<?> wildcardClass20 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Class<?> wildcardClass23 = stack21.getClass();
        java.lang.Class<?> wildcardClass24 = stack21.getClass();
        boolean boolean25 = stack21.isFull();
        jbhembise.testauto.example3.Stack stack26 = new jbhembise.testauto.example3.Stack();
        int int27 = stack26.size();
        java.lang.Object obj28 = null;
        stack26.push(obj28);
        stack26.pop();
        int int31 = stack26.size();
        stack26.clear();
        stack26.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass35 = stack26.getClass();
        stack21.push((java.lang.Object) stack26);
        boolean boolean37 = stack21.isFull();
        stack21.clear();
        java.lang.Class<?> wildcardClass39 = stack21.getClass();
        stack0.push((java.lang.Object) wildcardClass39);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        stack6.push((java.lang.Object) true);
        boolean boolean11 = stack6.isEmpty();
        int int12 = stack6.size();
        int int13 = stack6.size();
        stack0.push((java.lang.Object) stack6);
        int int15 = stack6.size();
        stack6.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        boolean boolean2 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        boolean boolean5 = stack0.isEmpty();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        java.lang.Class<?> wildcardClass17 = stack5.getClass();
        int int18 = stack5.size();
        java.lang.Class<?> wildcardClass19 = stack5.getClass();
        java.lang.Class<?> wildcardClass20 = stack5.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.clear();
        int int4 = stack0.size();
        boolean boolean5 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.clear();
        int int4 = stack0.size();
        stack0.clear();
        boolean boolean6 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        boolean boolean2 = stack0.isEmpty();
        boolean boolean3 = stack0.isEmpty();
        boolean boolean4 = stack0.isEmpty();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        stack6.push((java.lang.Object) true);
        boolean boolean11 = stack6.isEmpty();
        int int12 = stack6.size();
        int int13 = stack6.size();
        stack0.push((java.lang.Object) stack6);
        java.lang.Class<?> wildcardClass15 = stack6.getClass();
        stack6.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        boolean boolean26 = stack18.isFull();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        boolean boolean28 = stack27.isEmpty();
        boolean boolean29 = stack27.isEmpty();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        int int36 = stack30.size();
        stack27.push((java.lang.Object) int36);
        stack18.push((java.lang.Object) stack27);
        stack27.pop();
        java.lang.Class<?> wildcardClass40 = stack27.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        boolean boolean17 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass19 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        int int11 = stack0.size();
        java.lang.Class<?> wildcardClass12 = stack0.getClass();
        boolean boolean13 = stack0.isFull();
        boolean boolean14 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        stack0.clear();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        java.lang.Class<?> wildcardClass19 = stack5.getClass();
        stack5.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) "hi!");
        int int4 = stack0.size();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Class<?> wildcardClass7 = stack5.getClass();
        java.lang.Class<?> wildcardClass8 = stack5.getClass();
        stack5.push((java.lang.Object) 10L);
        stack5.pop();
        boolean boolean12 = stack5.isFull();
        stack0.push((java.lang.Object) stack5);
        boolean boolean14 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        boolean boolean14 = stack11.isEmpty();
        stack0.push((java.lang.Object) boolean14);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) true);
        boolean boolean21 = stack16.isEmpty();
        stack16.pop();
        int int23 = stack16.size();
        stack0.push((java.lang.Object) int23);
        java.lang.Object obj25 = stack0.last();
        jbhembise.testauto.example3.Stack stack26 = new jbhembise.testauto.example3.Stack();
        int int27 = stack26.size();
        java.lang.Object obj28 = null;
        stack26.push(obj28);
        stack26.pop();
        int int31 = stack26.size();
        stack26.clear();
        stack26.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass35 = stack26.getClass();
        boolean boolean36 = stack26.isEmpty();
        stack26.clear();
        stack26.clear();
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        boolean boolean40 = stack39.isEmpty();
        stack39.clear();
        jbhembise.testauto.example3.Stack stack42 = new jbhembise.testauto.example3.Stack();
        int int43 = stack42.size();
        java.lang.Object obj44 = null;
        stack42.push(obj44);
        stack42.pop();
        int int47 = stack42.size();
        stack42.clear();
        stack42.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass51 = stack42.getClass();
        stack39.push((java.lang.Object) stack42);
        stack26.push((java.lang.Object) stack39);
        java.lang.Object obj54 = stack26.last();
        int int55 = stack26.size();
        stack0.push((java.lang.Object) stack26);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + 0 + "'", obj25.equals(0));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        stack0.clear();
        boolean boolean9 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        stack0.clear();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Class<?> wildcardClass12 = stack10.getClass();
        java.lang.Class<?> wildcardClass13 = stack10.getClass();
        boolean boolean14 = stack10.isFull();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        int int16 = stack15.size();
        java.lang.Object obj17 = null;
        stack15.push(obj17);
        stack15.pop();
        int int20 = stack15.size();
        stack15.clear();
        stack15.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass24 = stack15.getClass();
        stack10.push((java.lang.Object) stack15);
        java.lang.Object obj26 = stack15.last();
        stack15.pop();
        stack0.push((java.lang.Object) stack15);
        java.lang.Object obj29 = stack0.last();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + 10 + "'", obj26.equals(10));
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        int int9 = stack0.size();
        java.lang.Class<?> wildcardClass10 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        stack11.clear();
        boolean boolean14 = stack11.isFull();
        stack11.clear();
        stack11.clear();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        int int18 = stack17.size();
        stack17.clear();
        stack17.push((java.lang.Object) true);
        boolean boolean22 = stack17.isEmpty();
        int int23 = stack17.size();
        int int24 = stack17.size();
        stack11.push((java.lang.Object) stack17);
        java.lang.Class<?> wildcardClass26 = stack11.getClass();
        stack0.push((java.lang.Object) wildcardClass26);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isFull();
        int int11 = stack0.size();
        boolean boolean12 = stack0.isFull();
        java.lang.Object obj13 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + obj13 + "' != '" + 10 + "'", obj13.equals(10));
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        int int9 = stack3.size();
        int int10 = stack3.size();
        boolean boolean11 = stack3.isFull();
        boolean boolean12 = stack3.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Class<?> wildcardClass16 = stack0.getClass();
        boolean boolean17 = stack0.isFull();
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Class<?> wildcardClass22 = stack20.getClass();
        java.lang.Class<?> wildcardClass23 = stack20.getClass();
        boolean boolean24 = stack20.isFull();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Object obj27 = null;
        stack25.push(obj27);
        stack25.pop();
        int int30 = stack25.size();
        stack25.clear();
        stack25.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass34 = stack25.getClass();
        stack20.push((java.lang.Object) stack25);
        jbhembise.testauto.example3.Stack stack36 = new jbhembise.testauto.example3.Stack();
        int int37 = stack36.size();
        stack36.clear();
        stack36.clear();
        stack20.push((java.lang.Object) stack36);
        stack0.push((java.lang.Object) stack20);
        boolean boolean42 = stack20.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        boolean boolean7 = stack6.isEmpty();
        stack6.clear();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Object obj11 = null;
        stack9.push(obj11);
        stack9.pop();
        int int14 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        stack6.push((java.lang.Object) stack9);
        stack9.clear();
        boolean boolean21 = stack9.isEmpty();
        int int22 = stack9.size();
        int int23 = stack9.size();
        stack0.push((java.lang.Object) int23);
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        boolean boolean26 = stack25.isEmpty();
        stack25.clear();
        boolean boolean28 = stack25.isFull();
        boolean boolean29 = stack25.isEmpty();
        java.lang.Class<?> wildcardClass30 = stack25.getClass();
        stack0.push((java.lang.Object) stack25);
        boolean boolean32 = stack25.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isFull();
        boolean boolean11 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        boolean boolean16 = stack12.isFull();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        int int18 = stack17.size();
        java.lang.Object obj19 = null;
        stack17.push(obj19);
        stack17.pop();
        int int22 = stack17.size();
        stack17.clear();
        stack17.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass26 = stack17.getClass();
        stack12.push((java.lang.Object) stack17);
        stack17.pop();
        int int29 = stack17.size();
        boolean boolean30 = stack17.isEmpty();
        stack17.clear();
        stack0.push((java.lang.Object) stack17);
        jbhembise.testauto.example3.Stack stack33 = new jbhembise.testauto.example3.Stack();
        int int34 = stack33.size();
        java.lang.Object obj35 = null;
        stack33.push(obj35);
        stack33.pop();
        int int38 = stack33.size();
        stack33.clear();
        stack33.push((java.lang.Object) 10);
        java.lang.Object obj42 = stack33.last();
        boolean boolean43 = stack33.isEmpty();
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        boolean boolean45 = stack44.isEmpty();
        boolean boolean46 = stack44.isEmpty();
        jbhembise.testauto.example3.Stack stack47 = new jbhembise.testauto.example3.Stack();
        boolean boolean48 = stack47.isEmpty();
        stack47.push((java.lang.Object) (short) 10);
        stack44.push((java.lang.Object) stack47);
        boolean boolean52 = stack44.isEmpty();
        java.lang.Class<?> wildcardClass53 = stack44.getClass();
        int int54 = stack44.size();
        java.lang.Object obj55 = stack44.last();
        stack33.push(obj55);
        stack17.push(obj55);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + obj42 + "' != '" + 10 + "'", obj42.equals(10));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(obj55);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        boolean boolean5 = stack0.isFull();
        int int6 = stack0.size();
        boolean boolean7 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.clear();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        int int5 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        int int12 = stack0.size();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.pop();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        int int16 = stack15.size();
        stack15.clear();
        boolean boolean18 = stack15.isFull();
        java.lang.Class<?> wildcardClass19 = stack15.getClass();
        stack0.push((java.lang.Object) stack15);
        java.lang.Object obj21 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        java.lang.Object obj18 = null;
        stack5.push(obj18);
        stack5.clear();
        boolean boolean21 = stack5.isEmpty();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        int int23 = stack22.size();
        stack22.clear();
        stack22.push((java.lang.Object) true);
        boolean boolean27 = stack22.isEmpty();
        stack22.clear();
        boolean boolean29 = stack22.isEmpty();
        java.lang.Class<?> wildcardClass30 = stack22.getClass();
        boolean boolean31 = stack22.isFull();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        int int33 = stack32.size();
        java.lang.Object obj34 = null;
        stack32.push(obj34);
        stack32.pop();
        int int37 = stack32.size();
        stack32.clear();
        stack32.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass41 = stack32.getClass();
        boolean boolean42 = stack32.isFull();
        stack32.clear();
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass45 = stack44.getClass();
        int int46 = stack44.size();
        stack44.push((java.lang.Object) (byte) 10);
        stack32.push((java.lang.Object) stack44);
        jbhembise.testauto.example3.Stack stack50 = new jbhembise.testauto.example3.Stack();
        int int51 = stack50.size();
        java.lang.Object obj52 = null;
        stack50.push(obj52);
        stack50.pop();
        int int55 = stack50.size();
        stack50.clear();
        boolean boolean57 = stack50.isFull();
        java.lang.Class<?> wildcardClass58 = stack50.getClass();
        stack44.push((java.lang.Object) stack50);
        boolean boolean60 = stack44.isFull();
        java.lang.Object obj61 = stack44.last();
        stack44.pop();
        stack22.push((java.lang.Object) stack44);
        int int64 = stack22.size();
        stack5.push((java.lang.Object) int64);
        boolean boolean66 = stack5.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        java.lang.Object obj17 = stack5.last();
        int int18 = stack5.size();
        stack5.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + obj17 + "' != '" + 10 + "'", obj17.equals(10));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        stack0.push((java.lang.Object) false);
        stack0.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        boolean boolean20 = stack19.isEmpty();
        boolean boolean21 = stack19.isEmpty();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        boolean boolean23 = stack22.isEmpty();
        stack22.push((java.lang.Object) (short) 10);
        stack19.push((java.lang.Object) stack22);
        boolean boolean27 = stack19.isEmpty();
        java.lang.Object obj28 = stack19.last();
        int int29 = stack19.size();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Class<?> wildcardClass32 = stack30.getClass();
        java.lang.Class<?> wildcardClass33 = stack30.getClass();
        boolean boolean34 = stack30.isFull();
        jbhembise.testauto.example3.Stack stack35 = new jbhembise.testauto.example3.Stack();
        int int36 = stack35.size();
        java.lang.Object obj37 = null;
        stack35.push(obj37);
        stack35.pop();
        int int40 = stack35.size();
        stack35.clear();
        stack35.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass44 = stack35.getClass();
        stack30.push((java.lang.Object) stack35);
        boolean boolean46 = stack30.isFull();
        int int47 = stack30.size();
        stack19.push((java.lang.Object) stack30);
        boolean boolean49 = stack19.isFull();
        stack19.pop();
        stack0.push((java.lang.Object) stack19);
        boolean boolean52 = stack19.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        int int9 = stack0.size();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        boolean boolean15 = stack11.isFull();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack11.push((java.lang.Object) stack16);
        java.lang.Class<?> wildcardClass27 = stack11.getClass();
        boolean boolean28 = stack11.isFull();
        stack0.push((java.lang.Object) boolean28);
        int int30 = stack0.size();
        int int31 = stack0.size();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        int int33 = stack32.size();
        java.lang.Object obj34 = null;
        stack32.push(obj34);
        stack32.pop();
        int int37 = stack32.size();
        int int38 = stack32.size();
        stack32.clear();
        boolean boolean40 = stack32.isEmpty();
        stack0.push((java.lang.Object) boolean40);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        int int11 = stack0.size();
        java.lang.Class<?> wildcardClass12 = stack0.getClass();
        boolean boolean13 = stack0.isFull();
        java.lang.Object obj14 = stack0.last();
        int int15 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + 0 + "'", obj14.equals(0));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        boolean boolean14 = stack11.isEmpty();
        stack0.push((java.lang.Object) boolean14);
        boolean boolean16 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass17 = stack0.getClass();
        boolean boolean18 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Class<?> wildcardClass7 = stack5.getClass();
        java.lang.Class<?> wildcardClass8 = stack5.getClass();
        boolean boolean9 = stack5.isFull();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass19 = stack10.getClass();
        stack5.push((java.lang.Object) stack10);
        boolean boolean21 = stack10.isEmpty();
        int int22 = stack10.size();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Object obj25 = null;
        stack23.push(obj25);
        stack23.pop();
        int int28 = stack23.size();
        stack23.clear();
        stack23.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass32 = stack23.getClass();
        boolean boolean33 = stack23.isFull();
        stack23.clear();
        jbhembise.testauto.example3.Stack stack35 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass36 = stack35.getClass();
        int int37 = stack35.size();
        stack35.push((java.lang.Object) (byte) 10);
        stack23.push((java.lang.Object) stack35);
        stack23.clear();
        stack10.push((java.lang.Object) stack23);
        boolean boolean43 = stack10.isEmpty();
        stack0.push((java.lang.Object) stack10);
        java.lang.Object obj45 = stack10.last();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        stack13.pop();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.clear();
        boolean boolean36 = stack29.isEmpty();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Class<?> wildcardClass39 = stack37.getClass();
        java.lang.Class<?> wildcardClass40 = stack37.getClass();
        stack37.push((java.lang.Object) 10L);
        boolean boolean43 = stack37.isFull();
        stack29.push((java.lang.Object) stack37);
        stack29.push((java.lang.Object) false);
        stack29.clear();
        int int48 = stack29.size();
        stack13.push((java.lang.Object) stack29);
        java.lang.Class<?> wildcardClass50 = stack13.getClass();
        java.lang.Object obj51 = stack13.last();
        boolean boolean52 = stack13.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isEmpty();
        boolean boolean5 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        stack18.clear();
        boolean boolean27 = stack18.isFull();
        boolean boolean28 = stack18.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.pop();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        int int16 = stack15.size();
        stack15.clear();
        boolean boolean18 = stack15.isFull();
        java.lang.Class<?> wildcardClass19 = stack15.getClass();
        stack0.push((java.lang.Object) stack15);
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Class<?> wildcardClass23 = stack21.getClass();
        java.lang.Class<?> wildcardClass24 = stack21.getClass();
        boolean boolean25 = stack21.isFull();
        jbhembise.testauto.example3.Stack stack26 = new jbhembise.testauto.example3.Stack();
        int int27 = stack26.size();
        java.lang.Object obj28 = null;
        stack26.push(obj28);
        stack26.pop();
        int int31 = stack26.size();
        stack26.clear();
        stack26.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass35 = stack26.getClass();
        stack21.push((java.lang.Object) stack26);
        boolean boolean37 = stack21.isFull();
        int int38 = stack21.size();
        boolean boolean39 = stack21.isEmpty();
        stack0.push((java.lang.Object) boolean39);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Object obj11 = null;
        stack9.push(obj11);
        stack9.pop();
        int int14 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        boolean boolean19 = stack9.isEmpty();
        stack9.clear();
        stack9.clear();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        boolean boolean23 = stack22.isEmpty();
        stack22.clear();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Object obj27 = null;
        stack25.push(obj27);
        stack25.pop();
        int int30 = stack25.size();
        stack25.clear();
        stack25.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass34 = stack25.getClass();
        stack22.push((java.lang.Object) stack25);
        stack9.push((java.lang.Object) stack22);
        stack22.pop();
        jbhembise.testauto.example3.Stack stack38 = new jbhembise.testauto.example3.Stack();
        int int39 = stack38.size();
        stack38.clear();
        stack38.push((java.lang.Object) true);
        boolean boolean43 = stack38.isEmpty();
        stack38.clear();
        boolean boolean45 = stack38.isEmpty();
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        int int47 = stack46.size();
        java.lang.Class<?> wildcardClass48 = stack46.getClass();
        java.lang.Class<?> wildcardClass49 = stack46.getClass();
        stack46.push((java.lang.Object) 10L);
        boolean boolean52 = stack46.isFull();
        stack38.push((java.lang.Object) stack46);
        stack38.push((java.lang.Object) false);
        stack38.clear();
        int int57 = stack38.size();
        stack22.push((java.lang.Object) stack38);
        stack0.push((java.lang.Object) stack38);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        int int9 = stack3.size();
        java.lang.Class<?> wildcardClass10 = stack3.getClass();
        java.lang.Class<?> wildcardClass11 = stack3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        java.lang.Class<?> wildcardClass19 = stack5.getClass();
        boolean boolean20 = stack5.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        java.lang.Class<?> wildcardClass2 = obj0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        int int6 = stack0.size();
        boolean boolean7 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Object obj5 = null;
        stack3.push(obj5);
        stack3.pop();
        int int8 = stack3.size();
        stack3.clear();
        stack3.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass12 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        stack3.clear();
        boolean boolean15 = stack3.isEmpty();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        int int25 = stack16.size();
        boolean boolean26 = stack16.isEmpty();
        stack16.clear();
        stack3.push((java.lang.Object) stack16);
        boolean boolean29 = stack3.isEmpty();
        java.lang.Object obj30 = stack3.last();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        int int9 = stack0.size();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        boolean boolean15 = stack11.isFull();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack11.push((java.lang.Object) stack16);
        java.lang.Class<?> wildcardClass27 = stack11.getClass();
        boolean boolean28 = stack11.isFull();
        stack0.push((java.lang.Object) boolean28);
        int int30 = stack0.size();
        int int31 = stack0.size();
        boolean boolean32 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.pop();
        boolean boolean7 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        int int6 = stack0.size();
        stack0.push((java.lang.Object) (short) -1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        boolean boolean19 = stack18.isEmpty();
        stack18.clear();
        boolean boolean21 = stack18.isFull();
        boolean boolean22 = stack18.isEmpty();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Class<?> wildcardClass25 = stack23.getClass();
        java.lang.Class<?> wildcardClass26 = stack23.getClass();
        boolean boolean27 = stack23.isFull();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        stack28.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass37 = stack28.getClass();
        stack23.push((java.lang.Object) stack28);
        stack28.pop();
        int int40 = stack28.size();
        boolean boolean41 = stack28.isEmpty();
        stack18.push((java.lang.Object) boolean41);
        stack18.pop();
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        int int45 = stack44.size();
        java.lang.Object obj46 = null;
        stack44.push(obj46);
        stack44.pop();
        int int49 = stack44.size();
        stack44.clear();
        java.lang.Class<?> wildcardClass51 = stack44.getClass();
        stack18.push((java.lang.Object) stack44);
        stack0.push((java.lang.Object) stack18);
        jbhembise.testauto.example3.Stack stack54 = new jbhembise.testauto.example3.Stack();
        int int55 = stack54.size();
        stack54.clear();
        boolean boolean57 = stack54.isFull();
        stack54.clear();
        boolean boolean59 = stack54.isFull();
        stack54.clear();
        boolean boolean61 = stack54.isEmpty();
        stack18.push((java.lang.Object) boolean61);
        int int63 = stack18.size();
        int int64 = stack18.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Object obj11 = null;
        stack9.push(obj11);
        stack9.pop();
        int int14 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        boolean boolean19 = stack9.isEmpty();
        stack9.clear();
        stack9.clear();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        boolean boolean23 = stack22.isEmpty();
        stack22.clear();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Object obj27 = null;
        stack25.push(obj27);
        stack25.pop();
        int int30 = stack25.size();
        stack25.clear();
        stack25.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass34 = stack25.getClass();
        stack22.push((java.lang.Object) stack25);
        stack9.push((java.lang.Object) stack22);
        stack22.pop();
        jbhembise.testauto.example3.Stack stack38 = new jbhembise.testauto.example3.Stack();
        int int39 = stack38.size();
        stack38.clear();
        stack38.push((java.lang.Object) true);
        boolean boolean43 = stack38.isEmpty();
        stack38.clear();
        boolean boolean45 = stack38.isEmpty();
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        int int47 = stack46.size();
        java.lang.Class<?> wildcardClass48 = stack46.getClass();
        java.lang.Class<?> wildcardClass49 = stack46.getClass();
        stack46.push((java.lang.Object) 10L);
        boolean boolean52 = stack46.isFull();
        stack38.push((java.lang.Object) stack46);
        stack38.push((java.lang.Object) false);
        stack38.clear();
        int int57 = stack38.size();
        stack22.push((java.lang.Object) stack38);
        stack0.push((java.lang.Object) stack38);
        java.lang.Object obj60 = stack0.last();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Class<?> wildcardClass16 = stack0.getClass();
        int int17 = stack0.size();
        int int18 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        boolean boolean26 = stack18.isFull();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        boolean boolean28 = stack27.isEmpty();
        boolean boolean29 = stack27.isEmpty();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        int int36 = stack30.size();
        stack27.push((java.lang.Object) int36);
        stack18.push((java.lang.Object) stack27);
        stack18.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        int int6 = stack0.size();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        boolean boolean17 = stack7.isFull();
        stack7.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass20 = stack19.getClass();
        int int21 = stack19.size();
        stack19.push((java.lang.Object) (byte) 10);
        stack7.push((java.lang.Object) stack19);
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Object obj27 = null;
        stack25.push(obj27);
        stack25.pop();
        int int30 = stack25.size();
        stack25.clear();
        boolean boolean32 = stack25.isFull();
        java.lang.Class<?> wildcardClass33 = stack25.getClass();
        stack19.push((java.lang.Object) stack25);
        boolean boolean35 = stack19.isFull();
        java.lang.Object obj36 = stack19.last();
        stack0.push((java.lang.Object) stack19);
        java.lang.Object obj38 = stack19.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        stack0.push((java.lang.Object) 0);
        java.lang.Object obj14 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + 0 + "'", obj14.equals(0));
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.pop();
        stack0.clear();
        stack0.clear();
        boolean boolean15 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        boolean boolean5 = stack0.isFull();
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        boolean boolean17 = stack7.isFull();
        stack7.clear();
        int int19 = stack7.size();
        stack0.push((java.lang.Object) int19);
        boolean boolean21 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        java.lang.Object obj8 = stack0.last();
        java.lang.Object obj9 = stack0.last();
        java.lang.Class<?> wildcardClass10 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        boolean boolean4 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        boolean boolean7 = stack6.isEmpty();
        stack6.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass11 = stack10.getClass();
        int int12 = stack10.size();
        stack6.push((java.lang.Object) int12);
        int int14 = stack6.size();
        boolean boolean15 = stack6.isFull();
        stack0.push((java.lang.Object) boolean15);
        boolean boolean17 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        boolean boolean7 = stack6.isEmpty();
        stack6.clear();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Object obj11 = null;
        stack9.push(obj11);
        stack9.pop();
        int int14 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        stack6.push((java.lang.Object) stack9);
        stack9.clear();
        boolean boolean21 = stack9.isEmpty();
        int int22 = stack9.size();
        int int23 = stack9.size();
        stack0.push((java.lang.Object) int23);
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        boolean boolean26 = stack25.isEmpty();
        stack25.clear();
        boolean boolean28 = stack25.isFull();
        boolean boolean29 = stack25.isEmpty();
        java.lang.Class<?> wildcardClass30 = stack25.getClass();
        stack0.push((java.lang.Object) stack25);
        boolean boolean32 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        java.lang.Class<?> wildcardClass9 = stack3.getClass();
        int int10 = stack3.size();
        boolean boolean11 = stack3.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        boolean boolean2 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        boolean boolean6 = stack5.isEmpty();
        boolean boolean7 = stack5.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        boolean boolean9 = stack8.isEmpty();
        stack8.push((java.lang.Object) (short) 10);
        stack5.push((java.lang.Object) stack8);
        boolean boolean13 = stack5.isEmpty();
        java.lang.Object obj14 = stack5.last();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        stack0.push((java.lang.Object) wildcardClass15);
        int int17 = stack0.size();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        boolean boolean25 = stack18.isFull();
        java.lang.Class<?> wildcardClass26 = stack18.getClass();
        stack12.push((java.lang.Object) stack18);
        boolean boolean28 = stack12.isFull();
        boolean boolean29 = stack12.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) "hi!");
        int int4 = stack0.size();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Class<?> wildcardClass7 = stack5.getClass();
        java.lang.Class<?> wildcardClass8 = stack5.getClass();
        stack5.push((java.lang.Object) 10L);
        stack5.pop();
        boolean boolean12 = stack5.isFull();
        stack0.push((java.lang.Object) stack5);
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        boolean boolean16 = stack14.isEmpty();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        boolean boolean18 = stack17.isEmpty();
        stack17.push((java.lang.Object) (short) 10);
        stack14.push((java.lang.Object) stack17);
        boolean boolean22 = stack14.isEmpty();
        java.lang.Object obj23 = stack14.last();
        int int24 = stack14.size();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Class<?> wildcardClass27 = stack25.getClass();
        java.lang.Class<?> wildcardClass28 = stack25.getClass();
        boolean boolean29 = stack25.isFull();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass39 = stack30.getClass();
        stack25.push((java.lang.Object) stack30);
        boolean boolean41 = stack25.isFull();
        int int42 = stack25.size();
        stack14.push((java.lang.Object) stack25);
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        int int45 = stack44.size();
        java.lang.Class<?> wildcardClass46 = stack44.getClass();
        java.lang.Class<?> wildcardClass47 = stack44.getClass();
        stack44.push((java.lang.Object) 10L);
        boolean boolean50 = stack44.isFull();
        stack25.push((java.lang.Object) boolean50);
        stack5.push((java.lang.Object) stack25);
        boolean boolean53 = stack5.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isFull();
        java.lang.Class<?> wildcardClass11 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        int int11 = stack0.size();
        boolean boolean12 = stack0.isFull();
        int int13 = stack0.size();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Class<?> wildcardClass5 = stack3.getClass();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        java.lang.Class<?> wildcardClass7 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        int int9 = stack0.size();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        java.lang.Class<?> wildcardClass19 = stack9.getClass();
        java.lang.Object obj20 = null;
        stack9.push(obj20);
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass23 = stack22.getClass();
        int int24 = stack22.size();
        stack22.push((java.lang.Object) (byte) 10);
        boolean boolean27 = stack22.isEmpty();
        stack9.push((java.lang.Object) boolean27);
        boolean boolean29 = stack9.isEmpty();
        boolean boolean30 = stack9.isFull();
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        int int32 = stack31.size();
        stack31.clear();
        boolean boolean34 = stack31.isFull();
        stack31.clear();
        boolean boolean36 = stack31.isFull();
        stack31.clear();
        boolean boolean38 = stack31.isEmpty();
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        java.lang.Class<?> wildcardClass41 = stack39.getClass();
        java.lang.Class<?> wildcardClass42 = stack39.getClass();
        java.lang.Class<?> wildcardClass43 = stack39.getClass();
        boolean boolean44 = stack39.isEmpty();
        java.lang.Class<?> wildcardClass45 = stack39.getClass();
        stack31.push((java.lang.Object) stack39);
        stack31.clear();
        stack9.push((java.lang.Object) stack31);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        boolean boolean7 = stack0.isFull();
        boolean boolean8 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Object obj11 = null;
        stack9.push(obj11);
        stack9.pop();
        int int14 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) 10);
        int int18 = stack9.size();
        boolean boolean19 = stack9.isEmpty();
        stack0.push((java.lang.Object) stack9);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        java.lang.Object obj28 = stack13.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj28);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isFull();
        boolean boolean12 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isFull();
        int int12 = stack0.size();
        java.lang.Class<?> wildcardClass13 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        stack13.pop();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.clear();
        boolean boolean36 = stack29.isEmpty();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Class<?> wildcardClass39 = stack37.getClass();
        java.lang.Class<?> wildcardClass40 = stack37.getClass();
        stack37.push((java.lang.Object) 10L);
        boolean boolean43 = stack37.isFull();
        stack29.push((java.lang.Object) stack37);
        stack29.push((java.lang.Object) false);
        stack29.clear();
        int int48 = stack29.size();
        stack13.push((java.lang.Object) stack29);
        java.lang.Class<?> wildcardClass50 = stack13.getClass();
        java.lang.Object obj51 = stack13.last();
        int int52 = stack13.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        int int5 = stack0.size();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        java.lang.Object obj7 = stack0.last();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + (byte) 10 + "'", obj7.equals((byte) 10));
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        stack6.push((java.lang.Object) true);
        boolean boolean11 = stack6.isEmpty();
        int int12 = stack6.size();
        int int13 = stack6.size();
        stack0.push((java.lang.Object) stack6);
        int int15 = stack6.size();
        stack6.pop();
        boolean boolean17 = stack6.isFull();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        int int24 = stack18.size();
        java.lang.Class<?> wildcardClass25 = stack18.getClass();
        stack6.push((java.lang.Object) wildcardClass25);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Object obj5 = null;
        stack3.push(obj5);
        stack3.pop();
        int int8 = stack3.size();
        stack3.clear();
        stack3.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass12 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        stack3.clear();
        boolean boolean15 = stack3.isEmpty();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        int int25 = stack16.size();
        boolean boolean26 = stack16.isEmpty();
        stack16.clear();
        stack3.push((java.lang.Object) stack16);
        boolean boolean29 = stack3.isEmpty();
        int int30 = stack3.size();
        stack3.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        boolean boolean28 = stack0.isFull();
        boolean boolean29 = stack0.isFull();
        boolean boolean30 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        int int9 = stack0.size();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        int int12 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        boolean boolean2 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        boolean boolean6 = stack5.isEmpty();
        boolean boolean7 = stack5.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        boolean boolean9 = stack8.isEmpty();
        stack8.push((java.lang.Object) (short) 10);
        stack5.push((java.lang.Object) stack8);
        boolean boolean13 = stack5.isEmpty();
        java.lang.Object obj14 = stack5.last();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        stack0.push((java.lang.Object) wildcardClass15);
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        int int18 = stack17.size();
        java.lang.Class<?> wildcardClass19 = stack17.getClass();
        java.lang.Class<?> wildcardClass20 = stack17.getClass();
        java.lang.Class<?> wildcardClass21 = stack17.getClass();
        stack17.clear();
        stack17.clear();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Object obj26 = null;
        stack24.push(obj26);
        stack24.pop();
        int int29 = stack24.size();
        stack24.clear();
        stack24.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass33 = stack24.getClass();
        stack17.push((java.lang.Object) wildcardClass33);
        stack0.push((java.lang.Object) stack17);
        java.lang.Class<?> wildcardClass36 = stack0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        boolean boolean2 = stack0.isEmpty();
        int int3 = stack0.size();
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        int int5 = stack4.size();
        stack4.clear();
        stack4.clear();
        int int8 = stack4.size();
        stack4.clear();
        stack0.push((java.lang.Object) stack4);
        java.lang.Class<?> wildcardClass11 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Object obj9 = stack0.last();
        int int10 = stack0.size();
        boolean boolean11 = stack0.isFull();
        java.lang.Object obj12 = stack0.last();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        stack0.clear();
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        boolean boolean19 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.push((java.lang.Object) (byte) 100);
        boolean boolean14 = stack0.isEmpty();
        boolean boolean15 = stack0.isFull();
        boolean boolean16 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        int int9 = stack3.size();
        int int10 = stack3.size();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        stack14.push((java.lang.Object) (short) 10);
        stack11.push((java.lang.Object) stack14);
        boolean boolean19 = stack11.isEmpty();
        java.lang.Object obj20 = stack11.last();
        boolean boolean21 = stack11.isFull();
        boolean boolean22 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Class<?> wildcardClass25 = stack23.getClass();
        java.lang.Class<?> wildcardClass26 = stack23.getClass();
        boolean boolean27 = stack23.isFull();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        stack28.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass37 = stack28.getClass();
        stack23.push((java.lang.Object) stack28);
        stack28.pop();
        int int40 = stack28.size();
        boolean boolean41 = stack28.isEmpty();
        stack28.clear();
        stack11.push((java.lang.Object) stack28);
        stack3.push((java.lang.Object) stack11);
        int int45 = stack3.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        stack0.push((java.lang.Object) false);
        java.lang.Object obj18 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + false + "'", obj18.equals(false));
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        boolean boolean11 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        boolean boolean13 = stack12.isEmpty();
        stack12.clear();
        boolean boolean15 = stack12.isEmpty();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        boolean boolean17 = stack16.isEmpty();
        boolean boolean18 = stack16.isEmpty();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        boolean boolean20 = stack19.isEmpty();
        stack19.push((java.lang.Object) (short) 10);
        stack16.push((java.lang.Object) stack19);
        stack19.clear();
        stack12.push((java.lang.Object) stack19);
        stack0.push((java.lang.Object) stack12);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        boolean boolean28 = stack0.isFull();
        boolean boolean29 = stack0.isFull();
        java.lang.Class<?> wildcardClass30 = stack0.getClass();
        java.lang.Object obj31 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        int int3 = stack0.size();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        int int5 = stack0.size();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        java.lang.Class<?> wildcardClass8 = stack6.getClass();
        java.lang.Class<?> wildcardClass9 = stack6.getClass();
        boolean boolean10 = stack6.isFull();
        int int11 = stack6.size();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        boolean boolean16 = stack12.isFull();
        boolean boolean17 = stack12.isFull();
        stack6.push((java.lang.Object) boolean17);
        boolean boolean19 = stack6.isFull();
        stack0.push((java.lang.Object) boolean19);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        stack5.pop();
        stack5.push((java.lang.Object) false);
        java.lang.Object obj20 = stack5.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + false + "'", obj20.equals(false));
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        boolean boolean5 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        java.lang.Class<?> wildcardClass8 = stack6.getClass();
        java.lang.Class<?> wildcardClass9 = stack6.getClass();
        stack0.push((java.lang.Object) wildcardClass9);
        boolean boolean11 = stack0.isEmpty();
        boolean boolean12 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        stack13.clear();
        stack13.push((java.lang.Object) true);
        boolean boolean18 = stack13.isEmpty();
        boolean boolean19 = stack13.isFull();
        int int20 = stack13.size();
        stack0.push((java.lang.Object) int20);
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        int int23 = stack22.size();
        java.lang.Class<?> wildcardClass24 = stack22.getClass();
        java.lang.Class<?> wildcardClass25 = stack22.getClass();
        boolean boolean26 = stack22.isFull();
        boolean boolean27 = stack22.isFull();
        boolean boolean28 = stack22.isFull();
        stack0.push((java.lang.Object) stack22);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        boolean boolean5 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass7 = stack6.getClass();
        boolean boolean8 = stack6.isEmpty();
        stack6.clear();
        java.lang.Class<?> wildcardClass10 = stack6.getClass();
        int int11 = stack6.size();
        boolean boolean12 = stack6.isEmpty();
        stack0.push((java.lang.Object) boolean12);
        java.lang.Object obj14 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + true + "'", obj14.equals(true));
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        boolean boolean2 = stack0.isEmpty();
        boolean boolean3 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        java.lang.Class<?> wildcardClass15 = stack11.getClass();
        stack11.clear();
        java.lang.Class<?> wildcardClass17 = stack11.getClass();
        stack0.push((java.lang.Object) stack11);
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        stack19.clear();
        boolean boolean22 = stack19.isFull();
        stack19.clear();
        boolean boolean24 = stack19.isFull();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Class<?> wildcardClass27 = stack25.getClass();
        java.lang.Class<?> wildcardClass28 = stack25.getClass();
        stack19.push((java.lang.Object) wildcardClass28);
        stack0.push((java.lang.Object) wildcardClass28);
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        int int32 = stack31.size();
        stack31.clear();
        stack31.push((java.lang.Object) true);
        boolean boolean36 = stack31.isEmpty();
        stack31.clear();
        boolean boolean38 = stack31.isEmpty();
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        java.lang.Class<?> wildcardClass41 = stack39.getClass();
        java.lang.Class<?> wildcardClass42 = stack39.getClass();
        stack39.push((java.lang.Object) 10L);
        boolean boolean45 = stack39.isFull();
        stack31.push((java.lang.Object) stack39);
        jbhembise.testauto.example3.Stack stack47 = new jbhembise.testauto.example3.Stack();
        int int48 = stack47.size();
        java.lang.Object obj49 = null;
        stack47.push(obj49);
        stack47.pop();
        int int52 = stack47.size();
        stack47.clear();
        stack47.push((java.lang.Object) 10);
        boolean boolean56 = stack47.isEmpty();
        stack47.pop();
        jbhembise.testauto.example3.Stack stack58 = new jbhembise.testauto.example3.Stack();
        int int59 = stack58.size();
        java.lang.Class<?> wildcardClass60 = stack58.getClass();
        java.lang.Class<?> wildcardClass61 = stack58.getClass();
        java.lang.Class<?> wildcardClass62 = stack58.getClass();
        stack58.clear();
        stack58.clear();
        jbhembise.testauto.example3.Stack stack65 = new jbhembise.testauto.example3.Stack();
        int int66 = stack65.size();
        java.lang.Object obj67 = null;
        stack65.push(obj67);
        stack65.pop();
        int int70 = stack65.size();
        stack65.clear();
        stack65.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass74 = stack65.getClass();
        stack58.push((java.lang.Object) wildcardClass74);
        jbhembise.testauto.example3.Stack stack76 = new jbhembise.testauto.example3.Stack();
        int int77 = stack76.size();
        stack76.clear();
        stack76.push((java.lang.Object) true);
        boolean boolean81 = stack76.isEmpty();
        stack76.pop();
        stack58.push((java.lang.Object) stack76);
        stack47.push((java.lang.Object) stack76);
        stack31.push((java.lang.Object) stack76);
        int int86 = stack31.size();
        stack0.push((java.lang.Object) int86);
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 2 + "'", int86 == 2);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Class<?> wildcardClass5 = stack3.getClass();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        java.lang.Class<?> wildcardClass7 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        boolean boolean9 = stack3.isFull();
        stack3.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Object obj13 = null;
        stack11.push(obj13);
        stack11.pop();
        int int16 = stack11.size();
        stack11.clear();
        boolean boolean18 = stack11.isEmpty();
        boolean boolean19 = stack11.isEmpty();
        java.lang.Class<?> wildcardClass20 = stack11.getClass();
        int int21 = stack11.size();
        java.lang.Class<?> wildcardClass22 = stack11.getClass();
        stack3.push((java.lang.Object) stack11);
        boolean boolean24 = stack11.isFull();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        stack5.pop();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.clear();
        boolean boolean25 = stack18.isEmpty();
        stack5.push((java.lang.Object) boolean25);
        java.lang.Object obj27 = stack5.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + obj27 + "' != '" + true + "'", obj27.equals(true));
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        boolean boolean5 = stack0.isFull();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        java.lang.Class<?> wildcardClass12 = stack8.getClass();
        boolean boolean13 = stack8.isEmpty();
        java.lang.Class<?> wildcardClass14 = stack8.getClass();
        stack0.push((java.lang.Object) stack8);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack8.push((java.lang.Object) stack16);
        boolean boolean20 = stack16.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        stack18.clear();
        boolean boolean27 = stack18.isFull();
        int int28 = stack18.size();
        boolean boolean29 = stack18.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        java.lang.Object obj7 = stack0.last();
        boolean boolean8 = stack0.isFull();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + 10L + "'", obj7.equals(10L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = null;
        stack0.push(obj16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Class<?> wildcardClass20 = stack18.getClass();
        java.lang.Class<?> wildcardClass21 = stack18.getClass();
        boolean boolean22 = stack18.isFull();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Object obj25 = null;
        stack23.push(obj25);
        stack23.pop();
        int int28 = stack23.size();
        stack23.clear();
        stack23.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass32 = stack23.getClass();
        stack18.push((java.lang.Object) stack23);
        java.lang.Class<?> wildcardClass34 = stack18.getClass();
        stack0.push((java.lang.Object) wildcardClass34);
        boolean boolean36 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        java.lang.Object obj9 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + true + "'", obj9.equals(true));
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        stack0.clear();
        boolean boolean8 = stack0.isEmpty();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        boolean boolean3 = stack0.isEmpty();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        java.lang.Class<?> wildcardClass15 = stack11.getClass();
        stack11.clear();
        java.lang.Class<?> wildcardClass17 = stack11.getClass();
        stack0.push((java.lang.Object) stack11);
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        stack19.clear();
        boolean boolean22 = stack19.isFull();
        stack19.clear();
        boolean boolean24 = stack19.isFull();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Class<?> wildcardClass27 = stack25.getClass();
        java.lang.Class<?> wildcardClass28 = stack25.getClass();
        stack19.push((java.lang.Object) wildcardClass28);
        stack0.push((java.lang.Object) wildcardClass28);
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        boolean boolean32 = stack31.isEmpty();
        boolean boolean33 = stack31.isEmpty();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        boolean boolean35 = stack34.isEmpty();
        stack34.push((java.lang.Object) (short) 10);
        stack31.push((java.lang.Object) stack34);
        stack31.pop();
        boolean boolean40 = stack31.isEmpty();
        stack0.push((java.lang.Object) boolean40);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        java.lang.Object obj8 = stack0.last();
        java.lang.Object obj9 = stack0.last();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj9);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        stack5.pop();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        boolean boolean19 = stack18.isEmpty();
        stack18.clear();
        boolean boolean21 = stack18.isFull();
        stack5.push((java.lang.Object) boolean21);
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        stack23.clear();
        boolean boolean26 = stack23.isFull();
        stack23.clear();
        boolean boolean28 = stack23.isEmpty();
        stack5.push((java.lang.Object) stack23);
        java.lang.Class<?> wildcardClass30 = stack5.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        boolean boolean5 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        java.lang.Class<?> wildcardClass8 = stack6.getClass();
        java.lang.Class<?> wildcardClass9 = stack6.getClass();
        stack0.push((java.lang.Object) wildcardClass9);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        stack13.clear();
        stack13.push((java.lang.Object) true);
        boolean boolean18 = stack13.isEmpty();
        stack13.clear();
        boolean boolean20 = stack13.isEmpty();
        java.lang.Class<?> wildcardClass21 = stack13.getClass();
        boolean boolean22 = stack13.isFull();
        stack0.push((java.lang.Object) boolean22);
        java.lang.Class<?> wildcardClass24 = stack0.getClass();
        boolean boolean25 = stack0.isFull();
        java.lang.Object obj26 = stack0.last();
        int int27 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + false + "'", obj26.equals(false));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        java.lang.Object obj18 = null;
        stack5.push(obj18);
        stack5.clear();
        boolean boolean21 = stack5.isEmpty();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        int int23 = stack22.size();
        stack22.clear();
        stack22.push((java.lang.Object) true);
        boolean boolean27 = stack22.isEmpty();
        stack22.clear();
        boolean boolean29 = stack22.isEmpty();
        java.lang.Class<?> wildcardClass30 = stack22.getClass();
        boolean boolean31 = stack22.isFull();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        int int33 = stack32.size();
        java.lang.Object obj34 = null;
        stack32.push(obj34);
        stack32.pop();
        int int37 = stack32.size();
        stack32.clear();
        stack32.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass41 = stack32.getClass();
        boolean boolean42 = stack32.isFull();
        stack32.clear();
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass45 = stack44.getClass();
        int int46 = stack44.size();
        stack44.push((java.lang.Object) (byte) 10);
        stack32.push((java.lang.Object) stack44);
        jbhembise.testauto.example3.Stack stack50 = new jbhembise.testauto.example3.Stack();
        int int51 = stack50.size();
        java.lang.Object obj52 = null;
        stack50.push(obj52);
        stack50.pop();
        int int55 = stack50.size();
        stack50.clear();
        boolean boolean57 = stack50.isFull();
        java.lang.Class<?> wildcardClass58 = stack50.getClass();
        stack44.push((java.lang.Object) stack50);
        boolean boolean60 = stack44.isFull();
        java.lang.Object obj61 = stack44.last();
        stack44.pop();
        stack22.push((java.lang.Object) stack44);
        int int64 = stack22.size();
        stack5.push((java.lang.Object) int64);
        stack5.pop();
        boolean boolean67 = stack5.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        boolean boolean2 = stack0.isEmpty();
        int int3 = stack0.size();
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        int int5 = stack4.size();
        stack4.clear();
        stack4.clear();
        int int8 = stack4.size();
        stack4.clear();
        stack0.push((java.lang.Object) stack4);
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Object obj13 = null;
        stack11.push(obj13);
        stack11.pop();
        int int16 = stack11.size();
        stack11.clear();
        stack11.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass20 = stack11.getClass();
        boolean boolean21 = stack11.isFull();
        stack11.clear();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass24 = stack23.getClass();
        int int25 = stack23.size();
        stack23.push((java.lang.Object) (byte) 10);
        stack11.push((java.lang.Object) stack23);
        java.lang.Object obj29 = stack11.last();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        stack0.push(obj29);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Class<?> wildcardClass5 = stack3.getClass();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        java.lang.Class<?> wildcardClass7 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Object obj11 = null;
        stack9.push(obj11);
        stack9.pop();
        int int14 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) 10);
        int int18 = stack9.size();
        java.lang.Class<?> wildcardClass19 = stack9.getClass();
        stack0.push((java.lang.Object) stack9);
        int int21 = stack0.size();
        int int22 = stack0.size();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Class<?> wildcardClass16 = stack0.getClass();
        boolean boolean17 = stack0.isFull();
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Class<?> wildcardClass22 = stack20.getClass();
        java.lang.Class<?> wildcardClass23 = stack20.getClass();
        boolean boolean24 = stack20.isFull();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Object obj27 = null;
        stack25.push(obj27);
        stack25.pop();
        int int30 = stack25.size();
        stack25.clear();
        stack25.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass34 = stack25.getClass();
        stack20.push((java.lang.Object) stack25);
        jbhembise.testauto.example3.Stack stack36 = new jbhembise.testauto.example3.Stack();
        int int37 = stack36.size();
        stack36.clear();
        stack36.clear();
        stack20.push((java.lang.Object) stack36);
        stack0.push((java.lang.Object) stack20);
        java.lang.Object obj42 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        boolean boolean19 = stack18.isEmpty();
        stack18.clear();
        boolean boolean21 = stack18.isFull();
        boolean boolean22 = stack18.isEmpty();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Class<?> wildcardClass25 = stack23.getClass();
        java.lang.Class<?> wildcardClass26 = stack23.getClass();
        boolean boolean27 = stack23.isFull();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        stack28.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass37 = stack28.getClass();
        stack23.push((java.lang.Object) stack28);
        stack28.pop();
        int int40 = stack28.size();
        boolean boolean41 = stack28.isEmpty();
        stack18.push((java.lang.Object) boolean41);
        stack18.pop();
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        int int45 = stack44.size();
        java.lang.Object obj46 = null;
        stack44.push(obj46);
        stack44.pop();
        int int49 = stack44.size();
        stack44.clear();
        java.lang.Class<?> wildcardClass51 = stack44.getClass();
        stack18.push((java.lang.Object) stack44);
        stack0.push((java.lang.Object) stack18);
        jbhembise.testauto.example3.Stack stack54 = new jbhembise.testauto.example3.Stack();
        int int55 = stack54.size();
        stack54.clear();
        boolean boolean57 = stack54.isFull();
        stack54.clear();
        boolean boolean59 = stack54.isFull();
        stack54.clear();
        boolean boolean61 = stack54.isEmpty();
        stack18.push((java.lang.Object) boolean61);
        int int63 = stack18.size();
        boolean boolean64 = stack18.isFull();
        boolean boolean65 = stack18.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        stack5.pop();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.clear();
        boolean boolean25 = stack18.isEmpty();
        java.lang.Class<?> wildcardClass26 = stack18.getClass();
        boolean boolean27 = stack18.isFull();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        stack28.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass37 = stack28.getClass();
        boolean boolean38 = stack28.isFull();
        stack28.clear();
        jbhembise.testauto.example3.Stack stack40 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass41 = stack40.getClass();
        int int42 = stack40.size();
        stack40.push((java.lang.Object) (byte) 10);
        stack28.push((java.lang.Object) stack40);
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        int int47 = stack46.size();
        java.lang.Object obj48 = null;
        stack46.push(obj48);
        stack46.pop();
        int int51 = stack46.size();
        stack46.clear();
        boolean boolean53 = stack46.isFull();
        java.lang.Class<?> wildcardClass54 = stack46.getClass();
        stack40.push((java.lang.Object) stack46);
        boolean boolean56 = stack40.isFull();
        java.lang.Object obj57 = stack40.last();
        stack40.pop();
        stack18.push((java.lang.Object) stack40);
        stack5.push((java.lang.Object) stack18);
        stack18.pop();
        java.lang.Class<?> wildcardClass62 = stack18.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isEmpty();
        stack0.clear();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        stack14.push((java.lang.Object) (short) 10);
        stack11.push((java.lang.Object) stack14);
        int int19 = stack14.size();
        int int20 = stack14.size();
        stack0.push((java.lang.Object) stack14);
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        int int23 = stack22.size();
        java.lang.Object obj24 = null;
        stack22.push(obj24);
        stack22.pop();
        int int27 = stack22.size();
        stack22.clear();
        stack22.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass31 = stack22.getClass();
        boolean boolean32 = stack22.isEmpty();
        int int33 = stack22.size();
        boolean boolean34 = stack22.isFull();
        java.lang.Class<?> wildcardClass35 = stack22.getClass();
        stack14.push((java.lang.Object) stack22);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        int int3 = stack0.size();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        stack0.clear();
        int int7 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        boolean boolean14 = stack11.isEmpty();
        stack0.push((java.lang.Object) boolean14);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Class<?> wildcardClass18 = stack16.getClass();
        java.lang.Class<?> wildcardClass19 = stack16.getClass();
        boolean boolean20 = stack16.isFull();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Object obj23 = null;
        stack21.push(obj23);
        stack21.pop();
        int int26 = stack21.size();
        stack21.clear();
        stack21.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass30 = stack21.getClass();
        stack16.push((java.lang.Object) stack21);
        boolean boolean32 = stack21.isEmpty();
        java.lang.Class<?> wildcardClass33 = stack21.getClass();
        int int34 = stack21.size();
        stack21.clear();
        stack21.clear();
        stack0.push((java.lang.Object) stack21);
        boolean boolean38 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        java.lang.Object obj28 = stack0.last();
        boolean boolean29 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = null;
        stack0.push(obj16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Class<?> wildcardClass20 = stack18.getClass();
        java.lang.Class<?> wildcardClass21 = stack18.getClass();
        boolean boolean22 = stack18.isFull();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Object obj25 = null;
        stack23.push(obj25);
        stack23.pop();
        int int28 = stack23.size();
        stack23.clear();
        stack23.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass32 = stack23.getClass();
        stack18.push((java.lang.Object) stack23);
        java.lang.Class<?> wildcardClass34 = stack18.getClass();
        stack0.push((java.lang.Object) wildcardClass34);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Object obj11 = null;
        stack9.push(obj11);
        stack9.pop();
        int int14 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        boolean boolean19 = stack9.isEmpty();
        stack9.clear();
        stack9.clear();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        boolean boolean23 = stack22.isEmpty();
        stack22.clear();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Object obj27 = null;
        stack25.push(obj27);
        stack25.pop();
        int int30 = stack25.size();
        stack25.clear();
        stack25.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass34 = stack25.getClass();
        stack22.push((java.lang.Object) stack25);
        stack9.push((java.lang.Object) stack22);
        stack22.pop();
        jbhembise.testauto.example3.Stack stack38 = new jbhembise.testauto.example3.Stack();
        int int39 = stack38.size();
        stack38.clear();
        stack38.push((java.lang.Object) true);
        boolean boolean43 = stack38.isEmpty();
        stack38.clear();
        boolean boolean45 = stack38.isEmpty();
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        int int47 = stack46.size();
        java.lang.Class<?> wildcardClass48 = stack46.getClass();
        java.lang.Class<?> wildcardClass49 = stack46.getClass();
        stack46.push((java.lang.Object) 10L);
        boolean boolean52 = stack46.isFull();
        stack38.push((java.lang.Object) stack46);
        stack38.push((java.lang.Object) false);
        stack38.clear();
        int int57 = stack38.size();
        stack22.push((java.lang.Object) stack38);
        stack0.push((java.lang.Object) stack38);
        java.lang.Class<?> wildcardClass60 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        stack0.pop();
        stack0.clear();
        stack0.push((java.lang.Object) (-1));
        stack0.pop();
        int int11 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        stack13.clear();
        stack13.push((java.lang.Object) true);
        boolean boolean18 = stack13.isEmpty();
        stack13.clear();
        boolean boolean20 = stack13.isEmpty();
        java.lang.Class<?> wildcardClass21 = stack13.getClass();
        boolean boolean22 = stack13.isFull();
        stack0.push((java.lang.Object) boolean22);
        java.lang.Class<?> wildcardClass24 = stack0.getClass();
        java.lang.Class<?> wildcardClass25 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        stack13.pop();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.clear();
        boolean boolean36 = stack29.isEmpty();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Class<?> wildcardClass39 = stack37.getClass();
        java.lang.Class<?> wildcardClass40 = stack37.getClass();
        stack37.push((java.lang.Object) 10L);
        boolean boolean43 = stack37.isFull();
        stack29.push((java.lang.Object) stack37);
        stack29.push((java.lang.Object) false);
        stack29.clear();
        int int48 = stack29.size();
        stack13.push((java.lang.Object) stack29);
        java.lang.Class<?> wildcardClass50 = stack13.getClass();
        stack13.clear();
        stack13.push((java.lang.Object) (byte) 1);
        stack13.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        java.lang.Object obj18 = null;
        stack5.push(obj18);
        stack5.clear();
        boolean boolean21 = stack5.isEmpty();
        boolean boolean22 = stack5.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        java.lang.Class<?> wildcardClass9 = stack3.getClass();
        java.lang.Object obj10 = stack3.last();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass12 = stack11.getClass();
        boolean boolean13 = stack11.isEmpty();
        stack11.clear();
        stack11.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        boolean boolean17 = stack16.isEmpty();
        boolean boolean18 = stack16.isEmpty();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        boolean boolean20 = stack19.isEmpty();
        stack19.push((java.lang.Object) (short) 10);
        stack16.push((java.lang.Object) stack19);
        boolean boolean24 = stack16.isEmpty();
        java.lang.Object obj25 = stack16.last();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        stack11.push((java.lang.Object) wildcardClass26);
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Class<?> wildcardClass30 = stack28.getClass();
        java.lang.Class<?> wildcardClass31 = stack28.getClass();
        java.lang.Class<?> wildcardClass32 = stack28.getClass();
        stack28.clear();
        stack28.clear();
        jbhembise.testauto.example3.Stack stack35 = new jbhembise.testauto.example3.Stack();
        int int36 = stack35.size();
        java.lang.Object obj37 = null;
        stack35.push(obj37);
        stack35.pop();
        int int40 = stack35.size();
        stack35.clear();
        stack35.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass44 = stack35.getClass();
        stack28.push((java.lang.Object) wildcardClass44);
        stack11.push((java.lang.Object) stack28);
        stack3.push((java.lang.Object) stack11);
        stack3.pop();
        java.lang.Object obj49 = stack3.last();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 10 + "'", obj10.equals((short) 10));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + obj49 + "' != '" + (short) 10 + "'", obj49.equals((short) 10));
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isFull();
        java.lang.Class<?> wildcardClass10 = stack0.getClass();
        boolean boolean11 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        int int8 = stack0.size();
        java.lang.Object obj9 = stack0.last();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 0 + "'", obj9.equals(0));
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        int int9 = stack3.size();
        int int10 = stack3.size();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        stack14.push((java.lang.Object) (short) 10);
        stack11.push((java.lang.Object) stack14);
        boolean boolean19 = stack11.isEmpty();
        java.lang.Object obj20 = stack11.last();
        boolean boolean21 = stack11.isFull();
        boolean boolean22 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Class<?> wildcardClass25 = stack23.getClass();
        java.lang.Class<?> wildcardClass26 = stack23.getClass();
        boolean boolean27 = stack23.isFull();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        stack28.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass37 = stack28.getClass();
        stack23.push((java.lang.Object) stack28);
        stack28.pop();
        int int40 = stack28.size();
        boolean boolean41 = stack28.isEmpty();
        stack28.clear();
        stack11.push((java.lang.Object) stack28);
        stack3.push((java.lang.Object) stack11);
        java.lang.Class<?> wildcardClass45 = stack3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        stack0.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        stack0.push(obj10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        stack0.clear();
        boolean boolean20 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass21 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        int int3 = stack0.size();
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        int int5 = stack4.size();
        java.lang.Object obj6 = null;
        stack4.push(obj6);
        stack4.pop();
        int int9 = stack4.size();
        stack4.clear();
        stack4.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass13 = stack4.getClass();
        boolean boolean14 = stack4.isEmpty();
        stack4.clear();
        stack4.clear();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        boolean boolean18 = stack17.isEmpty();
        stack17.clear();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Object obj22 = null;
        stack20.push(obj22);
        stack20.pop();
        int int25 = stack20.size();
        stack20.clear();
        stack20.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass29 = stack20.getClass();
        stack17.push((java.lang.Object) stack20);
        stack4.push((java.lang.Object) stack17);
        int int32 = stack17.size();
        stack0.push((java.lang.Object) int32);
        boolean boolean34 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        stack0.clear();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        stack14.push((java.lang.Object) (short) 10);
        stack11.push((java.lang.Object) stack14);
        boolean boolean19 = stack11.isEmpty();
        java.lang.Object obj20 = stack11.last();
        int int21 = stack11.size();
        stack0.push((java.lang.Object) stack11);
        boolean boolean23 = stack11.isEmpty();
        boolean boolean24 = stack11.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        java.lang.Class<?> wildcardClass17 = stack5.getClass();
        int int18 = stack5.size();
        stack5.clear();
        stack5.clear();
        int int21 = stack5.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        int int18 = stack17.size();
        stack17.clear();
        stack17.push((java.lang.Object) true);
        java.lang.Class<?> wildcardClass22 = stack17.getClass();
        stack0.push((java.lang.Object) wildcardClass22);
        boolean boolean24 = stack0.isEmpty();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        int int5 = stack0.size();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        stack0.pop();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        boolean boolean12 = stack8.isFull();
        boolean boolean13 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        stack8.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Class<?> wildcardClass18 = stack16.getClass();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        java.lang.Class<?> wildcardClass21 = stack19.getClass();
        java.lang.Class<?> wildcardClass22 = stack19.getClass();
        boolean boolean23 = stack19.isFull();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Object obj26 = null;
        stack24.push(obj26);
        stack24.pop();
        int int29 = stack24.size();
        stack24.clear();
        stack24.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass33 = stack24.getClass();
        stack19.push((java.lang.Object) stack24);
        boolean boolean35 = stack24.isEmpty();
        int int36 = stack24.size();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Object obj39 = null;
        stack37.push(obj39);
        stack37.pop();
        int int42 = stack37.size();
        stack37.clear();
        stack37.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass46 = stack37.getClass();
        boolean boolean47 = stack37.isFull();
        stack37.clear();
        jbhembise.testauto.example3.Stack stack49 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass50 = stack49.getClass();
        int int51 = stack49.size();
        stack49.push((java.lang.Object) (byte) 10);
        stack37.push((java.lang.Object) stack49);
        stack37.clear();
        stack24.push((java.lang.Object) stack37);
        stack16.push((java.lang.Object) stack37);
        boolean boolean58 = stack16.isFull();
        stack8.push((java.lang.Object) boolean58);
        java.lang.Object obj60 = stack8.last();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + obj60 + "' != '" + false + "'", obj60.equals(false));
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass27 = stack18.getClass();
        boolean boolean28 = stack18.isFull();
        stack18.clear();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass31 = stack30.getClass();
        int int32 = stack30.size();
        stack30.push((java.lang.Object) (byte) 10);
        stack18.push((java.lang.Object) stack30);
        stack18.clear();
        stack5.push((java.lang.Object) stack18);
        boolean boolean38 = stack5.isFull();
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        java.lang.Class<?> wildcardClass41 = stack39.getClass();
        java.lang.Class<?> wildcardClass42 = stack39.getClass();
        boolean boolean43 = stack39.isFull();
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        int int45 = stack44.size();
        java.lang.Object obj46 = null;
        stack44.push(obj46);
        stack44.pop();
        int int49 = stack44.size();
        stack44.clear();
        stack44.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass53 = stack44.getClass();
        stack39.push((java.lang.Object) stack44);
        java.lang.Object obj55 = stack44.last();
        java.lang.Object obj56 = stack44.last();
        stack5.push((java.lang.Object) stack44);
        boolean boolean58 = stack5.isFull();
        stack5.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + 10 + "'", obj55.equals(10));
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + 10 + "'", obj56.equals(10));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        boolean boolean3 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        stack6.push((java.lang.Object) true);
        boolean boolean11 = stack6.isEmpty();
        boolean boolean12 = stack6.isFull();
        stack6.pop();
        boolean boolean14 = stack6.isFull();
        int int15 = stack6.size();
        stack0.push((java.lang.Object) stack6);
        boolean boolean17 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        boolean boolean18 = stack0.isFull();
        stack0.pop();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Class<?> wildcardClass22 = stack20.getClass();
        java.lang.Class<?> wildcardClass23 = stack20.getClass();
        boolean boolean24 = stack20.isFull();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Object obj27 = null;
        stack25.push(obj27);
        stack25.pop();
        int int30 = stack25.size();
        stack25.clear();
        stack25.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass34 = stack25.getClass();
        stack20.push((java.lang.Object) stack25);
        java.lang.Object obj36 = stack25.last();
        stack25.pop();
        jbhembise.testauto.example3.Stack stack38 = new jbhembise.testauto.example3.Stack();
        int int39 = stack38.size();
        stack38.clear();
        stack38.push((java.lang.Object) true);
        boolean boolean43 = stack38.isEmpty();
        stack38.clear();
        boolean boolean45 = stack38.isEmpty();
        stack25.push((java.lang.Object) boolean45);
        stack25.pop();
        boolean boolean48 = stack25.isEmpty();
        stack0.push((java.lang.Object) boolean48);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + obj36 + "' != '" + 10 + "'", obj36.equals(10));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        java.lang.Object obj5 = stack0.last();
        stack0.clear();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + true + "'", obj5.equals(true));
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        boolean boolean11 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack12.clear();
        stack12.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        java.lang.Object obj21 = null;
        stack19.push(obj21);
        stack19.pop();
        int int24 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass28 = stack19.getClass();
        stack12.push((java.lang.Object) wildcardClass28);
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) true);
        boolean boolean35 = stack30.isEmpty();
        stack30.pop();
        stack12.push((java.lang.Object) stack30);
        stack0.push((java.lang.Object) stack12);
        int int39 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3 + "'", int39 == 3);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        int int11 = stack0.size();
        java.lang.Class<?> wildcardClass12 = stack0.getClass();
        stack0.pop();
        java.lang.Object obj14 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + 10L + "'", obj14.equals(10L));
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isFull();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        boolean boolean9 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass10 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        stack14.push((java.lang.Object) (short) 10);
        stack11.push((java.lang.Object) stack14);
        int int19 = stack14.size();
        java.lang.Class<?> wildcardClass20 = stack14.getClass();
        java.lang.Object obj21 = stack14.last();
        java.lang.Object obj22 = stack14.last();
        int int23 = stack14.size();
        stack0.push((java.lang.Object) int23);
        int int25 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + (short) 10 + "'", obj21.equals((short) 10));
        org.junit.Assert.assertTrue("'" + obj22 + "' != '" + (short) 10 + "'", obj22.equals((short) 10));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Object obj5 = null;
        stack3.push(obj5);
        stack3.pop();
        int int8 = stack3.size();
        stack3.clear();
        stack3.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass12 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        boolean boolean14 = stack3.isEmpty();
        boolean boolean15 = stack3.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass5 = stack0.getClass();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        boolean boolean7 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        boolean boolean28 = stack0.isFull();
        java.lang.Object obj29 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        boolean boolean18 = stack12.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass4 = stack3.getClass();
        int int5 = stack3.size();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) "hi!");
        int int4 = stack0.size();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        int int11 = stack5.size();
        stack5.push((java.lang.Object) 1.0f);
        stack5.clear();
        stack0.push((java.lang.Object) stack5);
        stack0.pop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack0.size();
        int int9 = stack0.size();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        int int5 = stack0.size();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        boolean boolean7 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        int int12 = stack0.size();
        int int13 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isFull();
        boolean boolean11 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Object obj14 = null;
        stack12.push(obj14);
        stack12.pop();
        int int17 = stack12.size();
        stack12.clear();
        stack12.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass21 = stack12.getClass();
        boolean boolean22 = stack12.isFull();
        stack12.clear();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass25 = stack24.getClass();
        int int26 = stack24.size();
        stack24.push((java.lang.Object) (byte) 10);
        stack12.push((java.lang.Object) stack24);
        stack12.clear();
        stack0.push((java.lang.Object) stack12);
        java.lang.Class<?> wildcardClass32 = stack0.getClass();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        stack0.push((java.lang.Object) false);
        stack0.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        boolean boolean20 = stack19.isEmpty();
        boolean boolean21 = stack19.isEmpty();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        boolean boolean23 = stack22.isEmpty();
        stack22.push((java.lang.Object) (short) 10);
        stack19.push((java.lang.Object) stack22);
        boolean boolean27 = stack19.isEmpty();
        java.lang.Object obj28 = stack19.last();
        int int29 = stack19.size();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Class<?> wildcardClass32 = stack30.getClass();
        java.lang.Class<?> wildcardClass33 = stack30.getClass();
        boolean boolean34 = stack30.isFull();
        jbhembise.testauto.example3.Stack stack35 = new jbhembise.testauto.example3.Stack();
        int int36 = stack35.size();
        java.lang.Object obj37 = null;
        stack35.push(obj37);
        stack35.pop();
        int int40 = stack35.size();
        stack35.clear();
        stack35.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass44 = stack35.getClass();
        stack30.push((java.lang.Object) stack35);
        boolean boolean46 = stack30.isFull();
        int int47 = stack30.size();
        stack19.push((java.lang.Object) stack30);
        boolean boolean49 = stack19.isFull();
        stack19.pop();
        stack0.push((java.lang.Object) stack19);
        java.lang.Object obj52 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isFull();
        boolean boolean8 = stack0.isFull();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        int int8 = stack0.size();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        boolean boolean11 = stack0.isEmpty();
        boolean boolean12 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        stack0.clear();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Class<?> wildcardClass12 = stack10.getClass();
        java.lang.Class<?> wildcardClass13 = stack10.getClass();
        boolean boolean14 = stack10.isFull();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        int int16 = stack15.size();
        java.lang.Object obj17 = null;
        stack15.push(obj17);
        stack15.pop();
        int int20 = stack15.size();
        stack15.clear();
        stack15.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass24 = stack15.getClass();
        stack10.push((java.lang.Object) stack15);
        java.lang.Object obj26 = stack15.last();
        stack15.pop();
        stack0.push((java.lang.Object) stack15);
        boolean boolean29 = stack15.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + 10 + "'", obj26.equals(10));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        stack13.pop();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.clear();
        boolean boolean36 = stack29.isEmpty();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Class<?> wildcardClass39 = stack37.getClass();
        java.lang.Class<?> wildcardClass40 = stack37.getClass();
        stack37.push((java.lang.Object) 10L);
        boolean boolean43 = stack37.isFull();
        stack29.push((java.lang.Object) stack37);
        stack29.push((java.lang.Object) false);
        stack29.clear();
        int int48 = stack29.size();
        stack13.push((java.lang.Object) stack29);
        java.lang.Class<?> wildcardClass50 = stack13.getClass();
        stack13.clear();
        stack13.push((java.lang.Object) (byte) 1);
        boolean boolean54 = stack13.isEmpty();
        stack13.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        java.lang.Object obj10 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + 10 + "'", obj10.equals(10));
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) "hi!");
        int int4 = stack0.size();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Class<?> wildcardClass7 = stack5.getClass();
        java.lang.Class<?> wildcardClass8 = stack5.getClass();
        stack5.push((java.lang.Object) 10L);
        stack5.pop();
        boolean boolean12 = stack5.isFull();
        stack0.push((java.lang.Object) stack5);
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        boolean boolean16 = stack14.isEmpty();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        boolean boolean18 = stack17.isEmpty();
        stack17.push((java.lang.Object) (short) 10);
        stack14.push((java.lang.Object) stack17);
        boolean boolean22 = stack14.isEmpty();
        java.lang.Object obj23 = stack14.last();
        int int24 = stack14.size();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Class<?> wildcardClass27 = stack25.getClass();
        java.lang.Class<?> wildcardClass28 = stack25.getClass();
        boolean boolean29 = stack25.isFull();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass39 = stack30.getClass();
        stack25.push((java.lang.Object) stack30);
        boolean boolean41 = stack25.isFull();
        int int42 = stack25.size();
        stack14.push((java.lang.Object) stack25);
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        int int45 = stack44.size();
        java.lang.Class<?> wildcardClass46 = stack44.getClass();
        java.lang.Class<?> wildcardClass47 = stack44.getClass();
        stack44.push((java.lang.Object) 10L);
        boolean boolean50 = stack44.isFull();
        stack25.push((java.lang.Object) boolean50);
        stack5.push((java.lang.Object) stack25);
        java.lang.Object obj53 = stack5.last();
        java.lang.Object obj54 = null;
        stack5.push(obj54);
        java.lang.Class<?> wildcardClass56 = stack5.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Object obj9 = stack0.last();
        int int10 = stack0.size();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        stack11.push((java.lang.Object) 10L);
        boolean boolean17 = stack11.isFull();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass19 = stack18.getClass();
        int int20 = stack18.size();
        stack11.push((java.lang.Object) int20);
        int int22 = stack11.size();
        java.lang.Class<?> wildcardClass23 = stack11.getClass();
        boolean boolean24 = stack11.isFull();
        stack0.push((java.lang.Object) boolean24);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        boolean boolean14 = stack11.isEmpty();
        stack0.push((java.lang.Object) boolean14);
        stack0.pop();
        boolean boolean17 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Object obj5 = null;
        stack3.push(obj5);
        stack3.pop();
        int int8 = stack3.size();
        stack3.clear();
        stack3.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass12 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        stack0.pop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        java.lang.Object obj18 = null;
        stack5.push(obj18);
        stack5.clear();
        boolean boolean21 = stack5.isFull();
        java.lang.Class<?> wildcardClass22 = stack5.getClass();
        stack5.clear();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        boolean boolean25 = stack24.isEmpty();
        boolean boolean26 = stack24.isEmpty();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        boolean boolean28 = stack27.isEmpty();
        stack27.push((java.lang.Object) (short) 10);
        stack24.push((java.lang.Object) stack27);
        boolean boolean32 = stack24.isEmpty();
        java.lang.Object obj33 = stack24.last();
        int int34 = stack24.size();
        jbhembise.testauto.example3.Stack stack35 = new jbhembise.testauto.example3.Stack();
        int int36 = stack35.size();
        java.lang.Class<?> wildcardClass37 = stack35.getClass();
        java.lang.Class<?> wildcardClass38 = stack35.getClass();
        boolean boolean39 = stack35.isFull();
        jbhembise.testauto.example3.Stack stack40 = new jbhembise.testauto.example3.Stack();
        int int41 = stack40.size();
        java.lang.Object obj42 = null;
        stack40.push(obj42);
        stack40.pop();
        int int45 = stack40.size();
        stack40.clear();
        stack40.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass49 = stack40.getClass();
        stack35.push((java.lang.Object) stack40);
        boolean boolean51 = stack35.isFull();
        int int52 = stack35.size();
        stack24.push((java.lang.Object) stack35);
        stack5.push((java.lang.Object) stack35);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        stack0.clear();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Class<?> wildcardClass12 = stack10.getClass();
        java.lang.Class<?> wildcardClass13 = stack10.getClass();
        boolean boolean14 = stack10.isFull();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        int int16 = stack15.size();
        java.lang.Object obj17 = null;
        stack15.push(obj17);
        stack15.pop();
        int int20 = stack15.size();
        stack15.clear();
        stack15.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass24 = stack15.getClass();
        stack10.push((java.lang.Object) stack15);
        java.lang.Object obj26 = stack15.last();
        stack15.pop();
        stack0.push((java.lang.Object) stack15);
        int int29 = stack0.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + 10 + "'", obj26.equals(10));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        boolean boolean14 = stack11.isEmpty();
        stack0.push((java.lang.Object) boolean14);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Class<?> wildcardClass18 = stack16.getClass();
        java.lang.Class<?> wildcardClass19 = stack16.getClass();
        boolean boolean20 = stack16.isFull();
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Object obj23 = null;
        stack21.push(obj23);
        stack21.pop();
        int int26 = stack21.size();
        stack21.clear();
        stack21.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass30 = stack21.getClass();
        stack16.push((java.lang.Object) stack21);
        boolean boolean32 = stack21.isEmpty();
        java.lang.Class<?> wildcardClass33 = stack21.getClass();
        int int34 = stack21.size();
        stack21.clear();
        stack21.clear();
        stack0.push((java.lang.Object) stack21);
        boolean boolean38 = stack21.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.push((java.lang.Object) (byte) 100);
        boolean boolean14 = stack0.isEmpty();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Object obj5 = null;
        stack3.push(obj5);
        stack3.pop();
        int int8 = stack3.size();
        stack3.clear();
        stack3.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass12 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        stack3.clear();
        boolean boolean15 = stack3.isEmpty();
        stack3.clear();
        boolean boolean17 = stack3.isEmpty();
        int int18 = stack3.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        java.lang.Object obj18 = stack0.last();
        stack0.clear();
        boolean boolean20 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) true);
        boolean boolean21 = stack16.isEmpty();
        stack16.clear();
        boolean boolean23 = stack16.isEmpty();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Class<?> wildcardClass26 = stack24.getClass();
        java.lang.Class<?> wildcardClass27 = stack24.getClass();
        stack24.push((java.lang.Object) 10L);
        boolean boolean30 = stack24.isFull();
        stack16.push((java.lang.Object) stack24);
        java.lang.Object obj32 = stack16.last();
        stack16.clear();
        java.lang.Class<?> wildcardClass34 = stack16.getClass();
        stack8.push((java.lang.Object) stack16);
        stack16.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        boolean boolean5 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        java.lang.Class<?> wildcardClass8 = stack6.getClass();
        java.lang.Class<?> wildcardClass9 = stack6.getClass();
        stack0.push((java.lang.Object) wildcardClass9);
        boolean boolean11 = stack0.isEmpty();
        java.lang.Object obj12 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        boolean boolean5 = stack0.isFull();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        int int8 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        java.lang.Object obj28 = stack0.last();
        int int29 = stack0.size();
        int int30 = stack0.size();
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        int int32 = stack31.size();
        java.lang.Class<?> wildcardClass33 = stack31.getClass();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        int int35 = stack34.size();
        java.lang.Class<?> wildcardClass36 = stack34.getClass();
        java.lang.Class<?> wildcardClass37 = stack34.getClass();
        boolean boolean38 = stack34.isFull();
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        java.lang.Object obj41 = null;
        stack39.push(obj41);
        stack39.pop();
        int int44 = stack39.size();
        stack39.clear();
        stack39.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass48 = stack39.getClass();
        stack34.push((java.lang.Object) stack39);
        boolean boolean50 = stack39.isEmpty();
        int int51 = stack39.size();
        jbhembise.testauto.example3.Stack stack52 = new jbhembise.testauto.example3.Stack();
        int int53 = stack52.size();
        java.lang.Object obj54 = null;
        stack52.push(obj54);
        stack52.pop();
        int int57 = stack52.size();
        stack52.clear();
        stack52.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass61 = stack52.getClass();
        boolean boolean62 = stack52.isFull();
        stack52.clear();
        jbhembise.testauto.example3.Stack stack64 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass65 = stack64.getClass();
        int int66 = stack64.size();
        stack64.push((java.lang.Object) (byte) 10);
        stack52.push((java.lang.Object) stack64);
        stack52.clear();
        stack39.push((java.lang.Object) stack52);
        stack31.push((java.lang.Object) stack52);
        boolean boolean73 = stack31.isEmpty();
        stack0.push((java.lang.Object) stack31);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        boolean boolean26 = stack0.isFull();
        int int27 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        java.lang.Class<?> wildcardClass17 = stack5.getClass();
        int int18 = stack5.size();
        java.lang.Class<?> wildcardClass19 = stack5.getClass();
        java.lang.Object obj20 = stack5.last();
        stack5.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + 10 + "'", obj20.equals(10));
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        stack0.pop();
        java.lang.Class<?> wildcardClass11 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        java.lang.Object obj5 = stack0.last();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + true + "'", obj5.equals(true));
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Object obj5 = null;
        stack3.push(obj5);
        stack3.pop();
        int int8 = stack3.size();
        stack3.clear();
        stack3.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass12 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        stack3.clear();
        boolean boolean15 = stack3.isEmpty();
        stack3.push((java.lang.Object) (-1));
        stack3.pop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        java.lang.Object obj18 = stack0.last();
        java.lang.Object obj19 = stack0.last();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        stack20.clear();
        stack20.push((java.lang.Object) true);
        java.lang.Class<?> wildcardClass25 = stack20.getClass();
        stack0.push((java.lang.Object) wildcardClass25);
        boolean boolean27 = stack0.isEmpty();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isFull();
        int int12 = stack0.size();
        java.lang.Object obj13 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + obj13 + "' != '" + 10 + "'", obj13.equals(10));
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        stack0.clear();
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        int int19 = stack0.size();
        int int20 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        boolean boolean3 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        boolean boolean5 = stack4.isEmpty();
        boolean boolean6 = stack4.isEmpty();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        boolean boolean8 = stack7.isEmpty();
        stack7.push((java.lang.Object) (short) 10);
        stack4.push((java.lang.Object) stack7);
        stack7.clear();
        stack0.push((java.lang.Object) stack7);
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        int int15 = stack14.size();
        stack14.clear();
        stack14.push((java.lang.Object) true);
        boolean boolean19 = stack14.isEmpty();
        java.lang.Object obj20 = stack14.last();
        java.lang.Object obj21 = stack14.last();
        java.lang.Object obj22 = stack14.last();
        stack0.push((java.lang.Object) stack14);
        java.lang.Object obj24 = stack0.last();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + true + "'", obj20.equals(true));
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + true + "'", obj21.equals(true));
        org.junit.Assert.assertTrue("'" + obj22 + "' != '" + true + "'", obj22.equals(true));
        org.junit.Assert.assertNotNull(obj24);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        java.lang.Class<?> wildcardClass9 = stack3.getClass();
        java.lang.Object obj10 = stack3.last();
        boolean boolean11 = stack3.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 10 + "'", obj10.equals((short) 10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        stack0.pop();
        java.lang.Class<?> wildcardClass29 = stack0.getClass();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        stack0.clear();
        boolean boolean19 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        stack0.push((java.lang.Object) 0);
        java.lang.Class<?> wildcardClass14 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Object obj5 = null;
        stack3.push(obj5);
        stack3.pop();
        int int8 = stack3.size();
        int int9 = stack3.size();
        stack0.push((java.lang.Object) int9);
        boolean boolean11 = stack0.isEmpty();
        boolean boolean12 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isEmpty();
        stack0.clear();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        stack14.push((java.lang.Object) (short) 10);
        stack11.push((java.lang.Object) stack14);
        int int19 = stack14.size();
        int int20 = stack14.size();
        stack0.push((java.lang.Object) stack14);
        java.lang.Class<?> wildcardClass22 = stack0.getClass();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        int int5 = stack0.size();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        java.lang.Class<?> wildcardClass8 = stack6.getClass();
        java.lang.Class<?> wildcardClass9 = stack6.getClass();
        boolean boolean10 = stack6.isFull();
        boolean boolean11 = stack6.isFull();
        stack0.push((java.lang.Object) boolean11);
        java.lang.Object obj13 = stack0.last();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + obj13 + "' != '" + false + "'", obj13.equals(false));
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        java.lang.Object obj8 = stack0.last();
        java.lang.Object obj9 = stack0.last();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        int int11 = stack0.size();
        boolean boolean12 = stack0.isFull();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Class<?> wildcardClass5 = stack3.getClass();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        boolean boolean7 = stack3.isFull();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Object obj10 = null;
        stack8.push(obj10);
        stack8.pop();
        int int13 = stack8.size();
        stack8.clear();
        stack8.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass17 = stack8.getClass();
        stack3.push((java.lang.Object) stack8);
        boolean boolean19 = stack8.isEmpty();
        int int20 = stack8.size();
        boolean boolean21 = stack8.isEmpty();
        boolean boolean22 = stack8.isEmpty();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Object obj25 = null;
        stack23.push(obj25);
        stack23.pop();
        int int28 = stack23.size();
        stack23.clear();
        java.lang.Class<?> wildcardClass30 = stack23.getClass();
        stack8.push((java.lang.Object) wildcardClass30);
        stack0.push((java.lang.Object) stack8);
        java.lang.Class<?> wildcardClass33 = stack0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        stack0.clear();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass6 = stack5.getClass();
        int int7 = stack5.size();
        stack5.push((java.lang.Object) (byte) 10);
        int int10 = stack5.size();
        stack5.clear();
        stack0.push((java.lang.Object) stack5);
        int int13 = stack0.size();
        boolean boolean14 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isFull();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) true);
        boolean boolean14 = stack9.isEmpty();
        boolean boolean15 = stack9.isFull();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) int16);
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        boolean boolean19 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) "hi!");
        int int4 = stack0.size();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Class<?> wildcardClass7 = stack5.getClass();
        java.lang.Class<?> wildcardClass8 = stack5.getClass();
        stack5.push((java.lang.Object) 10L);
        stack5.pop();
        boolean boolean12 = stack5.isFull();
        stack0.push((java.lang.Object) stack5);
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        boolean boolean16 = stack14.isEmpty();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        boolean boolean18 = stack17.isEmpty();
        stack17.push((java.lang.Object) (short) 10);
        stack14.push((java.lang.Object) stack17);
        boolean boolean22 = stack14.isEmpty();
        java.lang.Object obj23 = stack14.last();
        int int24 = stack14.size();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Class<?> wildcardClass27 = stack25.getClass();
        java.lang.Class<?> wildcardClass28 = stack25.getClass();
        boolean boolean29 = stack25.isFull();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass39 = stack30.getClass();
        stack25.push((java.lang.Object) stack30);
        boolean boolean41 = stack25.isFull();
        int int42 = stack25.size();
        stack14.push((java.lang.Object) stack25);
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        int int45 = stack44.size();
        java.lang.Class<?> wildcardClass46 = stack44.getClass();
        java.lang.Class<?> wildcardClass47 = stack44.getClass();
        stack44.push((java.lang.Object) 10L);
        boolean boolean50 = stack44.isFull();
        stack25.push((java.lang.Object) boolean50);
        stack5.push((java.lang.Object) stack25);
        java.lang.Object obj53 = stack25.last();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + obj53 + "' != '" + false + "'", obj53.equals(false));
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        boolean boolean12 = stack0.isEmpty();
        int int13 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        stack12.push((java.lang.Object) 10L);
        boolean boolean18 = stack12.isFull();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass20 = stack19.getClass();
        int int21 = stack19.size();
        stack12.push((java.lang.Object) int21);
        boolean boolean23 = stack12.isFull();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Class<?> wildcardClass26 = stack24.getClass();
        java.lang.Class<?> wildcardClass27 = stack24.getClass();
        java.lang.Class<?> wildcardClass28 = stack24.getClass();
        stack24.clear();
        stack24.clear();
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        int int32 = stack31.size();
        java.lang.Object obj33 = null;
        stack31.push(obj33);
        stack31.pop();
        int int36 = stack31.size();
        stack31.clear();
        stack31.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass40 = stack31.getClass();
        stack24.push((java.lang.Object) wildcardClass40);
        jbhembise.testauto.example3.Stack stack42 = new jbhembise.testauto.example3.Stack();
        int int43 = stack42.size();
        stack42.clear();
        stack42.push((java.lang.Object) true);
        boolean boolean47 = stack42.isEmpty();
        stack42.pop();
        stack24.push((java.lang.Object) stack42);
        stack12.push((java.lang.Object) stack24);
        stack0.push((java.lang.Object) stack12);
        java.lang.Object obj52 = stack0.last();
        stack0.pop();
        boolean boolean54 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        boolean boolean19 = stack5.isEmpty();
        int int20 = stack5.size();
        int int21 = stack5.size();
        java.lang.Class<?> wildcardClass22 = stack5.getClass();
        int int23 = stack5.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        stack0.pop();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isFull();
        boolean boolean9 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) true);
        int int10 = stack5.size();
        stack0.push((java.lang.Object) int10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        int int11 = stack0.size();
        boolean boolean12 = stack0.isFull();
        java.lang.Class<?> wildcardClass13 = stack0.getClass();
        boolean boolean14 = stack0.isFull();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        java.lang.Object obj18 = stack0.last();
        stack0.clear();
        stack0.push((java.lang.Object) (-1.0f));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj18);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        stack0.clear();
        int int19 = stack0.size();
        java.lang.Class<?> wildcardClass20 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass19 = stack18.getClass();
        int int20 = stack18.size();
        stack18.push((java.lang.Object) (byte) 10);
        java.lang.Object obj23 = stack18.last();
        boolean boolean24 = stack18.isFull();
        stack0.push((java.lang.Object) stack18);
        boolean boolean26 = stack18.isFull();
        int int27 = stack18.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (byte) 10 + "'", obj23.equals((byte) 10));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.clear();
        stack0.push((java.lang.Object) stack16);
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Class<?> wildcardClass23 = stack21.getClass();
        java.lang.Class<?> wildcardClass24 = stack21.getClass();
        java.lang.Class<?> wildcardClass25 = stack21.getClass();
        stack21.clear();
        stack21.clear();
        stack0.push((java.lang.Object) stack21);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        stack5.pop();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        boolean boolean19 = stack5.isFull();
        stack5.clear();
        int int21 = stack5.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        boolean boolean11 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack12.clear();
        stack12.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        java.lang.Object obj21 = null;
        stack19.push(obj21);
        stack19.pop();
        int int24 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass28 = stack19.getClass();
        stack12.push((java.lang.Object) wildcardClass28);
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) true);
        boolean boolean35 = stack30.isEmpty();
        stack30.pop();
        stack12.push((java.lang.Object) stack30);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        stack39.clear();
        boolean boolean42 = stack39.isFull();
        stack39.clear();
        stack39.clear();
        jbhembise.testauto.example3.Stack stack45 = new jbhembise.testauto.example3.Stack();
        int int46 = stack45.size();
        stack45.clear();
        stack45.push((java.lang.Object) true);
        boolean boolean50 = stack45.isEmpty();
        int int51 = stack45.size();
        int int52 = stack45.size();
        stack39.push((java.lang.Object) stack45);
        int int54 = stack39.size();
        jbhembise.testauto.example3.Stack stack55 = new jbhembise.testauto.example3.Stack();
        int int56 = stack55.size();
        stack55.clear();
        stack55.push((java.lang.Object) true);
        boolean boolean60 = stack55.isEmpty();
        stack55.clear();
        boolean boolean62 = stack55.isEmpty();
        jbhembise.testauto.example3.Stack stack63 = new jbhembise.testauto.example3.Stack();
        int int64 = stack63.size();
        java.lang.Class<?> wildcardClass65 = stack63.getClass();
        java.lang.Class<?> wildcardClass66 = stack63.getClass();
        stack63.push((java.lang.Object) 10L);
        boolean boolean69 = stack63.isFull();
        stack55.push((java.lang.Object) stack63);
        java.lang.Object obj71 = stack55.last();
        stack39.push((java.lang.Object) stack55);
        stack12.push((java.lang.Object) stack39);
        boolean boolean74 = stack39.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        stack0.clear();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        stack14.push((java.lang.Object) (short) 10);
        stack11.push((java.lang.Object) stack14);
        boolean boolean19 = stack11.isEmpty();
        java.lang.Object obj20 = stack11.last();
        int int21 = stack11.size();
        stack0.push((java.lang.Object) stack11);
        int int23 = stack0.size();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        stack6.push((java.lang.Object) true);
        boolean boolean11 = stack6.isEmpty();
        int int12 = stack6.size();
        int int13 = stack6.size();
        stack0.push((java.lang.Object) stack6);
        java.lang.Class<?> wildcardClass15 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) true);
        boolean boolean21 = stack16.isEmpty();
        boolean boolean22 = stack16.isFull();
        stack0.push((java.lang.Object) stack16);
        boolean boolean24 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        boolean boolean17 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        boolean boolean21 = stack20.isEmpty();
        stack20.clear();
        boolean boolean23 = stack20.isFull();
        boolean boolean24 = stack20.isEmpty();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Class<?> wildcardClass27 = stack25.getClass();
        java.lang.Class<?> wildcardClass28 = stack25.getClass();
        boolean boolean29 = stack25.isFull();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass39 = stack30.getClass();
        stack25.push((java.lang.Object) stack30);
        stack30.pop();
        int int42 = stack30.size();
        boolean boolean43 = stack30.isEmpty();
        stack20.push((java.lang.Object) boolean43);
        stack20.pop();
        stack0.push((java.lang.Object) stack20);
        stack20.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass10 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        int int5 = stack0.size();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        boolean boolean11 = stack10.isEmpty();
        boolean boolean12 = stack10.isEmpty();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.push((java.lang.Object) (short) 10);
        stack10.push((java.lang.Object) stack13);
        java.lang.Object obj18 = stack13.last();
        int int19 = stack13.size();
        java.lang.Object obj20 = stack13.last();
        stack0.push(obj20);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + (short) 10 + "'", obj18.equals((short) 10));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + obj20 + "' != '" + (short) 10 + "'", obj20.equals((short) 10));
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        boolean boolean5 = stack0.isFull();
        boolean boolean6 = stack0.isFull();
        boolean boolean7 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        boolean boolean4 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Class<?> wildcardClass7 = stack5.getClass();
        java.lang.Class<?> wildcardClass8 = stack5.getClass();
        boolean boolean9 = stack5.isFull();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass19 = stack10.getClass();
        stack5.push((java.lang.Object) stack10);
        stack10.pop();
        int int22 = stack10.size();
        boolean boolean23 = stack10.isEmpty();
        stack0.push((java.lang.Object) boolean23);
        stack0.pop();
        jbhembise.testauto.example3.Stack stack26 = new jbhembise.testauto.example3.Stack();
        int int27 = stack26.size();
        java.lang.Object obj28 = null;
        stack26.push(obj28);
        stack26.pop();
        int int31 = stack26.size();
        stack26.clear();
        java.lang.Class<?> wildcardClass33 = stack26.getClass();
        stack0.push((java.lang.Object) stack26);
        boolean boolean35 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        boolean boolean14 = stack11.isEmpty();
        stack0.push((java.lang.Object) boolean14);
        stack0.pop();
        int int17 = stack0.size();
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        boolean boolean19 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        stack13.pop();
        boolean boolean29 = stack13.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.clear();
        stack0.push((java.lang.Object) stack16);
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        stack21.clear();
        stack21.push((java.lang.Object) true);
        boolean boolean26 = stack21.isEmpty();
        int int27 = stack21.size();
        java.lang.Class<?> wildcardClass28 = stack21.getClass();
        boolean boolean29 = stack21.isEmpty();
        boolean boolean30 = stack21.isFull();
        boolean boolean31 = stack21.isFull();
        stack21.clear();
        boolean boolean33 = stack21.isEmpty();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        int int35 = stack34.size();
        java.lang.Class<?> wildcardClass36 = stack34.getClass();
        java.lang.Class<?> wildcardClass37 = stack34.getClass();
        stack34.push((java.lang.Object) 10L);
        boolean boolean40 = stack34.isFull();
        jbhembise.testauto.example3.Stack stack41 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass42 = stack41.getClass();
        int int43 = stack41.size();
        stack34.push((java.lang.Object) int43);
        int int45 = stack34.size();
        java.lang.Class<?> wildcardClass46 = stack34.getClass();
        boolean boolean47 = stack34.isFull();
        stack21.push((java.lang.Object) stack34);
        stack16.push((java.lang.Object) stack34);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        java.lang.Object obj7 = stack0.last();
        boolean boolean8 = stack0.isFull();
        java.lang.Object obj9 = stack0.last();
        int int10 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + 10L + "'", obj7.equals(10L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10L + "'", obj9.equals(10L));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        stack0.clear();
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        boolean boolean21 = stack19.isEmpty();
        int int22 = stack19.size();
        stack0.push((java.lang.Object) int22);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        int int5 = stack4.size();
        java.lang.Class<?> wildcardClass6 = stack4.getClass();
        java.lang.Class<?> wildcardClass7 = stack4.getClass();
        boolean boolean8 = stack4.isFull();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Object obj11 = null;
        stack9.push(obj11);
        stack9.pop();
        int int14 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        stack4.push((java.lang.Object) stack9);
        boolean boolean20 = stack4.isFull();
        stack4.clear();
        boolean boolean22 = stack4.isFull();
        stack0.push((java.lang.Object) stack4);
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        boolean boolean25 = stack24.isFull();
        stack4.push((java.lang.Object) stack24);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass4 = stack3.getClass();
        int int5 = stack3.size();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        int int8 = stack0.size();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        java.lang.Class<?> wildcardClass9 = stack3.getClass();
        java.lang.Object obj10 = stack3.last();
        java.lang.Object obj11 = stack3.last();
        int int12 = stack3.size();
        boolean boolean13 = stack3.isEmpty();
        java.lang.Class<?> wildcardClass14 = stack3.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 10 + "'", obj10.equals((short) 10));
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 10 + "'", obj11.equals((short) 10));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Class<?> wildcardClass5 = stack3.getClass();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        java.lang.Class<?> wildcardClass7 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        boolean boolean9 = stack3.isFull();
        java.lang.Class<?> wildcardClass10 = stack3.getClass();
        int int11 = stack3.size();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        boolean boolean15 = stack11.isFull();
        boolean boolean16 = stack11.isFull();
        boolean boolean17 = stack11.isFull();
        boolean boolean18 = stack11.isEmpty();
        java.lang.Class<?> wildcardClass19 = stack11.getClass();
        stack0.push((java.lang.Object) wildcardClass19);
        boolean boolean21 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        stack0.pop();
        stack0.clear();
        stack0.push((java.lang.Object) (-1));
        stack0.pop();
        boolean boolean11 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack0.size();
        java.lang.Object obj9 = stack0.last();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(obj9);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isFull();
        int int11 = stack0.size();
        boolean boolean12 = stack0.isFull();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Class<?> wildcardClass5 = stack3.getClass();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        java.lang.Class<?> wildcardClass7 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        boolean boolean13 = stack9.isFull();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        int int15 = stack14.size();
        java.lang.Object obj16 = null;
        stack14.push(obj16);
        stack14.pop();
        int int19 = stack14.size();
        stack14.clear();
        stack14.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass23 = stack14.getClass();
        stack9.push((java.lang.Object) stack14);
        java.lang.Class<?> wildcardClass25 = stack9.getClass();
        stack3.push((java.lang.Object) stack9);
        java.lang.Object obj27 = stack9.last();
        boolean boolean28 = stack9.isFull();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isEmpty();
        stack0.clear();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        stack14.push((java.lang.Object) (short) 10);
        stack11.push((java.lang.Object) stack14);
        int int19 = stack14.size();
        int int20 = stack14.size();
        stack0.push((java.lang.Object) stack14);
        java.lang.Class<?> wildcardClass22 = stack0.getClass();
        boolean boolean23 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        java.lang.Object obj8 = stack3.last();
        int int9 = stack3.size();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Class<?> wildcardClass12 = stack10.getClass();
        java.lang.Class<?> wildcardClass13 = stack10.getClass();
        boolean boolean14 = stack10.isFull();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        int int16 = stack15.size();
        java.lang.Object obj17 = null;
        stack15.push(obj17);
        stack15.pop();
        int int20 = stack15.size();
        stack15.clear();
        stack15.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass24 = stack15.getClass();
        stack10.push((java.lang.Object) stack15);
        boolean boolean26 = stack15.isEmpty();
        int int27 = stack15.size();
        boolean boolean28 = stack15.isEmpty();
        java.lang.Object obj29 = null;
        stack15.push(obj29);
        java.lang.Class<?> wildcardClass31 = stack15.getClass();
        java.lang.Object obj32 = null;
        stack15.push(obj32);
        java.lang.Class<?> wildcardClass34 = stack15.getClass();
        stack3.push((java.lang.Object) wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 10 + "'", obj8.equals((short) 10));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.clear();
        stack0.push((java.lang.Object) stack16);
        java.lang.Class<?> wildcardClass21 = stack16.getClass();
        java.lang.Class<?> wildcardClass22 = stack16.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        boolean boolean25 = stack16.isEmpty();
        stack16.pop();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Class<?> wildcardClass29 = stack27.getClass();
        java.lang.Class<?> wildcardClass30 = stack27.getClass();
        java.lang.Class<?> wildcardClass31 = stack27.getClass();
        stack27.clear();
        stack27.clear();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        int int35 = stack34.size();
        java.lang.Object obj36 = null;
        stack34.push(obj36);
        stack34.pop();
        int int39 = stack34.size();
        stack34.clear();
        stack34.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass43 = stack34.getClass();
        stack27.push((java.lang.Object) wildcardClass43);
        jbhembise.testauto.example3.Stack stack45 = new jbhembise.testauto.example3.Stack();
        int int46 = stack45.size();
        stack45.clear();
        stack45.push((java.lang.Object) true);
        boolean boolean50 = stack45.isEmpty();
        stack45.pop();
        stack27.push((java.lang.Object) stack45);
        stack16.push((java.lang.Object) stack45);
        stack0.push((java.lang.Object) stack45);
        stack45.push((java.lang.Object) (short) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isFull();
        int int11 = stack0.size();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        stack0.push((java.lang.Object) wildcardClass15);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        stack12.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.pop();
        boolean boolean13 = stack0.isFull();
        java.lang.Class<?> wildcardClass14 = stack0.getClass();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        int int10 = stack0.size();
        java.lang.Object obj11 = stack0.last();
        stack0.clear();
        int int13 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        int int8 = stack0.size();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        java.lang.Class<?> wildcardClass12 = stack0.getClass();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Object obj9 = stack0.last();
        int int10 = stack0.size();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        boolean boolean15 = stack11.isFull();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack11.push((java.lang.Object) stack16);
        boolean boolean27 = stack11.isFull();
        int int28 = stack11.size();
        stack0.push((java.lang.Object) stack11);
        boolean boolean30 = stack0.isEmpty();
        java.lang.Object obj31 = stack0.last();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass4 = stack3.getClass();
        int int5 = stack3.size();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        int int8 = stack0.size();
        java.lang.Object obj9 = stack0.last();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(obj9);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        java.lang.Class<?> wildcardClass19 = stack5.getClass();
        boolean boolean20 = stack5.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        int int18 = stack17.size();
        stack17.clear();
        stack17.push((java.lang.Object) true);
        java.lang.Class<?> wildcardClass22 = stack17.getClass();
        stack0.push((java.lang.Object) wildcardClass22);
        boolean boolean24 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        boolean boolean5 = stack0.isFull();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        java.lang.Class<?> wildcardClass12 = stack8.getClass();
        boolean boolean13 = stack8.isEmpty();
        java.lang.Class<?> wildcardClass14 = stack8.getClass();
        stack0.push((java.lang.Object) stack8);
        stack0.clear();
        boolean boolean17 = stack0.isEmpty();
        boolean boolean18 = stack0.isFull();
        java.lang.Class<?> wildcardClass19 = stack0.getClass();
        int int20 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Class<?> wildcardClass5 = stack3.getClass();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        java.lang.Class<?> wildcardClass7 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        boolean boolean9 = stack3.isFull();
        stack3.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Object obj13 = null;
        stack11.push(obj13);
        stack11.pop();
        int int16 = stack11.size();
        stack11.clear();
        boolean boolean18 = stack11.isEmpty();
        boolean boolean19 = stack11.isEmpty();
        java.lang.Class<?> wildcardClass20 = stack11.getClass();
        int int21 = stack11.size();
        java.lang.Class<?> wildcardClass22 = stack11.getClass();
        stack3.push((java.lang.Object) stack11);
        stack3.clear();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        java.lang.Object obj18 = stack5.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + obj18 + "' != '" + 10 + "'", obj18.equals(10));
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        boolean boolean18 = stack0.isFull();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.clear();
        int int4 = stack0.size();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        stack6.push((java.lang.Object) true);
        boolean boolean11 = stack6.isEmpty();
        int int12 = stack6.size();
        int int13 = stack6.size();
        stack0.push((java.lang.Object) stack6);
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        boolean boolean5 = stack0.isFull();
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        boolean boolean17 = stack7.isFull();
        stack7.clear();
        int int19 = stack7.size();
        stack0.push((java.lang.Object) int19);
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Class<?> wildcardClass23 = stack21.getClass();
        java.lang.Class<?> wildcardClass24 = stack21.getClass();
        boolean boolean25 = stack21.isFull();
        jbhembise.testauto.example3.Stack stack26 = new jbhembise.testauto.example3.Stack();
        int int27 = stack26.size();
        java.lang.Object obj28 = null;
        stack26.push(obj28);
        stack26.pop();
        int int31 = stack26.size();
        stack26.clear();
        stack26.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass35 = stack26.getClass();
        stack21.push((java.lang.Object) stack26);
        boolean boolean37 = stack26.isEmpty();
        int int38 = stack26.size();
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        java.lang.Object obj41 = null;
        stack39.push(obj41);
        stack39.pop();
        int int44 = stack39.size();
        stack39.clear();
        stack39.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass48 = stack39.getClass();
        boolean boolean49 = stack39.isFull();
        stack39.clear();
        jbhembise.testauto.example3.Stack stack51 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass52 = stack51.getClass();
        int int53 = stack51.size();
        stack51.push((java.lang.Object) (byte) 10);
        stack39.push((java.lang.Object) stack51);
        stack39.clear();
        stack26.push((java.lang.Object) stack39);
        java.lang.Class<?> wildcardClass59 = stack39.getClass();
        stack0.push((java.lang.Object) wildcardClass59);
        int int61 = stack0.size();
        stack0.clear();
        boolean boolean63 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2 + "'", int61 == 2);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        java.lang.Object obj7 = stack0.last();
        java.lang.Object obj8 = stack0.last();
        int int9 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + 10L + "'", obj7.equals(10L));
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + 10L + "'", obj8.equals(10L));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        boolean boolean6 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        java.lang.Object obj10 = stack0.last();
        stack0.clear();
        boolean boolean12 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + 10 + "'", obj10.equals(10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        stack13.pop();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.clear();
        boolean boolean36 = stack29.isEmpty();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Class<?> wildcardClass39 = stack37.getClass();
        java.lang.Class<?> wildcardClass40 = stack37.getClass();
        stack37.push((java.lang.Object) 10L);
        boolean boolean43 = stack37.isFull();
        stack29.push((java.lang.Object) stack37);
        stack29.push((java.lang.Object) false);
        stack29.clear();
        int int48 = stack29.size();
        stack13.push((java.lang.Object) stack29);
        java.lang.Class<?> wildcardClass50 = stack13.getClass();
        boolean boolean51 = stack13.isFull();
        jbhembise.testauto.example3.Stack stack52 = new jbhembise.testauto.example3.Stack();
        int int53 = stack52.size();
        java.lang.Class<?> wildcardClass54 = stack52.getClass();
        java.lang.Class<?> wildcardClass55 = stack52.getClass();
        boolean boolean56 = stack52.isFull();
        jbhembise.testauto.example3.Stack stack57 = new jbhembise.testauto.example3.Stack();
        int int58 = stack57.size();
        java.lang.Object obj59 = null;
        stack57.push(obj59);
        stack57.pop();
        int int62 = stack57.size();
        stack57.clear();
        stack57.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass66 = stack57.getClass();
        stack52.push((java.lang.Object) stack57);
        stack52.pop();
        boolean boolean69 = stack52.isEmpty();
        java.lang.Class<?> wildcardClass70 = stack52.getClass();
        stack13.push((java.lang.Object) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = stack13.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        stack18.clear();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Class<?> wildcardClass29 = stack27.getClass();
        java.lang.Class<?> wildcardClass30 = stack27.getClass();
        java.lang.Class<?> wildcardClass31 = stack27.getClass();
        stack27.clear();
        stack27.clear();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        int int35 = stack34.size();
        java.lang.Object obj36 = null;
        stack34.push(obj36);
        stack34.pop();
        int int39 = stack34.size();
        stack34.clear();
        stack34.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass43 = stack34.getClass();
        stack27.push((java.lang.Object) wildcardClass43);
        stack18.push((java.lang.Object) wildcardClass43);
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        boolean boolean47 = stack46.isEmpty();
        stack46.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack50 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass51 = stack50.getClass();
        int int52 = stack50.size();
        stack46.push((java.lang.Object) int52);
        int int54 = stack46.size();
        java.lang.Object obj55 = stack46.last();
        stack18.push(obj55);
        java.lang.Object obj57 = stack18.last();
        stack18.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertTrue("'" + obj55 + "' != '" + 0 + "'", obj55.equals(0));
        org.junit.Assert.assertTrue("'" + obj57 + "' != '" + 0 + "'", obj57.equals(0));
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Object obj5 = null;
        stack3.push(obj5);
        stack3.pop();
        int int8 = stack3.size();
        stack3.clear();
        stack3.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass12 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        stack3.clear();
        boolean boolean15 = stack3.isEmpty();
        stack3.push((java.lang.Object) (-1));
        java.lang.Class<?> wildcardClass18 = stack3.getClass();
        int int19 = stack3.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        stack8.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Class<?> wildcardClass5 = stack3.getClass();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        java.lang.Class<?> wildcardClass7 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        boolean boolean13 = stack9.isFull();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        int int15 = stack14.size();
        java.lang.Object obj16 = null;
        stack14.push(obj16);
        stack14.pop();
        int int19 = stack14.size();
        stack14.clear();
        stack14.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass23 = stack14.getClass();
        stack9.push((java.lang.Object) stack14);
        java.lang.Class<?> wildcardClass25 = stack9.getClass();
        stack3.push((java.lang.Object) stack9);
        java.lang.Object obj27 = stack9.last();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        int int10 = stack0.size();
        java.lang.Object obj11 = stack0.last();
        stack0.clear();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        boolean boolean25 = stack18.isFull();
        java.lang.Class<?> wildcardClass26 = stack18.getClass();
        stack12.push((java.lang.Object) stack18);
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        stack28.clear();
        stack28.push((java.lang.Object) true);
        boolean boolean33 = stack28.isEmpty();
        stack28.clear();
        boolean boolean35 = stack28.isEmpty();
        jbhembise.testauto.example3.Stack stack36 = new jbhembise.testauto.example3.Stack();
        int int37 = stack36.size();
        java.lang.Class<?> wildcardClass38 = stack36.getClass();
        java.lang.Class<?> wildcardClass39 = stack36.getClass();
        stack36.push((java.lang.Object) 10L);
        boolean boolean42 = stack36.isFull();
        stack28.push((java.lang.Object) stack36);
        java.lang.Object obj44 = stack28.last();
        stack28.clear();
        stack12.push((java.lang.Object) stack28);
        int int47 = stack12.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) "hi!");
        int int4 = stack0.size();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Class<?> wildcardClass7 = stack5.getClass();
        java.lang.Class<?> wildcardClass8 = stack5.getClass();
        stack5.push((java.lang.Object) 10L);
        stack5.pop();
        boolean boolean12 = stack5.isFull();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj14 = stack0.last();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(obj14);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        boolean boolean2 = stack0.isEmpty();
        boolean boolean3 = stack0.isEmpty();
        stack0.clear();
        boolean boolean5 = stack0.isEmpty();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        stack0.clear();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass6 = stack5.getClass();
        int int7 = stack5.size();
        stack5.push((java.lang.Object) (byte) 10);
        int int10 = stack5.size();
        stack5.clear();
        stack0.push((java.lang.Object) stack5);
        int int13 = stack0.size();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        stack0.clear();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        stack14.push((java.lang.Object) (short) 10);
        stack11.push((java.lang.Object) stack14);
        boolean boolean19 = stack11.isEmpty();
        java.lang.Object obj20 = stack11.last();
        int int21 = stack11.size();
        stack0.push((java.lang.Object) stack11);
        stack11.pop();
        java.lang.Class<?> wildcardClass24 = stack11.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        stack5.pop();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        boolean boolean19 = stack5.isEmpty();
        int int20 = stack5.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        java.lang.Class<?> wildcardClass9 = stack3.getClass();
        java.lang.Object obj10 = stack3.last();
        int int11 = stack3.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 10 + "'", obj10.equals((short) 10));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        int int3 = stack0.size();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        boolean boolean5 = stack0.isFull();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        java.lang.Object obj7 = stack0.last();
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isEmpty();
        int int10 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + 10L + "'", obj7.equals(10L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        boolean boolean3 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        boolean boolean5 = stack4.isEmpty();
        boolean boolean6 = stack4.isEmpty();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        boolean boolean8 = stack7.isEmpty();
        stack7.push((java.lang.Object) (short) 10);
        stack4.push((java.lang.Object) stack7);
        stack7.clear();
        stack0.push((java.lang.Object) stack7);
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        boolean boolean16 = stack14.isEmpty();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        boolean boolean18 = stack17.isEmpty();
        stack17.push((java.lang.Object) (short) 10);
        stack14.push((java.lang.Object) stack17);
        boolean boolean22 = stack14.isEmpty();
        java.lang.Class<?> wildcardClass23 = stack14.getClass();
        stack14.clear();
        stack0.push((java.lang.Object) stack14);
        java.lang.Class<?> wildcardClass26 = stack14.getClass();
        int int27 = stack14.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        boolean boolean19 = stack5.isEmpty();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Object obj22 = null;
        stack20.push(obj22);
        stack20.pop();
        int int25 = stack20.size();
        stack20.clear();
        java.lang.Class<?> wildcardClass27 = stack20.getClass();
        stack5.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stack5.last();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        java.lang.Class<?> wildcardClass15 = stack11.getClass();
        stack11.clear();
        java.lang.Class<?> wildcardClass17 = stack11.getClass();
        stack0.push((java.lang.Object) stack11);
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        stack19.clear();
        boolean boolean22 = stack19.isFull();
        stack19.clear();
        boolean boolean24 = stack19.isFull();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Class<?> wildcardClass27 = stack25.getClass();
        java.lang.Class<?> wildcardClass28 = stack25.getClass();
        stack19.push((java.lang.Object) wildcardClass28);
        stack0.push((java.lang.Object) wildcardClass28);
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        int int32 = stack31.size();
        java.lang.Class<?> wildcardClass33 = stack31.getClass();
        java.lang.Class<?> wildcardClass34 = stack31.getClass();
        boolean boolean35 = stack31.isFull();
        jbhembise.testauto.example3.Stack stack36 = new jbhembise.testauto.example3.Stack();
        int int37 = stack36.size();
        java.lang.Object obj38 = null;
        stack36.push(obj38);
        stack36.pop();
        int int41 = stack36.size();
        stack36.clear();
        stack36.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass45 = stack36.getClass();
        stack31.push((java.lang.Object) stack36);
        boolean boolean47 = stack36.isEmpty();
        java.lang.Class<?> wildcardClass48 = stack36.getClass();
        int int49 = stack36.size();
        stack0.push((java.lang.Object) int49);
        jbhembise.testauto.example3.Stack stack51 = new jbhembise.testauto.example3.Stack();
        int int52 = stack51.size();
        java.lang.Object obj53 = null;
        stack51.push(obj53);
        stack51.pop();
        int int56 = stack51.size();
        int int57 = stack51.size();
        jbhembise.testauto.example3.Stack stack58 = new jbhembise.testauto.example3.Stack();
        boolean boolean59 = stack58.isEmpty();
        boolean boolean60 = stack58.isEmpty();
        jbhembise.testauto.example3.Stack stack61 = new jbhembise.testauto.example3.Stack();
        boolean boolean62 = stack61.isEmpty();
        stack61.push((java.lang.Object) (short) 10);
        stack58.push((java.lang.Object) stack61);
        boolean boolean66 = stack58.isEmpty();
        java.lang.Object obj67 = stack58.last();
        boolean boolean68 = stack58.isFull();
        java.lang.Class<?> wildcardClass69 = stack58.getClass();
        stack51.push((java.lang.Object) stack58);
        stack0.push((java.lang.Object) stack58);
        boolean boolean72 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        java.lang.Object obj8 = stack0.last();
        java.lang.Object obj9 = stack0.last();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        boolean boolean19 = stack10.isEmpty();
        boolean boolean20 = stack10.isEmpty();
        java.lang.Object obj21 = stack10.last();
        java.lang.Class<?> wildcardClass22 = stack10.getClass();
        stack0.push((java.lang.Object) stack10);
        boolean boolean24 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass25 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + obj21 + "' != '" + 10 + "'", obj21.equals(10));
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack3.isEmpty();
        boolean boolean9 = stack3.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isFull();
        boolean boolean12 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        stack13.clear();
        boolean boolean16 = stack13.isFull();
        stack13.clear();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) true);
        boolean boolean24 = stack19.isEmpty();
        int int25 = stack19.size();
        int int26 = stack19.size();
        stack13.push((java.lang.Object) stack19);
        stack0.push((java.lang.Object) stack19);
        boolean boolean29 = stack19.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        stack6.push((java.lang.Object) true);
        boolean boolean11 = stack6.isEmpty();
        int int12 = stack6.size();
        int int13 = stack6.size();
        stack0.push((java.lang.Object) stack6);
        java.lang.Class<?> wildcardClass15 = stack6.getClass();
        java.lang.Object obj16 = stack6.last();
        int int17 = stack6.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + true + "'", obj16.equals(true));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        int int5 = stack0.size();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        stack0.pop();
        int int8 = stack0.size();
        stack0.clear();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) true);
        boolean boolean21 = stack16.isEmpty();
        stack16.clear();
        boolean boolean23 = stack16.isEmpty();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Class<?> wildcardClass26 = stack24.getClass();
        java.lang.Class<?> wildcardClass27 = stack24.getClass();
        stack24.push((java.lang.Object) 10L);
        boolean boolean30 = stack24.isFull();
        stack16.push((java.lang.Object) stack24);
        java.lang.Object obj32 = stack16.last();
        stack16.clear();
        java.lang.Class<?> wildcardClass34 = stack16.getClass();
        stack8.push((java.lang.Object) stack16);
        stack8.clear();
        int int37 = stack8.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        stack13.pop();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.clear();
        boolean boolean36 = stack29.isEmpty();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Class<?> wildcardClass39 = stack37.getClass();
        java.lang.Class<?> wildcardClass40 = stack37.getClass();
        stack37.push((java.lang.Object) 10L);
        boolean boolean43 = stack37.isFull();
        stack29.push((java.lang.Object) stack37);
        stack29.push((java.lang.Object) false);
        stack29.clear();
        int int48 = stack29.size();
        stack13.push((java.lang.Object) stack29);
        boolean boolean50 = stack13.isEmpty();
        jbhembise.testauto.example3.Stack stack51 = new jbhembise.testauto.example3.Stack();
        int int52 = stack51.size();
        java.lang.Object obj53 = null;
        stack51.push(obj53);
        stack51.pop();
        int int56 = stack51.size();
        stack51.clear();
        stack51.push((java.lang.Object) 10);
        java.lang.Object obj60 = stack51.last();
        java.lang.Class<?> wildcardClass61 = stack51.getClass();
        boolean boolean62 = stack51.isEmpty();
        boolean boolean63 = stack51.isFull();
        boolean boolean64 = stack51.isEmpty();
        stack13.push((java.lang.Object) boolean64);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + obj60 + "' != '" + 10 + "'", obj60.equals(10));
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        stack5.pop();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        boolean boolean19 = stack18.isEmpty();
        stack18.clear();
        boolean boolean21 = stack18.isFull();
        stack5.push((java.lang.Object) boolean21);
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        stack23.clear();
        boolean boolean26 = stack23.isFull();
        stack23.clear();
        boolean boolean28 = stack23.isEmpty();
        stack5.push((java.lang.Object) stack23);
        stack5.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        int int8 = stack0.size();
        java.lang.Object obj9 = stack0.last();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Class<?> wildcardClass12 = stack10.getClass();
        java.lang.Class<?> wildcardClass13 = stack10.getClass();
        boolean boolean14 = stack10.isFull();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        int int16 = stack15.size();
        java.lang.Object obj17 = null;
        stack15.push(obj17);
        stack15.pop();
        int int20 = stack15.size();
        stack15.clear();
        stack15.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass24 = stack15.getClass();
        stack10.push((java.lang.Object) stack15);
        java.lang.Object obj26 = stack15.last();
        stack15.pop();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        boolean boolean29 = stack28.isEmpty();
        stack28.clear();
        boolean boolean31 = stack28.isFull();
        stack15.push((java.lang.Object) boolean31);
        stack0.push((java.lang.Object) stack15);
        java.lang.Object obj34 = stack15.last();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 0 + "'", obj9.equals(0));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + 10 + "'", obj26.equals(10));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + obj34 + "' != '" + false + "'", obj34.equals(false));
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        java.lang.Class<?> wildcardClass17 = stack5.getClass();
        int int18 = stack5.size();
        stack5.clear();
        boolean boolean20 = stack5.isFull();
        java.lang.Object obj21 = null;
        stack5.push(obj21);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        int int8 = stack0.size();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        int int12 = stack0.size();
        java.lang.Class<?> wildcardClass13 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        int int15 = stack14.size();
        stack14.clear();
        boolean boolean17 = stack14.isFull();
        stack14.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass20 = stack19.getClass();
        int int21 = stack19.size();
        stack14.push((java.lang.Object) int21);
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass24 = stack23.getClass();
        stack14.push((java.lang.Object) wildcardClass24);
        stack0.push((java.lang.Object) stack14);
        java.lang.Class<?> wildcardClass27 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        java.lang.Object obj18 = stack0.last();
        int int19 = stack0.size();
        stack0.pop();
        stack0.clear();
        java.lang.Class<?> wildcardClass22 = stack0.getClass();
        boolean boolean23 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        java.lang.Object obj18 = stack0.last();
        boolean boolean19 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isFull();
        stack0.push((java.lang.Object) stack18);
        java.lang.Object obj25 = stack18.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + obj25 + "' != '" + true + "'", obj25.equals(true));
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass27 = stack18.getClass();
        boolean boolean28 = stack18.isEmpty();
        stack18.clear();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Class<?> wildcardClass32 = stack30.getClass();
        java.lang.Class<?> wildcardClass33 = stack30.getClass();
        java.lang.Class<?> wildcardClass34 = stack30.getClass();
        stack18.push((java.lang.Object) wildcardClass34);
        stack0.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj37 = stack0.last();
        java.lang.Object obj38 = stack0.last();
        int int39 = stack0.size();
        stack0.clear();
        boolean boolean41 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        java.lang.Object obj5 = stack0.last();
        boolean boolean6 = stack0.isFull();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        java.lang.Object obj8 = stack0.last();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + (byte) 10 + "'", obj5.equals((byte) 10));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (byte) 10 + "'", obj8.equals((byte) 10));
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        boolean boolean25 = stack18.isFull();
        java.lang.Class<?> wildcardClass26 = stack18.getClass();
        stack12.push((java.lang.Object) stack18);
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Class<?> wildcardClass30 = stack28.getClass();
        java.lang.Class<?> wildcardClass31 = stack28.getClass();
        boolean boolean32 = stack28.isFull();
        jbhembise.testauto.example3.Stack stack33 = new jbhembise.testauto.example3.Stack();
        int int34 = stack33.size();
        java.lang.Object obj35 = null;
        stack33.push(obj35);
        stack33.pop();
        int int38 = stack33.size();
        stack33.clear();
        stack33.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass42 = stack33.getClass();
        stack28.push((java.lang.Object) stack33);
        boolean boolean44 = stack33.isEmpty();
        int int45 = stack33.size();
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        int int47 = stack46.size();
        java.lang.Object obj48 = null;
        stack46.push(obj48);
        stack46.pop();
        int int51 = stack46.size();
        stack46.clear();
        stack46.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass55 = stack46.getClass();
        boolean boolean56 = stack46.isFull();
        stack46.clear();
        jbhembise.testauto.example3.Stack stack58 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass59 = stack58.getClass();
        int int60 = stack58.size();
        stack58.push((java.lang.Object) (byte) 10);
        stack46.push((java.lang.Object) stack58);
        stack46.clear();
        stack33.push((java.lang.Object) stack46);
        boolean boolean66 = stack33.isFull();
        jbhembise.testauto.example3.Stack stack67 = new jbhembise.testauto.example3.Stack();
        int int68 = stack67.size();
        java.lang.Class<?> wildcardClass69 = stack67.getClass();
        java.lang.Class<?> wildcardClass70 = stack67.getClass();
        boolean boolean71 = stack67.isFull();
        jbhembise.testauto.example3.Stack stack72 = new jbhembise.testauto.example3.Stack();
        int int73 = stack72.size();
        java.lang.Object obj74 = null;
        stack72.push(obj74);
        stack72.pop();
        int int77 = stack72.size();
        stack72.clear();
        stack72.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass81 = stack72.getClass();
        stack67.push((java.lang.Object) stack72);
        java.lang.Object obj83 = stack72.last();
        java.lang.Object obj84 = stack72.last();
        stack33.push((java.lang.Object) stack72);
        stack18.push((java.lang.Object) stack33);
        boolean boolean87 = stack33.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + obj83 + "' != '" + 10 + "'", obj83.equals(10));
        org.junit.Assert.assertTrue("'" + obj84 + "' != '" + 10 + "'", obj84.equals(10));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        boolean boolean5 = stack0.isFull();
        boolean boolean6 = stack0.isFull();
        boolean boolean7 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        boolean boolean9 = stack0.isFull();
        java.lang.Class<?> wildcardClass10 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        boolean boolean25 = stack18.isFull();
        java.lang.Class<?> wildcardClass26 = stack18.getClass();
        stack12.push((java.lang.Object) stack18);
        boolean boolean28 = stack12.isFull();
        java.lang.Object obj29 = stack12.last();
        stack12.pop();
        boolean boolean31 = stack12.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        int int11 = stack0.size();
        int int12 = stack0.size();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        boolean boolean11 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack12.clear();
        stack12.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        java.lang.Object obj21 = null;
        stack19.push(obj21);
        stack19.pop();
        int int24 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass28 = stack19.getClass();
        stack12.push((java.lang.Object) wildcardClass28);
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) true);
        boolean boolean35 = stack30.isEmpty();
        stack30.pop();
        stack12.push((java.lang.Object) stack30);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        java.lang.Class<?> wildcardClass41 = stack39.getClass();
        java.lang.Class<?> wildcardClass42 = stack39.getClass();
        stack39.push((java.lang.Object) 10L);
        boolean boolean45 = stack39.isFull();
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass47 = stack46.getClass();
        int int48 = stack46.size();
        stack39.push((java.lang.Object) int48);
        int int50 = stack39.size();
        java.lang.Class<?> wildcardClass51 = stack39.getClass();
        stack0.push((java.lang.Object) stack39);
        stack0.pop();
        boolean boolean54 = stack0.isEmpty();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Class<?> wildcardClass7 = stack5.getClass();
        java.lang.Class<?> wildcardClass8 = stack5.getClass();
        stack5.push((java.lang.Object) 10L);
        stack5.pop();
        boolean boolean12 = stack5.isEmpty();
        java.lang.Class<?> wildcardClass13 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        stack13.pop();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.clear();
        boolean boolean36 = stack29.isEmpty();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Class<?> wildcardClass39 = stack37.getClass();
        java.lang.Class<?> wildcardClass40 = stack37.getClass();
        stack37.push((java.lang.Object) 10L);
        boolean boolean43 = stack37.isFull();
        stack29.push((java.lang.Object) stack37);
        stack29.push((java.lang.Object) false);
        stack29.clear();
        int int48 = stack29.size();
        stack13.push((java.lang.Object) stack29);
        java.lang.Class<?> wildcardClass50 = stack13.getClass();
        java.lang.Object obj51 = stack13.last();
        java.lang.Class<?> wildcardClass52 = stack13.getClass();
        int int53 = stack13.size();
        boolean boolean54 = stack13.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        stack6.push((java.lang.Object) true);
        boolean boolean11 = stack6.isEmpty();
        int int12 = stack6.size();
        int int13 = stack6.size();
        stack0.push((java.lang.Object) stack6);
        java.lang.Class<?> wildcardClass15 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) true);
        boolean boolean21 = stack16.isEmpty();
        boolean boolean22 = stack16.isFull();
        stack0.push((java.lang.Object) stack16);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        java.lang.Object obj18 = stack0.last();
        stack0.pop();
        boolean boolean20 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        boolean boolean25 = stack18.isFull();
        java.lang.Class<?> wildcardClass26 = stack18.getClass();
        stack12.push((java.lang.Object) stack18);
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        stack28.clear();
        stack28.push((java.lang.Object) true);
        boolean boolean33 = stack28.isEmpty();
        stack28.clear();
        boolean boolean35 = stack28.isEmpty();
        jbhembise.testauto.example3.Stack stack36 = new jbhembise.testauto.example3.Stack();
        int int37 = stack36.size();
        java.lang.Class<?> wildcardClass38 = stack36.getClass();
        java.lang.Class<?> wildcardClass39 = stack36.getClass();
        stack36.push((java.lang.Object) 10L);
        boolean boolean42 = stack36.isFull();
        stack28.push((java.lang.Object) stack36);
        java.lang.Object obj44 = stack28.last();
        stack28.clear();
        stack12.push((java.lang.Object) stack28);
        int int47 = stack28.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        int int9 = stack3.size();
        java.lang.Class<?> wildcardClass10 = stack3.getClass();
        boolean boolean11 = stack3.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        stack13.clear();
        stack13.push((java.lang.Object) true);
        boolean boolean18 = stack13.isEmpty();
        stack13.clear();
        boolean boolean20 = stack13.isEmpty();
        java.lang.Class<?> wildcardClass21 = stack13.getClass();
        boolean boolean22 = stack13.isFull();
        stack0.push((java.lang.Object) boolean22);
        java.lang.Class<?> wildcardClass24 = stack0.getClass();
        boolean boolean25 = stack0.isFull();
        java.lang.Object obj26 = stack0.last();
        java.lang.Class<?> wildcardClass27 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + false + "'", obj26.equals(false));
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        java.lang.Class<?> wildcardClass11 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Class<?> wildcardClass9 = stack7.getClass();
        java.lang.Class<?> wildcardClass10 = stack7.getClass();
        stack7.clear();
        boolean boolean12 = stack7.isEmpty();
        stack0.push((java.lang.Object) stack7);
        java.lang.Object obj14 = stack0.last();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(obj14);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        stack0.pop();
        boolean boolean7 = stack0.isEmpty();
        stack0.clear();
        int int9 = stack0.size();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass19 = stack10.getClass();
        boolean boolean20 = stack10.isFull();
        stack10.clear();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass23 = stack22.getClass();
        int int24 = stack22.size();
        stack22.push((java.lang.Object) (byte) 10);
        stack10.push((java.lang.Object) stack22);
        stack10.clear();
        boolean boolean29 = stack10.isEmpty();
        stack0.push((java.lang.Object) boolean29);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        boolean boolean25 = stack18.isFull();
        java.lang.Class<?> wildcardClass26 = stack18.getClass();
        stack12.push((java.lang.Object) stack18);
        boolean boolean28 = stack18.isEmpty();
        stack18.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        boolean boolean4 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Class<?> wildcardClass7 = stack5.getClass();
        java.lang.Class<?> wildcardClass8 = stack5.getClass();
        boolean boolean9 = stack5.isFull();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass19 = stack10.getClass();
        stack5.push((java.lang.Object) stack10);
        stack10.pop();
        int int22 = stack10.size();
        boolean boolean23 = stack10.isEmpty();
        stack0.push((java.lang.Object) boolean23);
        stack0.pop();
        jbhembise.testauto.example3.Stack stack26 = new jbhembise.testauto.example3.Stack();
        int int27 = stack26.size();
        java.lang.Object obj28 = null;
        stack26.push(obj28);
        stack26.pop();
        int int31 = stack26.size();
        stack26.clear();
        java.lang.Class<?> wildcardClass33 = stack26.getClass();
        stack0.push((java.lang.Object) stack26);
        int int35 = stack26.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass27 = stack18.getClass();
        boolean boolean28 = stack18.isFull();
        stack18.clear();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass31 = stack30.getClass();
        int int32 = stack30.size();
        stack30.push((java.lang.Object) (byte) 10);
        stack18.push((java.lang.Object) stack30);
        stack18.clear();
        stack5.push((java.lang.Object) stack18);
        boolean boolean38 = stack5.isEmpty();
        java.lang.Object obj39 = null;
        stack5.push(obj39);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        boolean boolean25 = stack18.isFull();
        java.lang.Class<?> wildcardClass26 = stack18.getClass();
        stack12.push((java.lang.Object) stack18);
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        stack28.clear();
        stack28.push((java.lang.Object) true);
        boolean boolean33 = stack28.isEmpty();
        stack28.clear();
        boolean boolean35 = stack28.isEmpty();
        jbhembise.testauto.example3.Stack stack36 = new jbhembise.testauto.example3.Stack();
        int int37 = stack36.size();
        java.lang.Class<?> wildcardClass38 = stack36.getClass();
        java.lang.Class<?> wildcardClass39 = stack36.getClass();
        stack36.push((java.lang.Object) 10L);
        boolean boolean42 = stack36.isFull();
        stack28.push((java.lang.Object) stack36);
        java.lang.Object obj44 = stack28.last();
        stack28.clear();
        stack12.push((java.lang.Object) stack28);
        jbhembise.testauto.example3.Stack stack47 = new jbhembise.testauto.example3.Stack();
        int int48 = stack47.size();
        java.lang.Object obj49 = null;
        stack47.push(obj49);
        stack47.pop();
        int int52 = stack47.size();
        stack47.clear();
        stack47.push((java.lang.Object) 10);
        java.lang.Object obj56 = stack47.last();
        java.lang.Object obj57 = stack47.last();
        jbhembise.testauto.example3.Stack stack58 = new jbhembise.testauto.example3.Stack();
        int int59 = stack58.size();
        java.lang.Object obj60 = null;
        stack58.push(obj60);
        stack58.pop();
        int int63 = stack58.size();
        stack58.clear();
        stack58.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass67 = stack58.getClass();
        boolean boolean68 = stack58.isFull();
        stack58.clear();
        jbhembise.testauto.example3.Stack stack70 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass71 = stack70.getClass();
        int int72 = stack70.size();
        stack70.push((java.lang.Object) (byte) 10);
        stack58.push((java.lang.Object) stack70);
        jbhembise.testauto.example3.Stack stack76 = new jbhembise.testauto.example3.Stack();
        int int77 = stack76.size();
        java.lang.Object obj78 = null;
        stack76.push(obj78);
        stack76.pop();
        int int81 = stack76.size();
        stack76.clear();
        boolean boolean83 = stack76.isFull();
        java.lang.Class<?> wildcardClass84 = stack76.getClass();
        stack70.push((java.lang.Object) stack76);
        boolean boolean86 = stack70.isFull();
        java.lang.Object obj87 = stack70.last();
        stack47.push(obj87);
        stack28.push(obj87);
        stack28.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + obj56 + "' != '" + 10 + "'", obj56.equals(10));
        org.junit.Assert.assertTrue("'" + obj57 + "' != '" + 10 + "'", obj57.equals(10));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        stack12.push((java.lang.Object) 10L);
        boolean boolean18 = stack12.isFull();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass20 = stack19.getClass();
        int int21 = stack19.size();
        stack12.push((java.lang.Object) int21);
        boolean boolean23 = stack12.isFull();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Class<?> wildcardClass26 = stack24.getClass();
        java.lang.Class<?> wildcardClass27 = stack24.getClass();
        java.lang.Class<?> wildcardClass28 = stack24.getClass();
        stack24.clear();
        stack24.clear();
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        int int32 = stack31.size();
        java.lang.Object obj33 = null;
        stack31.push(obj33);
        stack31.pop();
        int int36 = stack31.size();
        stack31.clear();
        stack31.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass40 = stack31.getClass();
        stack24.push((java.lang.Object) wildcardClass40);
        jbhembise.testauto.example3.Stack stack42 = new jbhembise.testauto.example3.Stack();
        int int43 = stack42.size();
        stack42.clear();
        stack42.push((java.lang.Object) true);
        boolean boolean47 = stack42.isEmpty();
        stack42.pop();
        stack24.push((java.lang.Object) stack42);
        stack12.push((java.lang.Object) stack24);
        stack0.push((java.lang.Object) stack12);
        java.lang.Object obj52 = stack0.last();
        int int53 = stack0.size();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        boolean boolean5 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass7 = stack6.getClass();
        boolean boolean8 = stack6.isEmpty();
        stack6.clear();
        java.lang.Class<?> wildcardClass10 = stack6.getClass();
        int int11 = stack6.size();
        boolean boolean12 = stack6.isEmpty();
        stack0.push((java.lang.Object) boolean12);
        java.lang.Class<?> wildcardClass14 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        java.lang.Class<?> wildcardClass17 = stack5.getClass();
        java.lang.Class<?> wildcardClass18 = stack5.getClass();
        stack5.pop();
        boolean boolean20 = stack5.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) true);
        boolean boolean21 = stack16.isEmpty();
        stack16.clear();
        boolean boolean23 = stack16.isEmpty();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        java.lang.Class<?> wildcardClass26 = stack24.getClass();
        java.lang.Class<?> wildcardClass27 = stack24.getClass();
        stack24.push((java.lang.Object) 10L);
        boolean boolean30 = stack24.isFull();
        stack16.push((java.lang.Object) stack24);
        java.lang.Object obj32 = stack16.last();
        stack16.clear();
        java.lang.Class<?> wildcardClass34 = stack16.getClass();
        stack8.push((java.lang.Object) stack16);
        int int36 = stack16.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        boolean boolean6 = stack4.isEmpty();
        stack4.clear();
        java.lang.Class<?> wildcardClass8 = stack4.getClass();
        int int9 = stack4.size();
        stack0.push((java.lang.Object) int9);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isFull();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) true);
        boolean boolean14 = stack9.isEmpty();
        boolean boolean15 = stack9.isFull();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) int16);
        java.lang.Class<?> wildcardClass18 = stack0.getClass();
        boolean boolean19 = stack0.isEmpty();
        stack0.pop();
        java.lang.Class<?> wildcardClass21 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Object obj5 = null;
        stack3.push(obj5);
        stack3.pop();
        int int8 = stack3.size();
        stack3.clear();
        stack3.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass12 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        stack3.clear();
        boolean boolean15 = stack3.isEmpty();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        int int25 = stack16.size();
        boolean boolean26 = stack16.isEmpty();
        stack16.clear();
        stack3.push((java.lang.Object) stack16);
        boolean boolean29 = stack3.isEmpty();
        int int30 = stack3.size();
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        boolean boolean32 = stack31.isEmpty();
        stack31.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack35 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass36 = stack35.getClass();
        int int37 = stack35.size();
        stack31.push((java.lang.Object) int37);
        stack31.clear();
        java.lang.Class<?> wildcardClass40 = stack31.getClass();
        stack31.clear();
        jbhembise.testauto.example3.Stack stack42 = new jbhembise.testauto.example3.Stack();
        boolean boolean43 = stack42.isEmpty();
        boolean boolean44 = stack42.isEmpty();
        jbhembise.testauto.example3.Stack stack45 = new jbhembise.testauto.example3.Stack();
        boolean boolean46 = stack45.isEmpty();
        stack45.push((java.lang.Object) (short) 10);
        stack42.push((java.lang.Object) stack45);
        boolean boolean50 = stack42.isEmpty();
        java.lang.Object obj51 = stack42.last();
        int int52 = stack42.size();
        stack31.push((java.lang.Object) stack42);
        stack3.push((java.lang.Object) stack42);
        stack42.pop();
        boolean boolean56 = stack42.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isFull();
        int int6 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Object obj5 = null;
        stack3.push(obj5);
        stack3.pop();
        int int8 = stack3.size();
        int int9 = stack3.size();
        stack0.push((java.lang.Object) int9);
        boolean boolean11 = stack0.isEmpty();
        java.lang.Object obj12 = stack0.last();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + 0 + "'", obj12.equals(0));
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        boolean boolean11 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack12.clear();
        stack12.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        java.lang.Object obj21 = null;
        stack19.push(obj21);
        stack19.pop();
        int int24 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass28 = stack19.getClass();
        stack12.push((java.lang.Object) wildcardClass28);
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) true);
        boolean boolean35 = stack30.isEmpty();
        stack30.pop();
        stack12.push((java.lang.Object) stack30);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        java.lang.Class<?> wildcardClass41 = stack39.getClass();
        java.lang.Class<?> wildcardClass42 = stack39.getClass();
        boolean boolean43 = stack39.isFull();
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        int int45 = stack44.size();
        java.lang.Object obj46 = null;
        stack44.push(obj46);
        stack44.pop();
        int int49 = stack44.size();
        stack44.clear();
        stack44.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass53 = stack44.getClass();
        stack39.push((java.lang.Object) stack44);
        jbhembise.testauto.example3.Stack stack55 = new jbhembise.testauto.example3.Stack();
        int int56 = stack55.size();
        java.lang.Object obj57 = null;
        stack55.push(obj57);
        java.lang.Class<?> wildcardClass59 = stack55.getClass();
        stack44.push((java.lang.Object) wildcardClass59);
        stack0.push((java.lang.Object) stack44);
        jbhembise.testauto.example3.Stack stack62 = new jbhembise.testauto.example3.Stack();
        int int63 = stack62.size();
        stack62.clear();
        boolean boolean65 = stack62.isFull();
        stack62.clear();
        jbhembise.testauto.example3.Stack stack67 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass68 = stack67.getClass();
        int int69 = stack67.size();
        stack62.push((java.lang.Object) int69);
        stack62.clear();
        jbhembise.testauto.example3.Stack stack72 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass73 = stack72.getClass();
        int int74 = stack72.size();
        stack62.push((java.lang.Object) stack72);
        stack0.push((java.lang.Object) stack72);
        int int77 = stack0.size();
        java.lang.Object obj78 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 5 + "'", int77 == 5);
        org.junit.Assert.assertNotNull(obj78);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        stack5.pop();
        stack5.clear();
        stack5.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        java.lang.Object obj6 = stack0.last();
        java.lang.Object obj7 = stack0.last();
        java.lang.Object obj8 = stack0.last();
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + true + "'", obj6.equals(true));
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + true + "'", obj7.equals(true));
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + true + "'", obj8.equals(true));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        java.lang.Object obj8 = stack3.last();
        stack3.clear();
        java.lang.Object obj10 = null;
        stack3.push(obj10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + (short) 10 + "'", obj8.equals((short) 10));
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        int int10 = stack0.size();
        java.lang.Object obj11 = stack0.last();
        stack0.clear();
        java.lang.Class<?> wildcardClass13 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        stack0.clear();
        stack0.clear();
        boolean boolean19 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        boolean boolean14 = stack11.isEmpty();
        stack0.push((java.lang.Object) boolean14);
        java.lang.Object obj16 = stack0.last();
        boolean boolean17 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + true + "'", obj16.equals(true));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        boolean boolean5 = stack0.isFull();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        java.lang.Class<?> wildcardClass12 = stack8.getClass();
        boolean boolean13 = stack8.isEmpty();
        java.lang.Class<?> wildcardClass14 = stack8.getClass();
        stack0.push((java.lang.Object) stack8);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        stack16.clear();
        stack8.push((java.lang.Object) stack16);
        stack8.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        java.lang.Class<?> wildcardClass19 = stack9.getClass();
        java.lang.Object obj20 = null;
        stack9.push(obj20);
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass23 = stack22.getClass();
        int int24 = stack22.size();
        stack22.push((java.lang.Object) (byte) 10);
        boolean boolean27 = stack22.isEmpty();
        stack9.push((java.lang.Object) boolean27);
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        java.lang.Class<?> wildcardClass31 = stack29.getClass();
        java.lang.Class<?> wildcardClass32 = stack29.getClass();
        boolean boolean33 = stack29.isFull();
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        int int35 = stack34.size();
        java.lang.Object obj36 = null;
        stack34.push(obj36);
        stack34.pop();
        int int39 = stack34.size();
        stack34.clear();
        stack34.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass43 = stack34.getClass();
        stack29.push((java.lang.Object) stack34);
        java.lang.Object obj45 = stack34.last();
        java.lang.Class<?> wildcardClass46 = stack34.getClass();
        stack9.push((java.lang.Object) stack34);
        boolean boolean48 = stack34.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + obj45 + "' != '" + 10 + "'", obj45.equals(10));
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        boolean boolean5 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        java.lang.Class<?> wildcardClass8 = stack6.getClass();
        java.lang.Class<?> wildcardClass9 = stack6.getClass();
        stack0.push((java.lang.Object) wildcardClass9);
        boolean boolean11 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        boolean boolean16 = stack12.isFull();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        int int18 = stack17.size();
        java.lang.Object obj19 = null;
        stack17.push(obj19);
        stack17.pop();
        int int22 = stack17.size();
        stack17.clear();
        stack17.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass26 = stack17.getClass();
        stack12.push((java.lang.Object) stack17);
        java.lang.Object obj28 = stack17.last();
        stack17.pop();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) true);
        boolean boolean35 = stack30.isEmpty();
        stack30.clear();
        boolean boolean37 = stack30.isEmpty();
        stack17.push((java.lang.Object) boolean37);
        stack17.pop();
        boolean boolean40 = stack17.isEmpty();
        stack0.push((java.lang.Object) stack17);
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + obj28 + "' != '" + 10 + "'", obj28.equals(10));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        boolean boolean4 = stack0.isEmpty();
        boolean boolean5 = stack0.isEmpty();
        boolean boolean6 = stack0.isFull();
        boolean boolean7 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isFull();
        boolean boolean12 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        stack13.clear();
        boolean boolean16 = stack13.isFull();
        stack13.clear();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) true);
        boolean boolean24 = stack19.isEmpty();
        int int25 = stack19.size();
        int int26 = stack19.size();
        stack13.push((java.lang.Object) stack19);
        stack0.push((java.lang.Object) stack19);
        boolean boolean29 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) 10);
        java.lang.Object obj39 = stack30.last();
        boolean boolean40 = stack30.isFull();
        stack30.pop();
        boolean boolean42 = stack30.isFull();
        boolean boolean43 = stack30.isEmpty();
        boolean boolean44 = stack30.isEmpty();
        stack0.push((java.lang.Object) stack30);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + obj39 + "' != '" + 10 + "'", obj39.equals(10));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isFull();
        stack0.push((java.lang.Object) stack18);
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        stack0.push((java.lang.Object) (byte) 100);
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass10 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass4 = stack3.getClass();
        int int5 = stack3.size();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        boolean boolean12 = stack8.isFull();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        java.lang.Object obj15 = null;
        stack13.push(obj15);
        stack13.pop();
        int int18 = stack13.size();
        stack13.clear();
        stack13.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass22 = stack13.getClass();
        stack8.push((java.lang.Object) stack13);
        stack13.pop();
        int int25 = stack13.size();
        boolean boolean26 = stack13.isEmpty();
        boolean boolean27 = stack13.isFull();
        java.lang.Class<?> wildcardClass28 = stack13.getClass();
        stack3.push((java.lang.Object) wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        int int2 = stack0.size();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        boolean boolean11 = stack0.isFull();
        java.lang.Class<?> wildcardClass12 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        boolean boolean11 = stack0.isFull();
        java.lang.Object obj12 = stack0.last();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + obj12 + "' != '" + 0 + "'", obj12.equals(0));
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        int int9 = stack0.size();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        boolean boolean15 = stack11.isFull();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack11.push((java.lang.Object) stack16);
        java.lang.Class<?> wildcardClass27 = stack11.getClass();
        boolean boolean28 = stack11.isFull();
        stack0.push((java.lang.Object) boolean28);
        int int30 = stack0.size();
        int int31 = stack0.size();
        java.lang.Class<?> wildcardClass32 = stack0.getClass();
        int int33 = stack0.size();
        boolean boolean34 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        java.lang.Class<?> wildcardClass20 = stack16.getClass();
        stack5.push((java.lang.Object) wildcardClass20);
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        boolean boolean23 = stack22.isEmpty();
        stack22.push((java.lang.Object) "hi!");
        int int26 = stack22.size();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        int int28 = stack27.size();
        java.lang.Class<?> wildcardClass29 = stack27.getClass();
        java.lang.Class<?> wildcardClass30 = stack27.getClass();
        stack27.push((java.lang.Object) 10L);
        stack27.pop();
        boolean boolean34 = stack27.isFull();
        stack22.push((java.lang.Object) stack27);
        java.lang.Class<?> wildcardClass36 = stack22.getClass();
        stack5.push((java.lang.Object) wildcardClass36);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        stack5.pop();
        java.lang.Class<?> wildcardClass18 = stack5.getClass();
        boolean boolean19 = stack5.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        boolean boolean13 = stack0.isFull();
        int int14 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        boolean boolean26 = stack18.isFull();
        jbhembise.testauto.example3.Stack stack27 = new jbhembise.testauto.example3.Stack();
        boolean boolean28 = stack27.isEmpty();
        boolean boolean29 = stack27.isEmpty();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        int int36 = stack30.size();
        stack27.push((java.lang.Object) int36);
        stack18.push((java.lang.Object) stack27);
        stack18.pop();
        jbhembise.testauto.example3.Stack stack40 = new jbhembise.testauto.example3.Stack();
        int int41 = stack40.size();
        java.lang.Object obj42 = null;
        stack40.push(obj42);
        stack40.pop();
        int int45 = stack40.size();
        stack40.clear();
        stack40.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass49 = stack40.getClass();
        boolean boolean50 = stack40.isEmpty();
        jbhembise.testauto.example3.Stack stack51 = new jbhembise.testauto.example3.Stack();
        boolean boolean52 = stack51.isEmpty();
        boolean boolean53 = stack51.isEmpty();
        boolean boolean54 = stack51.isEmpty();
        stack40.push((java.lang.Object) boolean54);
        boolean boolean56 = stack40.isEmpty();
        java.lang.Class<?> wildcardClass57 = stack40.getClass();
        stack18.push((java.lang.Object) wildcardClass57);
        boolean boolean59 = stack18.isEmpty();
        int int60 = stack18.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        java.lang.Object obj10 = stack0.last();
        stack0.clear();
        boolean boolean12 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + 10 + "'", obj10.equals(10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        int int8 = stack0.size();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        boolean boolean10 = stack9.isEmpty();
        boolean boolean11 = stack9.isEmpty();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        boolean boolean13 = stack12.isEmpty();
        stack12.push((java.lang.Object) (short) 10);
        stack9.push((java.lang.Object) stack12);
        int int17 = stack12.size();
        java.lang.Class<?> wildcardClass18 = stack12.getClass();
        boolean boolean19 = stack12.isEmpty();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        stack20.clear();
        stack20.push((java.lang.Object) true);
        boolean boolean25 = stack20.isEmpty();
        int int26 = stack20.size();
        java.lang.Class<?> wildcardClass27 = stack20.getClass();
        boolean boolean28 = stack20.isEmpty();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        java.lang.Class<?> wildcardClass31 = stack29.getClass();
        java.lang.Class<?> wildcardClass32 = stack29.getClass();
        stack29.push((java.lang.Object) 10L);
        stack29.pop();
        int int36 = stack29.size();
        stack20.push((java.lang.Object) stack29);
        java.lang.Class<?> wildcardClass38 = stack29.getClass();
        java.lang.Class<?> wildcardClass39 = stack29.getClass();
        stack12.push((java.lang.Object) wildcardClass39);
        stack0.push((java.lang.Object) wildcardClass39);
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Class<?> wildcardClass9 = stack7.getClass();
        java.lang.Class<?> wildcardClass10 = stack7.getClass();
        stack7.clear();
        boolean boolean12 = stack7.isEmpty();
        stack0.push((java.lang.Object) stack7);
        java.lang.Class<?> wildcardClass14 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        stack0.clear();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        stack14.push((java.lang.Object) (short) 10);
        stack11.push((java.lang.Object) stack14);
        boolean boolean19 = stack11.isEmpty();
        java.lang.Object obj20 = stack11.last();
        int int21 = stack11.size();
        stack0.push((java.lang.Object) stack11);
        int int23 = stack0.size();
        java.lang.Object obj24 = stack0.last();
        boolean boolean25 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        java.lang.Class<?> wildcardClass18 = stack12.getClass();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        boolean boolean20 = stack19.isEmpty();
        stack19.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass24 = stack23.getClass();
        int int25 = stack23.size();
        stack19.push((java.lang.Object) int25);
        int int27 = stack19.size();
        boolean boolean28 = stack19.isFull();
        stack12.push((java.lang.Object) boolean28);
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass39 = stack30.getClass();
        boolean boolean40 = stack30.isEmpty();
        stack30.clear();
        jbhembise.testauto.example3.Stack stack42 = new jbhembise.testauto.example3.Stack();
        int int43 = stack42.size();
        java.lang.Class<?> wildcardClass44 = stack42.getClass();
        java.lang.Class<?> wildcardClass45 = stack42.getClass();
        java.lang.Class<?> wildcardClass46 = stack42.getClass();
        stack30.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stack30.last();
        stack30.clear();
        stack12.push((java.lang.Object) stack30);
        jbhembise.testauto.example3.Stack stack51 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass52 = stack51.getClass();
        int int53 = stack51.size();
        stack51.push((java.lang.Object) (byte) 10);
        int int56 = stack51.size();
        java.lang.Class<?> wildcardClass57 = stack51.getClass();
        stack51.pop();
        jbhembise.testauto.example3.Stack stack59 = new jbhembise.testauto.example3.Stack();
        int int60 = stack59.size();
        java.lang.Class<?> wildcardClass61 = stack59.getClass();
        java.lang.Class<?> wildcardClass62 = stack59.getClass();
        boolean boolean63 = stack59.isFull();
        boolean boolean64 = stack59.isFull();
        stack51.push((java.lang.Object) stack59);
        stack30.push((java.lang.Object) stack51);
        java.lang.Object obj67 = stack30.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(obj67);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Object obj5 = null;
        stack3.push(obj5);
        stack3.pop();
        int int8 = stack3.size();
        stack3.clear();
        stack3.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass12 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        stack3.clear();
        boolean boolean15 = stack3.isEmpty();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        int int25 = stack16.size();
        boolean boolean26 = stack16.isEmpty();
        stack16.clear();
        stack3.push((java.lang.Object) stack16);
        boolean boolean29 = stack16.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        stack5.pop();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        boolean boolean19 = stack18.isEmpty();
        stack18.clear();
        boolean boolean21 = stack18.isFull();
        stack5.push((java.lang.Object) boolean21);
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        stack23.clear();
        boolean boolean26 = stack23.isFull();
        stack23.clear();
        boolean boolean28 = stack23.isEmpty();
        stack5.push((java.lang.Object) stack23);
        boolean boolean30 = stack5.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        java.lang.Object obj6 = stack0.last();
        java.lang.Object obj7 = stack0.last();
        java.lang.Object obj8 = stack0.last();
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + obj6 + "' != '" + true + "'", obj6.equals(true));
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + true + "'", obj7.equals(true));
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + true + "'", obj8.equals(true));
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        java.lang.Object obj5 = stack0.last();
        jbhembise.testauto.example3.Stack stack6 = new jbhembise.testauto.example3.Stack();
        int int7 = stack6.size();
        stack6.clear();
        boolean boolean9 = stack6.isFull();
        stack6.clear();
        stack6.clear();
        stack0.push((java.lang.Object) stack6);
        boolean boolean13 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + true + "'", obj5.equals(true));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        boolean boolean5 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        boolean boolean25 = stack18.isFull();
        java.lang.Class<?> wildcardClass26 = stack18.getClass();
        stack12.push((java.lang.Object) stack18);
        boolean boolean28 = stack12.isFull();
        java.lang.Object obj29 = stack12.last();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) true);
        boolean boolean35 = stack30.isEmpty();
        int int36 = stack30.size();
        int int37 = stack30.size();
        java.lang.Class<?> wildcardClass38 = stack30.getClass();
        stack12.push((java.lang.Object) wildcardClass38);
        stack12.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        boolean boolean11 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack12.clear();
        stack12.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        java.lang.Object obj21 = null;
        stack19.push(obj21);
        stack19.pop();
        int int24 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass28 = stack19.getClass();
        stack12.push((java.lang.Object) wildcardClass28);
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) true);
        boolean boolean35 = stack30.isEmpty();
        stack30.pop();
        stack12.push((java.lang.Object) stack30);
        stack0.push((java.lang.Object) stack12);
        boolean boolean39 = stack12.isEmpty();
        boolean boolean40 = stack12.isFull();
        boolean boolean41 = stack12.isEmpty();
        boolean boolean42 = stack12.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        int int6 = stack0.size();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        boolean boolean12 = stack8.isFull();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        java.lang.Object obj15 = null;
        stack13.push(obj15);
        stack13.pop();
        int int18 = stack13.size();
        stack13.clear();
        stack13.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass22 = stack13.getClass();
        stack8.push((java.lang.Object) stack13);
        boolean boolean24 = stack13.isEmpty();
        int int25 = stack13.size();
        boolean boolean26 = stack13.isEmpty();
        boolean boolean27 = stack13.isEmpty();
        int int28 = stack13.size();
        int int29 = stack13.size();
        stack0.push((java.lang.Object) stack13);
        java.lang.Class<?> wildcardClass31 = stack13.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        int int10 = stack0.size();
        java.lang.Object obj11 = stack0.last();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        java.lang.Class<?> wildcardClass15 = stack13.getClass();
        java.lang.Class<?> wildcardClass16 = stack13.getClass();
        boolean boolean17 = stack13.isFull();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass27 = stack18.getClass();
        stack13.push((java.lang.Object) stack18);
        boolean boolean29 = stack18.isEmpty();
        int int30 = stack18.size();
        boolean boolean31 = stack18.isEmpty();
        java.lang.Object obj32 = null;
        stack18.push(obj32);
        java.lang.Class<?> wildcardClass34 = stack18.getClass();
        stack0.push((java.lang.Object) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        stack0.clear();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        stack14.push((java.lang.Object) (short) 10);
        stack11.push((java.lang.Object) stack14);
        boolean boolean19 = stack11.isEmpty();
        java.lang.Object obj20 = stack11.last();
        int int21 = stack11.size();
        stack0.push((java.lang.Object) stack11);
        boolean boolean23 = stack11.isEmpty();
        java.lang.Class<?> wildcardClass24 = stack11.getClass();
        boolean boolean25 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack26 = new jbhembise.testauto.example3.Stack();
        int int27 = stack26.size();
        java.lang.Class<?> wildcardClass28 = stack26.getClass();
        java.lang.Class<?> wildcardClass29 = stack26.getClass();
        boolean boolean30 = stack26.isFull();
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        int int32 = stack31.size();
        java.lang.Object obj33 = null;
        stack31.push(obj33);
        stack31.pop();
        int int36 = stack31.size();
        stack31.clear();
        stack31.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass40 = stack31.getClass();
        stack26.push((java.lang.Object) stack31);
        java.lang.Class<?> wildcardClass42 = stack26.getClass();
        stack11.push((java.lang.Object) wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        java.lang.Object obj18 = stack0.last();
        stack0.pop();
        stack0.clear();
        boolean boolean21 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        java.lang.Class<?> wildcardClass28 = stack13.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        int int17 = stack0.size();
        boolean boolean18 = stack0.isEmpty();
        boolean boolean19 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Object obj22 = null;
        stack20.push(obj22);
        stack20.pop();
        int int25 = stack20.size();
        stack20.clear();
        stack20.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass29 = stack20.getClass();
        boolean boolean30 = stack20.isEmpty();
        stack20.clear();
        jbhembise.testauto.example3.Stack stack32 = new jbhembise.testauto.example3.Stack();
        int int33 = stack32.size();
        java.lang.Class<?> wildcardClass34 = stack32.getClass();
        java.lang.Class<?> wildcardClass35 = stack32.getClass();
        java.lang.Class<?> wildcardClass36 = stack32.getClass();
        stack20.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stack20.last();
        int int39 = stack20.size();
        stack20.pop();
        boolean boolean41 = stack20.isFull();
        stack0.push((java.lang.Object) boolean41);
        jbhembise.testauto.example3.Stack stack43 = new jbhembise.testauto.example3.Stack();
        int int44 = stack43.size();
        stack43.clear();
        stack43.push((java.lang.Object) true);
        boolean boolean48 = stack43.isEmpty();
        stack43.pop();
        boolean boolean50 = stack43.isEmpty();
        stack0.push((java.lang.Object) boolean50);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        stack0.pop();
        int int7 = stack0.size();
        int int8 = stack0.size();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        boolean boolean15 = stack11.isFull();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack11.push((java.lang.Object) stack16);
        boolean boolean27 = stack11.isFull();
        stack11.clear();
        java.lang.Class<?> wildcardClass29 = stack11.getClass();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        boolean boolean32 = stack30.isEmpty();
        int int33 = stack30.size();
        stack11.push((java.lang.Object) int33);
        int int35 = stack11.size();
        stack0.push((java.lang.Object) stack11);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        int int9 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        boolean boolean9 = stack0.isFull();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        stack0.push((java.lang.Object) 0);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        int int10 = stack0.size();
        java.lang.Object obj11 = stack0.last();
        stack0.clear();
        boolean boolean13 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        stack13.pop();
        jbhembise.testauto.example3.Stack stack29 = new jbhembise.testauto.example3.Stack();
        int int30 = stack29.size();
        stack29.clear();
        stack29.push((java.lang.Object) true);
        boolean boolean34 = stack29.isEmpty();
        stack29.clear();
        boolean boolean36 = stack29.isEmpty();
        jbhembise.testauto.example3.Stack stack37 = new jbhembise.testauto.example3.Stack();
        int int38 = stack37.size();
        java.lang.Class<?> wildcardClass39 = stack37.getClass();
        java.lang.Class<?> wildcardClass40 = stack37.getClass();
        stack37.push((java.lang.Object) 10L);
        boolean boolean43 = stack37.isFull();
        stack29.push((java.lang.Object) stack37);
        stack29.push((java.lang.Object) false);
        stack29.clear();
        int int48 = stack29.size();
        stack13.push((java.lang.Object) stack29);
        java.lang.Class<?> wildcardClass50 = stack13.getClass();
        boolean boolean51 = stack13.isFull();
        java.lang.Class<?> wildcardClass52 = stack13.getClass();
        int int53 = stack13.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        java.lang.Class<?> wildcardClass18 = stack9.getClass();
        java.lang.Class<?> wildcardClass19 = stack9.getClass();
        java.lang.Object obj20 = null;
        stack9.push(obj20);
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass23 = stack22.getClass();
        int int24 = stack22.size();
        stack22.push((java.lang.Object) (byte) 10);
        boolean boolean27 = stack22.isEmpty();
        stack9.push((java.lang.Object) boolean27);
        boolean boolean29 = stack9.isEmpty();
        boolean boolean30 = stack9.isFull();
        java.lang.Class<?> wildcardClass31 = stack9.getClass();
        java.lang.Class<?> wildcardClass32 = stack9.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        boolean boolean2 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        int int5 = stack0.size();
        boolean boolean6 = stack0.isEmpty();
        stack0.clear();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        int int9 = stack0.size();
        boolean boolean10 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        boolean boolean15 = stack11.isFull();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack11.push((java.lang.Object) stack16);
        java.lang.Class<?> wildcardClass27 = stack11.getClass();
        boolean boolean28 = stack11.isFull();
        stack0.push((java.lang.Object) boolean28);
        java.lang.Object obj30 = stack0.last();
        boolean boolean31 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + obj30 + "' != '" + false + "'", obj30.equals(false));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        int int11 = stack0.size();
        stack0.clear();
        boolean boolean13 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.pop();
        int int7 = stack0.size();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        boolean boolean9 = stack8.isEmpty();
        stack8.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack8.push((java.lang.Object) int14);
        stack8.clear();
        java.lang.Class<?> wildcardClass17 = stack8.getClass();
        java.lang.Class<?> wildcardClass18 = stack8.getClass();
        stack0.push((java.lang.Object) stack8);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        boolean boolean5 = stack0.isFull();
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        boolean boolean17 = stack7.isFull();
        stack7.clear();
        int int19 = stack7.size();
        stack0.push((java.lang.Object) int19);
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Class<?> wildcardClass23 = stack21.getClass();
        java.lang.Class<?> wildcardClass24 = stack21.getClass();
        boolean boolean25 = stack21.isFull();
        jbhembise.testauto.example3.Stack stack26 = new jbhembise.testauto.example3.Stack();
        int int27 = stack26.size();
        java.lang.Object obj28 = null;
        stack26.push(obj28);
        stack26.pop();
        int int31 = stack26.size();
        stack26.clear();
        stack26.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass35 = stack26.getClass();
        stack21.push((java.lang.Object) stack26);
        boolean boolean37 = stack26.isEmpty();
        int int38 = stack26.size();
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        java.lang.Object obj41 = null;
        stack39.push(obj41);
        stack39.pop();
        int int44 = stack39.size();
        stack39.clear();
        stack39.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass48 = stack39.getClass();
        boolean boolean49 = stack39.isFull();
        stack39.clear();
        jbhembise.testauto.example3.Stack stack51 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass52 = stack51.getClass();
        int int53 = stack51.size();
        stack51.push((java.lang.Object) (byte) 10);
        stack39.push((java.lang.Object) stack51);
        stack39.clear();
        stack26.push((java.lang.Object) stack39);
        java.lang.Class<?> wildcardClass59 = stack39.getClass();
        stack0.push((java.lang.Object) wildcardClass59);
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass19 = stack10.getClass();
        boolean boolean20 = stack10.isFull();
        stack10.clear();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass23 = stack22.getClass();
        int int24 = stack22.size();
        stack22.push((java.lang.Object) (byte) 10);
        stack10.push((java.lang.Object) stack22);
        java.lang.Class<?> wildcardClass28 = stack10.getClass();
        stack10.clear();
        stack0.push((java.lang.Object) stack10);
        java.lang.Object obj31 = stack0.last();
        int int32 = stack0.size();
        jbhembise.testauto.example3.Stack stack33 = new jbhembise.testauto.example3.Stack();
        int int34 = stack33.size();
        java.lang.Object obj35 = null;
        stack33.push(obj35);
        stack33.pop();
        int int38 = stack33.size();
        stack33.clear();
        stack33.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass42 = stack33.getClass();
        boolean boolean43 = stack33.isEmpty();
        stack33.clear();
        stack33.clear();
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        boolean boolean47 = stack46.isEmpty();
        stack46.clear();
        jbhembise.testauto.example3.Stack stack49 = new jbhembise.testauto.example3.Stack();
        int int50 = stack49.size();
        java.lang.Object obj51 = null;
        stack49.push(obj51);
        stack49.pop();
        int int54 = stack49.size();
        stack49.clear();
        stack49.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass58 = stack49.getClass();
        stack46.push((java.lang.Object) stack49);
        stack33.push((java.lang.Object) stack46);
        stack33.pop();
        java.lang.Class<?> wildcardClass62 = stack33.getClass();
        stack0.push((java.lang.Object) wildcardClass62);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        int int9 = stack3.size();
        int int10 = stack3.size();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        boolean boolean12 = stack11.isEmpty();
        boolean boolean13 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        stack14.push((java.lang.Object) (short) 10);
        stack11.push((java.lang.Object) stack14);
        boolean boolean19 = stack11.isEmpty();
        java.lang.Object obj20 = stack11.last();
        boolean boolean21 = stack11.isFull();
        boolean boolean22 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Class<?> wildcardClass25 = stack23.getClass();
        java.lang.Class<?> wildcardClass26 = stack23.getClass();
        boolean boolean27 = stack23.isFull();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        stack28.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass37 = stack28.getClass();
        stack23.push((java.lang.Object) stack28);
        stack28.pop();
        int int40 = stack28.size();
        boolean boolean41 = stack28.isEmpty();
        stack28.clear();
        stack11.push((java.lang.Object) stack28);
        stack3.push((java.lang.Object) stack11);
        stack11.clear();
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        int int47 = stack46.size();
        java.lang.Class<?> wildcardClass48 = stack46.getClass();
        java.lang.Class<?> wildcardClass49 = stack46.getClass();
        java.lang.Class<?> wildcardClass50 = stack46.getClass();
        boolean boolean51 = stack46.isEmpty();
        java.lang.Class<?> wildcardClass52 = stack46.getClass();
        boolean boolean53 = stack46.isFull();
        stack11.push((java.lang.Object) boolean53);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        int int12 = stack0.size();
        boolean boolean13 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        boolean boolean14 = stack13.isEmpty();
        stack13.clear();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Object obj18 = null;
        stack16.push(obj18);
        stack16.pop();
        int int21 = stack16.size();
        stack16.clear();
        stack16.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass25 = stack16.getClass();
        stack13.push((java.lang.Object) stack16);
        stack0.push((java.lang.Object) stack13);
        stack0.pop();
        int int29 = stack0.size();
        boolean boolean30 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        stack8.push((java.lang.Object) 10L);
        boolean boolean14 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        boolean boolean16 = stack0.isFull();
        boolean boolean17 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        stack0.clear();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Class<?> wildcardClass12 = stack10.getClass();
        java.lang.Class<?> wildcardClass13 = stack10.getClass();
        boolean boolean14 = stack10.isFull();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        int int16 = stack15.size();
        java.lang.Object obj17 = null;
        stack15.push(obj17);
        stack15.pop();
        int int20 = stack15.size();
        stack15.clear();
        stack15.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass24 = stack15.getClass();
        stack10.push((java.lang.Object) stack15);
        java.lang.Object obj26 = stack15.last();
        stack15.pop();
        stack0.push((java.lang.Object) stack15);
        int int29 = stack15.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + 10 + "'", obj26.equals(10));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        java.lang.Class<?> wildcardClass9 = stack3.getClass();
        java.lang.Object obj10 = stack3.last();
        java.lang.Object obj11 = stack3.last();
        boolean boolean12 = stack3.isFull();
        boolean boolean13 = stack3.isEmpty();
        java.lang.Object obj14 = stack3.last();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 10 + "'", obj10.equals((short) 10));
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 10 + "'", obj11.equals((short) 10));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + obj14 + "' != '" + (short) 10 + "'", obj14.equals((short) 10));
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        java.lang.Object obj18 = null;
        stack5.push(obj18);
        stack5.clear();
        boolean boolean21 = stack5.isFull();
        java.lang.Class<?> wildcardClass22 = stack5.getClass();
        stack5.clear();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass25 = stack24.getClass();
        boolean boolean26 = stack24.isEmpty();
        boolean boolean27 = stack24.isEmpty();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        stack28.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass37 = stack28.getClass();
        boolean boolean38 = stack28.isEmpty();
        stack28.clear();
        stack28.clear();
        jbhembise.testauto.example3.Stack stack41 = new jbhembise.testauto.example3.Stack();
        boolean boolean42 = stack41.isEmpty();
        stack41.clear();
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        int int45 = stack44.size();
        java.lang.Object obj46 = null;
        stack44.push(obj46);
        stack44.pop();
        int int49 = stack44.size();
        stack44.clear();
        stack44.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass53 = stack44.getClass();
        stack41.push((java.lang.Object) stack44);
        stack28.push((java.lang.Object) stack41);
        boolean boolean56 = stack28.isFull();
        boolean boolean57 = stack28.isFull();
        stack24.push((java.lang.Object) stack28);
        stack5.push((java.lang.Object) stack24);
        boolean boolean60 = stack24.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Class<?> wildcardClass16 = stack0.getClass();
        stack0.clear();
        boolean boolean18 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        boolean boolean4 = stack0.isEmpty();
        stack0.clear();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        boolean boolean7 = stack0.isEmpty();
        boolean boolean8 = stack0.isFull();
        int int9 = stack0.size();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Class<?> wildcardClass12 = stack10.getClass();
        java.lang.Class<?> wildcardClass13 = stack10.getClass();
        boolean boolean14 = stack10.isFull();
        int int15 = stack10.size();
        jbhembise.testauto.example3.Stack stack16 = new jbhembise.testauto.example3.Stack();
        int int17 = stack16.size();
        java.lang.Class<?> wildcardClass18 = stack16.getClass();
        java.lang.Class<?> wildcardClass19 = stack16.getClass();
        boolean boolean20 = stack16.isFull();
        boolean boolean21 = stack16.isFull();
        stack10.push((java.lang.Object) boolean21);
        boolean boolean23 = stack10.isFull();
        stack10.pop();
        stack0.push((java.lang.Object) stack10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        boolean boolean2 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        stack0.clear();
        stack0.clear();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        int int6 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        boolean boolean5 = stack0.isFull();
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        boolean boolean17 = stack7.isFull();
        stack7.clear();
        int int19 = stack7.size();
        stack0.push((java.lang.Object) int19);
        jbhembise.testauto.example3.Stack stack21 = new jbhembise.testauto.example3.Stack();
        int int22 = stack21.size();
        java.lang.Class<?> wildcardClass23 = stack21.getClass();
        java.lang.Class<?> wildcardClass24 = stack21.getClass();
        boolean boolean25 = stack21.isFull();
        jbhembise.testauto.example3.Stack stack26 = new jbhembise.testauto.example3.Stack();
        int int27 = stack26.size();
        java.lang.Object obj28 = null;
        stack26.push(obj28);
        stack26.pop();
        int int31 = stack26.size();
        stack26.clear();
        stack26.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass35 = stack26.getClass();
        stack21.push((java.lang.Object) stack26);
        boolean boolean37 = stack26.isEmpty();
        int int38 = stack26.size();
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        java.lang.Object obj41 = null;
        stack39.push(obj41);
        stack39.pop();
        int int44 = stack39.size();
        stack39.clear();
        stack39.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass48 = stack39.getClass();
        boolean boolean49 = stack39.isFull();
        stack39.clear();
        jbhembise.testauto.example3.Stack stack51 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass52 = stack51.getClass();
        int int53 = stack51.size();
        stack51.push((java.lang.Object) (byte) 10);
        stack39.push((java.lang.Object) stack51);
        stack39.clear();
        stack26.push((java.lang.Object) stack39);
        java.lang.Class<?> wildcardClass59 = stack39.getClass();
        stack0.push((java.lang.Object) wildcardClass59);
        jbhembise.testauto.example3.Stack stack61 = new jbhembise.testauto.example3.Stack();
        boolean boolean62 = stack61.isEmpty();
        boolean boolean63 = stack61.isEmpty();
        jbhembise.testauto.example3.Stack stack64 = new jbhembise.testauto.example3.Stack();
        boolean boolean65 = stack64.isEmpty();
        stack64.push((java.lang.Object) (short) 10);
        stack61.push((java.lang.Object) stack64);
        boolean boolean69 = stack61.isEmpty();
        java.lang.Class<?> wildcardClass70 = stack61.getClass();
        int int71 = stack61.size();
        java.lang.Object obj72 = stack61.last();
        stack0.push(obj72);
        int int74 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Object obj9 = stack0.last();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        java.lang.Class<?> wildcardClass13 = stack11.getClass();
        java.lang.Class<?> wildcardClass14 = stack11.getClass();
        java.lang.Class<?> wildcardClass15 = stack11.getClass();
        stack11.clear();
        java.lang.Class<?> wildcardClass17 = stack11.getClass();
        stack0.push((java.lang.Object) stack11);
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        stack19.clear();
        boolean boolean22 = stack19.isFull();
        stack19.clear();
        boolean boolean24 = stack19.isFull();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Class<?> wildcardClass27 = stack25.getClass();
        java.lang.Class<?> wildcardClass28 = stack25.getClass();
        stack19.push((java.lang.Object) wildcardClass28);
        stack0.push((java.lang.Object) wildcardClass28);
        jbhembise.testauto.example3.Stack stack31 = new jbhembise.testauto.example3.Stack();
        int int32 = stack31.size();
        java.lang.Class<?> wildcardClass33 = stack31.getClass();
        java.lang.Class<?> wildcardClass34 = stack31.getClass();
        boolean boolean35 = stack31.isFull();
        jbhembise.testauto.example3.Stack stack36 = new jbhembise.testauto.example3.Stack();
        int int37 = stack36.size();
        java.lang.Object obj38 = null;
        stack36.push(obj38);
        stack36.pop();
        int int41 = stack36.size();
        stack36.clear();
        stack36.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass45 = stack36.getClass();
        stack31.push((java.lang.Object) stack36);
        boolean boolean47 = stack36.isEmpty();
        java.lang.Class<?> wildcardClass48 = stack36.getClass();
        int int49 = stack36.size();
        stack0.push((java.lang.Object) int49);
        jbhembise.testauto.example3.Stack stack51 = new jbhembise.testauto.example3.Stack();
        int int52 = stack51.size();
        java.lang.Object obj53 = null;
        stack51.push(obj53);
        stack51.pop();
        int int56 = stack51.size();
        int int57 = stack51.size();
        jbhembise.testauto.example3.Stack stack58 = new jbhembise.testauto.example3.Stack();
        boolean boolean59 = stack58.isEmpty();
        boolean boolean60 = stack58.isEmpty();
        jbhembise.testauto.example3.Stack stack61 = new jbhembise.testauto.example3.Stack();
        boolean boolean62 = stack61.isEmpty();
        stack61.push((java.lang.Object) (short) 10);
        stack58.push((java.lang.Object) stack61);
        boolean boolean66 = stack58.isEmpty();
        java.lang.Object obj67 = stack58.last();
        boolean boolean68 = stack58.isFull();
        java.lang.Class<?> wildcardClass69 = stack58.getClass();
        stack51.push((java.lang.Object) stack58);
        stack0.push((java.lang.Object) stack58);
        java.lang.Object obj72 = stack58.last();
        int int73 = stack58.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 10 + "'", obj9.equals(10));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        boolean boolean7 = stack0.isFull();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        stack9.clear();
        stack9.push((java.lang.Object) true);
        boolean boolean14 = stack9.isEmpty();
        boolean boolean15 = stack9.isFull();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) int16);
        int int18 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        int int8 = stack7.size();
        java.lang.Object obj9 = null;
        stack7.push(obj9);
        stack7.pop();
        int int12 = stack7.size();
        stack7.clear();
        stack7.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass16 = stack7.getClass();
        stack0.push((java.lang.Object) wildcardClass16);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) true);
        boolean boolean23 = stack18.isEmpty();
        stack18.pop();
        stack0.push((java.lang.Object) stack18);
        jbhembise.testauto.example3.Stack stack26 = new jbhembise.testauto.example3.Stack();
        int int27 = stack26.size();
        stack26.clear();
        int int29 = stack26.size();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass39 = stack30.getClass();
        boolean boolean40 = stack30.isEmpty();
        stack30.clear();
        stack30.clear();
        jbhembise.testauto.example3.Stack stack43 = new jbhembise.testauto.example3.Stack();
        boolean boolean44 = stack43.isEmpty();
        stack43.clear();
        jbhembise.testauto.example3.Stack stack46 = new jbhembise.testauto.example3.Stack();
        int int47 = stack46.size();
        java.lang.Object obj48 = null;
        stack46.push(obj48);
        stack46.pop();
        int int51 = stack46.size();
        stack46.clear();
        stack46.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass55 = stack46.getClass();
        stack43.push((java.lang.Object) stack46);
        stack30.push((java.lang.Object) stack43);
        int int58 = stack43.size();
        stack26.push((java.lang.Object) int58);
        stack0.push((java.lang.Object) int58);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        java.lang.Object obj5 = stack0.last();
        stack0.clear();
        boolean boolean7 = stack0.isFull();
        boolean boolean8 = stack0.isFull();
        stack0.clear();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + true + "'", obj5.equals(true));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isEmpty();
        boolean boolean19 = stack5.isEmpty();
        stack5.clear();
        java.lang.Class<?> wildcardClass21 = stack5.getClass();
        boolean boolean22 = stack5.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.pop();
        int int7 = stack0.size();
        boolean boolean8 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        int int4 = stack3.size();
        java.lang.Class<?> wildcardClass5 = stack3.getClass();
        java.lang.Class<?> wildcardClass6 = stack3.getClass();
        java.lang.Class<?> wildcardClass7 = stack3.getClass();
        stack0.push((java.lang.Object) stack3);
        boolean boolean9 = stack3.isFull();
        stack3.clear();
        int int11 = stack3.size();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        boolean boolean9 = stack0.isEmpty();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = stack0.last();
        java.lang.Class<?> wildcardClass12 = stack0.getClass();
        boolean boolean13 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + 10 + "'", obj11.equals(10));
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isEmpty();
        java.lang.Object obj11 = null;
        stack0.push(obj11);
        java.lang.Class<?> wildcardClass13 = stack0.getClass();
        java.lang.Class<?> wildcardClass14 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        int int8 = stack0.size();
        java.lang.Object obj9 = stack0.last();
        int int10 = stack0.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 0 + "'", obj9.equals(0));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        java.lang.Class<?> wildcardClass9 = stack3.getClass();
        boolean boolean10 = stack3.isEmpty();
        jbhembise.testauto.example3.Stack stack11 = new jbhembise.testauto.example3.Stack();
        int int12 = stack11.size();
        stack11.clear();
        stack11.push((java.lang.Object) true);
        boolean boolean16 = stack11.isEmpty();
        int int17 = stack11.size();
        java.lang.Class<?> wildcardClass18 = stack11.getClass();
        boolean boolean19 = stack11.isEmpty();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        int int21 = stack20.size();
        java.lang.Class<?> wildcardClass22 = stack20.getClass();
        java.lang.Class<?> wildcardClass23 = stack20.getClass();
        stack20.push((java.lang.Object) 10L);
        stack20.pop();
        int int27 = stack20.size();
        stack11.push((java.lang.Object) stack20);
        java.lang.Class<?> wildcardClass29 = stack20.getClass();
        java.lang.Class<?> wildcardClass30 = stack20.getClass();
        stack3.push((java.lang.Object) wildcardClass30);
        stack3.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        stack0.clear();
        boolean boolean7 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass8 = stack0.getClass();
        boolean boolean9 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass19 = stack10.getClass();
        boolean boolean20 = stack10.isFull();
        stack10.clear();
        jbhembise.testauto.example3.Stack stack22 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass23 = stack22.getClass();
        int int24 = stack22.size();
        stack22.push((java.lang.Object) (byte) 10);
        stack10.push((java.lang.Object) stack22);
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        boolean boolean35 = stack28.isFull();
        java.lang.Class<?> wildcardClass36 = stack28.getClass();
        stack22.push((java.lang.Object) stack28);
        boolean boolean38 = stack22.isFull();
        java.lang.Object obj39 = stack22.last();
        stack22.pop();
        stack0.push((java.lang.Object) stack22);
        int int42 = stack0.size();
        boolean boolean43 = stack0.isFull();
        java.lang.Class<?> wildcardClass44 = stack0.getClass();
        boolean boolean45 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isEmpty();
        boolean boolean17 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        stack18.clear();
        boolean boolean21 = stack18.isFull();
        stack18.clear();
        stack18.clear();
        jbhembise.testauto.example3.Stack stack24 = new jbhembise.testauto.example3.Stack();
        int int25 = stack24.size();
        stack24.clear();
        stack24.push((java.lang.Object) true);
        boolean boolean29 = stack24.isEmpty();
        int int30 = stack24.size();
        int int31 = stack24.size();
        stack18.push((java.lang.Object) stack24);
        stack0.push((java.lang.Object) stack24);
        java.lang.Class<?> wildcardClass34 = stack0.getClass();
        int int35 = stack0.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass1 = stack0.getClass();
        int int2 = stack0.size();
        stack0.push((java.lang.Object) (byte) 10);
        int int5 = stack0.size();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        stack0.pop();
        jbhembise.testauto.example3.Stack stack8 = new jbhembise.testauto.example3.Stack();
        int int9 = stack8.size();
        java.lang.Class<?> wildcardClass10 = stack8.getClass();
        java.lang.Class<?> wildcardClass11 = stack8.getClass();
        boolean boolean12 = stack8.isFull();
        boolean boolean13 = stack8.isFull();
        stack0.push((java.lang.Object) stack8);
        java.lang.Class<?> wildcardClass15 = stack8.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        jbhembise.testauto.example3.Stack stack4 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass5 = stack4.getClass();
        int int6 = stack4.size();
        stack0.push((java.lang.Object) int6);
        int int8 = stack0.size();
        java.lang.Object obj9 = stack0.last();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Class<?> wildcardClass12 = stack10.getClass();
        java.lang.Class<?> wildcardClass13 = stack10.getClass();
        boolean boolean14 = stack10.isFull();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        int int16 = stack15.size();
        java.lang.Object obj17 = null;
        stack15.push(obj17);
        stack15.pop();
        int int20 = stack15.size();
        stack15.clear();
        stack15.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass24 = stack15.getClass();
        stack10.push((java.lang.Object) stack15);
        java.lang.Object obj26 = stack15.last();
        stack15.pop();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        boolean boolean29 = stack28.isEmpty();
        stack28.clear();
        boolean boolean31 = stack28.isFull();
        stack15.push((java.lang.Object) boolean31);
        stack0.push((java.lang.Object) stack15);
        java.lang.Object obj34 = stack0.last();
        java.lang.Object obj35 = stack0.last();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + obj9 + "' != '" + 0 + "'", obj9.equals(0));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + 10 + "'", obj26.equals(10));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        boolean boolean8 = stack0.isEmpty();
        java.lang.Object obj9 = stack0.last();
        boolean boolean10 = stack0.isFull();
        boolean boolean11 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        boolean boolean16 = stack12.isFull();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        int int18 = stack17.size();
        java.lang.Object obj19 = null;
        stack17.push(obj19);
        stack17.pop();
        int int22 = stack17.size();
        stack17.clear();
        stack17.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass26 = stack17.getClass();
        stack12.push((java.lang.Object) stack17);
        stack17.pop();
        int int29 = stack17.size();
        boolean boolean30 = stack17.isEmpty();
        stack17.clear();
        stack0.push((java.lang.Object) stack17);
        boolean boolean33 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) "hi!");
        int int4 = stack0.size();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Class<?> wildcardClass7 = stack5.getClass();
        java.lang.Class<?> wildcardClass8 = stack5.getClass();
        stack5.push((java.lang.Object) 10L);
        stack5.pop();
        boolean boolean12 = stack5.isFull();
        stack0.push((java.lang.Object) stack5);
        jbhembise.testauto.example3.Stack stack14 = new jbhembise.testauto.example3.Stack();
        boolean boolean15 = stack14.isEmpty();
        boolean boolean16 = stack14.isEmpty();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        boolean boolean18 = stack17.isEmpty();
        stack17.push((java.lang.Object) (short) 10);
        stack14.push((java.lang.Object) stack17);
        boolean boolean22 = stack14.isEmpty();
        java.lang.Object obj23 = stack14.last();
        int int24 = stack14.size();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Class<?> wildcardClass27 = stack25.getClass();
        java.lang.Class<?> wildcardClass28 = stack25.getClass();
        boolean boolean29 = stack25.isFull();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass39 = stack30.getClass();
        stack25.push((java.lang.Object) stack30);
        boolean boolean41 = stack25.isFull();
        int int42 = stack25.size();
        stack14.push((java.lang.Object) stack25);
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        int int45 = stack44.size();
        java.lang.Class<?> wildcardClass46 = stack44.getClass();
        java.lang.Class<?> wildcardClass47 = stack44.getClass();
        stack44.push((java.lang.Object) 10L);
        boolean boolean50 = stack44.isFull();
        stack25.push((java.lang.Object) boolean50);
        stack5.push((java.lang.Object) stack25);
        java.lang.Object obj53 = stack5.last();
        java.lang.Object obj54 = null;
        stack5.push(obj54);
        stack5.clear();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        boolean boolean5 = stack0.isFull();
        java.lang.Class<?> wildcardClass6 = stack0.getClass();
        boolean boolean7 = stack0.isFull();
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        boolean boolean10 = stack0.isFull();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass13 = stack12.getClass();
        int int14 = stack12.size();
        stack12.push((java.lang.Object) (byte) 10);
        stack0.push((java.lang.Object) stack12);
        boolean boolean18 = stack0.isFull();
        java.lang.Object obj19 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj19);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        java.lang.Object obj7 = stack0.last();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        boolean boolean10 = stack9.isEmpty();
        stack9.push((java.lang.Object) (short) 10);
        boolean boolean13 = stack9.isEmpty();
        stack9.clear();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        boolean boolean16 = stack15.isEmpty();
        stack15.clear();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        int int19 = stack18.size();
        java.lang.Object obj20 = null;
        stack18.push(obj20);
        stack18.pop();
        int int23 = stack18.size();
        stack18.clear();
        stack18.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass27 = stack18.getClass();
        stack15.push((java.lang.Object) stack18);
        stack18.clear();
        boolean boolean30 = stack18.isEmpty();
        int int31 = stack18.size();
        int int32 = stack18.size();
        stack9.push((java.lang.Object) int32);
        jbhembise.testauto.example3.Stack stack34 = new jbhembise.testauto.example3.Stack();
        boolean boolean35 = stack34.isEmpty();
        stack34.clear();
        boolean boolean37 = stack34.isFull();
        boolean boolean38 = stack34.isEmpty();
        java.lang.Class<?> wildcardClass39 = stack34.getClass();
        stack9.push((java.lang.Object) stack34);
        stack0.push((java.lang.Object) stack9);
        stack0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + 10L + "'", obj7.equals(10L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) "hi!");
        int int4 = stack0.size();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        int int11 = stack5.size();
        stack5.push((java.lang.Object) 1.0f);
        stack5.clear();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack0.last();
        java.lang.Object obj17 = stack0.last();
        boolean boolean18 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack5.isEmpty();
        java.lang.Class<?> wildcardClass17 = stack5.getClass();
        java.lang.Class<?> wildcardClass18 = stack5.getClass();
        java.lang.Object obj19 = null;
        stack5.push(obj19);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        boolean boolean2 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack3 = new jbhembise.testauto.example3.Stack();
        boolean boolean4 = stack3.isEmpty();
        stack3.push((java.lang.Object) (short) 10);
        stack0.push((java.lang.Object) stack3);
        int int8 = stack3.size();
        java.lang.Class<?> wildcardClass9 = stack3.getClass();
        java.lang.Object obj10 = stack3.last();
        java.lang.Object obj11 = stack3.last();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        boolean boolean13 = stack12.isEmpty();
        boolean boolean14 = stack12.isEmpty();
        jbhembise.testauto.example3.Stack stack15 = new jbhembise.testauto.example3.Stack();
        boolean boolean16 = stack15.isEmpty();
        stack15.push((java.lang.Object) (short) 10);
        stack12.push((java.lang.Object) stack15);
        boolean boolean20 = stack12.isEmpty();
        java.lang.Object obj21 = stack12.last();
        int int22 = stack12.size();
        jbhembise.testauto.example3.Stack stack23 = new jbhembise.testauto.example3.Stack();
        int int24 = stack23.size();
        java.lang.Class<?> wildcardClass25 = stack23.getClass();
        java.lang.Class<?> wildcardClass26 = stack23.getClass();
        boolean boolean27 = stack23.isFull();
        jbhembise.testauto.example3.Stack stack28 = new jbhembise.testauto.example3.Stack();
        int int29 = stack28.size();
        java.lang.Object obj30 = null;
        stack28.push(obj30);
        stack28.pop();
        int int33 = stack28.size();
        stack28.clear();
        stack28.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass37 = stack28.getClass();
        stack23.push((java.lang.Object) stack28);
        boolean boolean39 = stack23.isFull();
        int int40 = stack23.size();
        stack12.push((java.lang.Object) stack23);
        boolean boolean42 = stack12.isFull();
        stack3.push((java.lang.Object) boolean42);
        boolean boolean44 = stack3.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + obj10 + "' != '" + (short) 10 + "'", obj10.equals((short) 10));
        org.junit.Assert.assertTrue("'" + obj11 + "' != '" + (short) 10 + "'", obj11.equals((short) 10));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        stack5.pop();
        jbhembise.testauto.example3.Stack stack17 = new jbhembise.testauto.example3.Stack();
        boolean boolean18 = stack17.isEmpty();
        boolean boolean19 = stack17.isEmpty();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        boolean boolean21 = stack20.isEmpty();
        stack20.push((java.lang.Object) (short) 10);
        stack17.push((java.lang.Object) stack20);
        boolean boolean25 = stack17.isEmpty();
        java.lang.Object obj26 = stack17.last();
        int int27 = stack17.size();
        boolean boolean28 = stack17.isFull();
        stack5.push((java.lang.Object) boolean28);
        stack5.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        java.lang.Object obj8 = stack0.last();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + obj8 + "' != '" + true + "'", obj8.equals(true));
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass19 = stack18.getClass();
        int int20 = stack18.size();
        stack18.push((java.lang.Object) (byte) 10);
        java.lang.Object obj23 = stack18.last();
        boolean boolean24 = stack18.isFull();
        stack0.push((java.lang.Object) stack18);
        boolean boolean26 = stack18.isEmpty();
        int int27 = stack18.size();
        int int28 = stack18.size();
        stack18.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (byte) 10 + "'", obj23.equals((byte) 10));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        stack0.push((java.lang.Object) 10L);
        boolean boolean6 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack7 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass8 = stack7.getClass();
        int int9 = stack7.size();
        stack0.push((java.lang.Object) int9);
        boolean boolean11 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack12 = new jbhembise.testauto.example3.Stack();
        int int13 = stack12.size();
        java.lang.Class<?> wildcardClass14 = stack12.getClass();
        java.lang.Class<?> wildcardClass15 = stack12.getClass();
        java.lang.Class<?> wildcardClass16 = stack12.getClass();
        stack12.clear();
        stack12.clear();
        jbhembise.testauto.example3.Stack stack19 = new jbhembise.testauto.example3.Stack();
        int int20 = stack19.size();
        java.lang.Object obj21 = null;
        stack19.push(obj21);
        stack19.pop();
        int int24 = stack19.size();
        stack19.clear();
        stack19.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass28 = stack19.getClass();
        stack12.push((java.lang.Object) wildcardClass28);
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) true);
        boolean boolean35 = stack30.isEmpty();
        stack30.pop();
        stack12.push((java.lang.Object) stack30);
        stack0.push((java.lang.Object) stack12);
        jbhembise.testauto.example3.Stack stack39 = new jbhembise.testauto.example3.Stack();
        int int40 = stack39.size();
        java.lang.Class<?> wildcardClass41 = stack39.getClass();
        java.lang.Class<?> wildcardClass42 = stack39.getClass();
        boolean boolean43 = stack39.isFull();
        jbhembise.testauto.example3.Stack stack44 = new jbhembise.testauto.example3.Stack();
        int int45 = stack44.size();
        java.lang.Object obj46 = null;
        stack44.push(obj46);
        stack44.pop();
        int int49 = stack44.size();
        stack44.clear();
        stack44.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass53 = stack44.getClass();
        stack39.push((java.lang.Object) stack44);
        jbhembise.testauto.example3.Stack stack55 = new jbhembise.testauto.example3.Stack();
        int int56 = stack55.size();
        java.lang.Object obj57 = null;
        stack55.push(obj57);
        java.lang.Class<?> wildcardClass59 = stack55.getClass();
        stack44.push((java.lang.Object) wildcardClass59);
        stack0.push((java.lang.Object) stack44);
        boolean boolean62 = stack44.isFull();
        java.lang.Class<?> wildcardClass63 = stack44.getClass();
        boolean boolean64 = stack44.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        java.lang.Object obj16 = stack5.last();
        stack5.pop();
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        boolean boolean19 = stack18.isEmpty();
        stack18.clear();
        boolean boolean21 = stack18.isFull();
        stack5.push((java.lang.Object) boolean21);
        boolean boolean23 = stack5.isFull();
        boolean boolean24 = stack5.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + obj16 + "' != '" + 10 + "'", obj16.equals(10));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        stack5.pop();
        int int17 = stack5.size();
        boolean boolean18 = stack5.isFull();
        boolean boolean19 = stack5.isEmpty();
        boolean boolean20 = stack5.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        java.lang.Object obj5 = stack0.last();
        stack0.clear();
        boolean boolean7 = stack0.isFull();
        boolean boolean8 = stack0.isFull();
        stack0.clear();
        java.lang.Class<?> wildcardClass10 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + obj5 + "' != '" + true + "'", obj5.equals(true));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        boolean boolean4 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Class<?> wildcardClass7 = stack5.getClass();
        java.lang.Class<?> wildcardClass8 = stack5.getClass();
        boolean boolean9 = stack5.isFull();
        jbhembise.testauto.example3.Stack stack10 = new jbhembise.testauto.example3.Stack();
        int int11 = stack10.size();
        java.lang.Object obj12 = null;
        stack10.push(obj12);
        stack10.pop();
        int int15 = stack10.size();
        stack10.clear();
        stack10.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass19 = stack10.getClass();
        stack5.push((java.lang.Object) stack10);
        stack10.pop();
        int int22 = stack10.size();
        boolean boolean23 = stack10.isEmpty();
        stack0.push((java.lang.Object) boolean23);
        boolean boolean25 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        boolean boolean1 = stack0.isEmpty();
        stack0.push((java.lang.Object) (short) 10);
        stack0.clear();
        stack0.clear();
        boolean boolean6 = stack0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) true);
        boolean boolean5 = stack0.isEmpty();
        int int6 = stack0.size();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isEmpty();
        jbhembise.testauto.example3.Stack stack9 = new jbhembise.testauto.example3.Stack();
        int int10 = stack9.size();
        java.lang.Class<?> wildcardClass11 = stack9.getClass();
        java.lang.Class<?> wildcardClass12 = stack9.getClass();
        stack9.push((java.lang.Object) 10L);
        stack9.pop();
        int int16 = stack9.size();
        stack0.push((java.lang.Object) stack9);
        jbhembise.testauto.example3.Stack stack18 = new jbhembise.testauto.example3.Stack();
        java.lang.Class<?> wildcardClass19 = stack18.getClass();
        int int20 = stack18.size();
        stack18.push((java.lang.Object) (byte) 10);
        java.lang.Object obj23 = stack18.last();
        boolean boolean24 = stack18.isFull();
        stack0.push((java.lang.Object) stack18);
        boolean boolean26 = stack18.isEmpty();
        int int27 = stack18.size();
        int int28 = stack18.size();
        int int29 = stack18.size();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + obj23 + "' != '" + (byte) 10 + "'", obj23.equals((byte) 10));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        stack0.clear();
        stack0.push((java.lang.Object) 10);
        int int9 = stack0.size();
        boolean boolean10 = stack0.isEmpty();
        stack0.pop();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack13 = new jbhembise.testauto.example3.Stack();
        int int14 = stack13.size();
        java.lang.Object obj15 = null;
        stack13.push(obj15);
        stack13.pop();
        int int18 = stack13.size();
        stack13.clear();
        stack13.push((java.lang.Object) 10);
        boolean boolean22 = stack13.isEmpty();
        boolean boolean23 = stack13.isEmpty();
        java.lang.Object obj24 = stack13.last();
        java.lang.Class<?> wildcardClass25 = stack13.getClass();
        java.lang.Object obj26 = stack13.last();
        stack0.push((java.lang.Object) stack13);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + obj24 + "' != '" + 10 + "'", obj24.equals(10));
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + obj26 + "' != '" + 10 + "'", obj26.equals(10));
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        java.lang.Class<?> wildcardClass4 = stack0.getClass();
        boolean boolean5 = stack0.isFull();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Object obj2 = null;
        stack0.push(obj2);
        stack0.pop();
        int int5 = stack0.size();
        int int6 = stack0.size();
        stack0.push((java.lang.Object) 1.0f);
        boolean boolean9 = stack0.isEmpty();
        java.lang.Class<?> wildcardClass10 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        java.lang.Class<?> wildcardClass2 = stack0.getClass();
        java.lang.Class<?> wildcardClass3 = stack0.getClass();
        boolean boolean4 = stack0.isFull();
        jbhembise.testauto.example3.Stack stack5 = new jbhembise.testauto.example3.Stack();
        int int6 = stack5.size();
        java.lang.Object obj7 = null;
        stack5.push(obj7);
        stack5.pop();
        int int10 = stack5.size();
        stack5.clear();
        stack5.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass14 = stack5.getClass();
        stack0.push((java.lang.Object) stack5);
        boolean boolean16 = stack0.isFull();
        boolean boolean17 = stack0.isEmpty();
        stack0.clear();
        stack0.clear();
        jbhembise.testauto.example3.Stack stack20 = new jbhembise.testauto.example3.Stack();
        boolean boolean21 = stack20.isEmpty();
        stack20.clear();
        boolean boolean23 = stack20.isFull();
        boolean boolean24 = stack20.isEmpty();
        jbhembise.testauto.example3.Stack stack25 = new jbhembise.testauto.example3.Stack();
        int int26 = stack25.size();
        java.lang.Class<?> wildcardClass27 = stack25.getClass();
        java.lang.Class<?> wildcardClass28 = stack25.getClass();
        boolean boolean29 = stack25.isFull();
        jbhembise.testauto.example3.Stack stack30 = new jbhembise.testauto.example3.Stack();
        int int31 = stack30.size();
        java.lang.Object obj32 = null;
        stack30.push(obj32);
        stack30.pop();
        int int35 = stack30.size();
        stack30.clear();
        stack30.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass39 = stack30.getClass();
        stack25.push((java.lang.Object) stack30);
        stack30.pop();
        int int42 = stack30.size();
        boolean boolean43 = stack30.isEmpty();
        stack20.push((java.lang.Object) boolean43);
        stack20.pop();
        stack0.push((java.lang.Object) stack20);
        stack0.pop();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        jbhembise.testauto.example3.Stack stack0 = new jbhembise.testauto.example3.Stack();
        int int1 = stack0.size();
        stack0.clear();
        boolean boolean3 = stack0.isFull();
        stack0.clear();
        boolean boolean5 = stack0.isFull();
        stack0.clear();
        java.lang.Class<?> wildcardClass7 = stack0.getClass();
        boolean boolean8 = stack0.isFull();
        java.lang.Class<?> wildcardClass9 = stack0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }
}

